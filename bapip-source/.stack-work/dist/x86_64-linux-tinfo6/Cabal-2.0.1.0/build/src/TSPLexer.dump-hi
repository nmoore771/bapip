
==================== FINAL INTERFACE ====================
2022-04-01 02:15:54.647190907 UTC

interface BAPIP-0.1.0.0-IeoLXJJUcqyHz2cFv4cIMD:TSPLexer 8022
  interface hash: ca0cc07a767156edba9caf2ac9686b07
  ABI hash: 50a24e203925f9f6caa2cb8c46316854
  export-list hash: 15b83e96609bd39ec480b9a5b3577709
  orphan hash: 0b37b89b35ba8c6b55bf2d805b6b59a4
  flag hash: aa1a6078e28560b315026c49539ca393
  sig of: Nothing
  used TH splices: False
  where
exports:
  TSPLexer.assembleTSPpackage
  TSPLexer.binary
  TSPLexer.checkCapitalization
  TSPLexer.field
  TSPLexer.fields
  TSPLexer.helper
  TSPLexer.helper2
  TSPLexer.helper3
  TSPLexer.idPath
  TSPLexer.identifier
  TSPLexer.importsTSP
  TSPLexer.intercalatedBy
  TSPLexer.lexeme
  TSPLexer.lexer
  TSPLexer.methodArgs
  TSPLexer.name
  TSPLexer.natural
  TSPLexer.parens
  TSPLexer.parseTSP
  TSPLexer.permIterator
  TSPLexer.postfix
  TSPLexer.prefix
  TSPLexer.pvsDef
  TSPLexer.pvsExpression
  TSPLexer.pvsStateInst
  TSPLexer.pvsStateInstantiator
  TSPLexer.pvsType
  TSPLexer.reserved
  TSPLexer.reservedOp
  TSPLexer.runTSPparser
  TSPLexer.semi
  TSPLexer.sepEquality
  TSPLexer.sortPerm
  TSPLexer.subExpr
  TSPLexer.swapper
  TSPLexer.swappers
  TSPLexer.symbol
  TSPLexer.table
  TSPLexer.terminatedString
  TSPLexer.terminator
  TSPLexer.timeRefID
  TSPLexer.timelineReference
  TSPLexer.tspDefInst
  TSPLexer.tspFuncDec
  TSPLexer.tspLine
  TSPLexer.tspMacro
  TSPLexer.tspPermParser
  TSPLexer.tspPreamble
  TSPLexer.tspTable
  TSPLexer.typedec
  TSPLexer.varDec
  TSPLexer.wchar
  TSPLexer.whiteSpace
  TSPLexer.wstring
  TSPLexer.xintercalatedBy
  TSPLexer.xterminatedString
module dependencies: LexerTypes LiteralLexer
package dependencies: array-0.5.2.0 base-4.10.1.0 binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.10.2 deepseq-1.4.3.0
                      ghc-prim-0.5.1.1 integer-gmp-1.0.1.0 mtl-2.2.2 parsec-3.1.13.0
                      text-1.2.3.0 transformers-0.5.2.0
orphans: text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         transformers-0.5.2.0:Control.Monad.Trans.Error
         base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
import  -/  LexerTypes ea2837b19066a45c4d666600c2728879
  exports: 24099e1d1a603a4b110bad9ae51c8629
  Add 36538cb76d628c0acd4a4cf71078cdb4
  And e22c6395cd4b23e2790ce49d4543b755
  BitwiseAND 7e507419ece991ad7ce0f2956c9aa213
  BitwiseOR 302153d3c58ce21102a7455a65b88105
  BitwiseXOR c9cc2432ec74bae8bc7895c9ccd99e77
  Divide 4e0e22b926cf6cc14d39a04fc286fe36
  Equals 61c8e1ea5b6b779f6da6a09d78deda00
  Exp_FunctionCall e2d5fa7c978122cee21bc7c2633d698e
  Expression 6b58178d3226f5dcfa379df74cd7f6b5
  Greater 6b9689f45536195da18383e5326b97a8
  GreaterEquals 6d9a338a7609c353aeb3bdce17362ec6
  ID 162ab617d5709f209b382d729b114647
  ID_Path 6b58178d3226f5dcfa379df74cd7f6b5
  ID_Submod_Struct 463de23e5c7996a7d7e8c379f21535c2
  ID_Vect ac4504a9362ebe24ddb26ea1baec8978
  Identifier f34a421e3991b38924384ea37d474049
  LShift a6a4b281298d1b8a75f764462c15d6a1
  Less d59e317442af542f318ae1618692d2bb
  LessEquals 0253bd2afe07783f24a5580881609c67
  LitVoid 78667fcb5e09de66105a1d72dda08978
  Literal 337aee2c7f9cd9dd951f930c9b9dbe73
  Literal 6b58178d3226f5dcfa379df74cd7f6b5
  Modulo ef51c13e1735d14b66d320257e21a593
  Multiply 2e1955b341ad5724899f6d2460f61d10
  N_Time 26c4b688e65cba63574a39af3f33761b
  Negative 9890405dd1a0c5764d6155433ae9484e
  Not 22d1103f357094a67193828970d4b051
  NotEquals ca898c161ed932983a471d3d692c86bf
  Or 29cc9a489f4941fb8f760730dd0dff52
  PVSFunction bd8391fe6aa4b9aeeace864d9f179cb4
  PVSInstDef 4cd52ce8483a87744e359b1843bfd9d3
  PVSMacro 352e0a39a83babb6fa7b7da1356b7d31
  PVSType 5293579e9cbbf6986dcf46fee97434cb
  PVSTypeDef 263d5987ddec79fadf35563de5be9f0c
  PVS_Bit 22acc7100431b38432c9c3c07d2b2a41
  PVS_Bool 9e0621e80245a1f11c51a0ee4357c949
  PVS_Custom 3b7a0ad00510c97e677113fc5dcc2393
  PVS_Enumeration 4c8f7f14ccc0ee1299e205bd31c7048b
  PVS_Field 907934b371d6291fd472d601c345122a
  PVS_Int 00b5ec9b246ed8c7086e269060a6072e
  PVS_Real 92e906bfc31d0cbaed8d7427f91679ca
  PVS_Struct 3e464b1a1f5a13bed37a0a89c99f7fb7
  PVS_Synonym 8a9d46d2cacf21d3788db9f5d6b38bde
  PVS_UInt db0d5cc35fbfe6395496e1c360f6dd95
  RShift 6a6e1d65a10e1f1cbb73413d5cb25175
  Replacement e8e0dabb470ed6767d6eeba2a104c650
  Subtract 8f6065598203e3e8d21db427badb1bf6
  TSPLine b93aef0411d044ff4424aa4a41963594
  TSPTable 8b6d1afccd9c3b1fa2d8d2ad6c723805
  TSPpackage 2d5c3029b16a6912eef8464986ca3624
  TSPpackage c811cfd5a607fccc3baae6462b8eca1f
  TVarDec e24892224e84f179f5d881ea6ad6b8d1
  Temporal 4df2e074d05690b7f852eb8a56267ac6
  Tperm 499eb4930fd8106234e7e1fbef253526
  defInsts c811cfd5a607fccc3baae6462b8eca1f
  macros c811cfd5a607fccc3baae6462b8eca1f
  tName c811cfd5a607fccc3baae6462b8eca1f
  tsp_funcs c811cfd5a607fccc3baae6462b8eca1f
  tsps c811cfd5a607fccc3baae6462b8eca1f
  typedefs c811cfd5a607fccc3baae6462b8eca1f
  varDecs c811cfd5a607fccc3baae6462b8eca1f
import  -/  LiteralLexer 0b73be9036880bc1f34322d242c65891
  exports: 235244a75b7c16e689bc51e516ac2075
  literalParser 51d3bf7feff4657aef175daaec09aabf
import  -/  base-4.10.1.0:Control.Applicative 99577a9c463ffe4790a1d37547a345bd
import  -/  base-4.10.1.0:Data.Char fe4e3458190deeac19969ce15e33bed9
import  -/  base-4.10.1.0:Data.Either d7dae5d9bf298dee616e465c14b5d60e
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:Data.Functor.Identity aae7a3124ea5423ea52291a312b43abe
import  -/  base-4.10.1.0:Data.List 4ab7fa2a1b87502b23af891a384f0506
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Err 514b3a24b22e9d7d731c2d0d02d10842
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:GHC.Unicode 49c9de4fffed0d9be65aaeb6a60b757c
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  parsec-3.1.13.0:Text.Parsec.Char 371945669b8d0d7b47c23a0f6a5ef8bd
import  -/  parsec-3.1.13.0:Text.Parsec.Combinator a9d32d552216694542f7add4a650edb4
import  -/  parsec-3.1.13.0:Text.Parsec.Expr ac2e229e2eb8ee8c719d8180e7ffb8a1
import  -/  parsec-3.1.13.0:Text.Parsec.Prim c82c33c3fb64193922044d289f294cee
import  -/  parsec-3.1.13.0:Text.Parsec.String f07e797437c8a90a9122d02821378fab
import  -/  parsec-3.1.13.0:Text.Parsec.Token ea6999194c02c3389b81fbfdc3e7adca
import  -/  parsec-3.1.13.0:Text.ParserCombinators.Parsec 8f4b3d3ba544def2a09b8a76f30f0457
import  -/  parsec-3.1.13.0:Text.ParserCombinators.Parsec.Expr afb77205a543eb0644b768d06e6ef309
import  -/  parsec-3.1.13.0:Text.ParserCombinators.Parsec.Language 665b9441e29ce07b8b5ac59c18b2159e
import  -/  parsec-3.1.13.0:Text.ParserCombinators.Parsec.Perm d88e4d792527d70149639eb277384f88
import  -/  parsec-3.1.13.0:Text.ParserCombinators.Parsec.Prim 29032994c0fc914778c098b74d366d48
import  -/  parsec-3.1.13.0:Text.ParserCombinators.Parsec.Token af0b15978a2040b0d68f587ef711bcb6
9b2a58c0e581a537b5bc301ead608d6d
  $s$fStream[]mtok ::
    Text.Parsec.Prim.Stream [tok] Data.Functor.Identity.Identity tok
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ tok.
                  @ [tok]
                  @ Data.Functor.Identity.Identity
                  @ tok
                  Data.Functor.Identity.$fMonadIdentity
                  (TSPLexer.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok) -}
1f239f519ef49249abe4dc5ef3604b78
  $s$fStream[]mtok_$s$fStream[]mtok_$cuncons ::
    [tok]
    -> Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok]))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ tok (ds :: [tok]) ->
                 case ds of wild {
                   []
                   -> (GHC.Base.Nothing @ (tok, [tok]))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <GHC.Base.Maybe (tok, [tok])>_R))
                   : t ts
                   -> (GHC.Base.Just @ (tok, [tok]) (t, ts))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <GHC.Base.Maybe (tok, [tok])>_R)) }) -}
4de3e4b3922906f71af0084da2c8398f
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TSPLexer.$trModule3
                   TSPLexer.$trModule1) -}
8679cd09dd7b575e249bc277808230a5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TSPLexer.$trModule2) -}
674e66503b61e5d921f849e9ad8a0137
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TSPLexer"#) -}
9dcac966b17673ae84864980c7b166ed
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TSPLexer.$trModule4) -}
8b96be4efb4b1110ec4325ef565bb9b7
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("BAPIP-0.1.0.0-IeoLXJJUcqyHz2cFv4cIMD"#) -}
81f46f02dd7c1435c0429e55901dbe60
  $wbinary ::
    GHC.Base.String
    -> GHC.Types.Char
    -> (a -> a -> a)
    -> Text.Parsec.Expr.Assoc
    -> (# Text.Parsec.String.GenParser GHC.Types.Char st (a -> a -> a),
          Text.Parsec.Expr.Assoc #)
  {- Arity: 4, Strictness: <L,U><L,U(U)><L,U><L,U>, Inline: [0] -}
ba5f0c73a9c46a2356e7998303738228
  $wk ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String, LexerTypes.Expression)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((GHC.Base.String, LexerTypes.Expression)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Inline: [0],
     Unfolding: (\ @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: (GHC.Base.String, LexerTypes.Expression)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: (GHC.Base.String, LexerTypes.Expression)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 case TSPLexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds1
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Base.String>_R)
                   @ b
                   w
                   (\ (x3 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    TSPLexer.pvsStateInst5
                      x3
                      @ b
                      s2
                      w1
                      w2
                      (\ (x4 :: (GHC.Base.String, LexerTypes.Expression))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       w1 x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w2 (Text.Parsec.Error.mergeError err err')))
                   w2
                   (\ (x3 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    TSPLexer.pvsStateInst5
                      x3
                      @ b
                      s2
                      w1
                      w2
                      (\ (x4 :: (GHC.Base.String, LexerTypes.Expression))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       w3 x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       w4 (Text.Parsec.Error.mergeError err err')))
                   w4 }) -}
7d2c75346cdaa582c58d5eef756624ec
  $wlvl ::
    Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Text.Parsec.Error.Message]
    -> a
  {- Arity: 4, Strictness: <B,1*U><B,U><B,U><B,1*U>x, Inline: [0] -}
f7dbbbcaf9396bfe8b9e72872950d2e7
  $wn ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> ((GHC.Base.String, (LexerTypes.ID_Path, LexerTypes.Temporal),
         LexerTypes.Expression, [LexerTypes.Replacement], [GHC.Base.String],
         [LexerTypes.TSPLine])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><L,U><L,U><L,U><L,C(U)>,
     Inline: [0] -}
400491b836a4165f9253d95a49e559b7
  $wp ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><L,U><L,U><L,U><L,C(U)>,
     Inline: [0] -}
4e09ea2d7985fd9b85d7eb4a3a1c8119
  $wp1 ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> ((GHC.Base.String, LexerTypes.PVSType, LexerTypes.Expression)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Base.String, LexerTypes.PVSType, LexerTypes.Expression)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <L,U><L,U><S,U><S,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0] -}
ac7730f82c5bbcce02bb2e386be11494
  $wp2 ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><L,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
f069fd1b43e7832a925e932aa13c5789
  $wp3 ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> ((GHC.Base.String, (LexerTypes.ID_Path, LexerTypes.Temporal),
         LexerTypes.Expression, [LexerTypes.Replacement], [GHC.Base.String],
         [LexerTypes.TSPLine])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><L,U><L,U><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b
                   (ww :: [GHC.Types.Char])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: ())
                   (w :: (GHC.Base.String, (LexerTypes.ID_Path, LexerTypes.Temporal),
                          LexerTypes.Expression, [LexerTypes.Replacement], [GHC.Base.String],
                          [LexerTypes.TSPLine])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b)
                   (w1 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 let {
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                     {- Arity: 1, Strictness: <L,U(U(U,U,U),U)> -}
                   = \ (err :: Text.Parsec.Error.ParseError) ->
                     TSPLexer.$wn
                       @ b
                       ww
                       ww1
                       ww2
                       ww3
                       ww4
                       w
                       w1
                       (\ (err' :: Text.Parsec.Error.ParseError) ->
                        w2 (Text.Parsec.Error.mergeError err err'))
                 } in
                 TSPLexer.$wp4 @ b ww ww1 ww2 ww3 ww4 w eerr eerr) -}
a412e08eb3199c7c07cf95d5999e1494
  $wp4 ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> ((GHC.Base.String, (LexerTypes.ID_Path, LexerTypes.Temporal),
         LexerTypes.Expression, [LexerTypes.Replacement], [GHC.Base.String],
         [LexerTypes.TSPLine])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><L,U><L,U><L,U><L,C(U)>,
     Inline: [0] -}
8473dabcaa45b15da0d9ae676518acab
  $wp5 ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (LexerTypes.PVSTypeDef
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (LexerTypes.PVSTypeDef
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 9,
     Strictness: <L,U><L,U><S,U><S,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0] -}
c3ef6cf318a5c105d84b734baee08c0c
  $wparseTSP ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (LexerTypes.TSPpackage
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><L,U><L,U><L,U><L,C(U)>,
     Inline: [0] -}
df3112cf66a965fd31fc4aeb4abafcc7
  $wpostfix ::
    GHC.Base.String
    -> GHC.Types.Char
    -> (a -> a)
    -> (# Text.Parsec.String.GenParser GHC.Types.Char st (a -> a) #)
  {- Arity: 3, Strictness: <L,U><L,U(U)><L,U>, Inline: [0],
     Unfolding: (\ @ a
                   @ st
                   (w :: GHC.Base.String)
                   (w1 :: GHC.Types.Char)
                   (w2 :: a -> a) ->
                 (# (Text.Parsec.Prim.$fApplicativeParsecT2
                       @ [GHC.Types.Char]
                       @ st
                       @ Data.Functor.Identity.Identity
                       @ GHC.Base.String
                       @ (a -> a)
                       (Text.Parsec.Char.string1
                          @ [GHC.Types.Char]
                          @ Data.Functor.Identity.Identity
                          @ st
                          (TSPLexer.$s$fStream[]mtok @ GHC.Types.Char)
                          w)
                         `cast`
                       (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                 <[GHC.Types.Char]>_R
                                 <st>_R
                                 <Data.Functor.Identity.Identity>_R
                                 <[GHC.Types.Char]>_R))
                       (Text.Parsec.Prim.$fApplicativeParsecT2
                          @ [GHC.Types.Char]
                          @ st
                          @ Data.Functor.Identity.Identity
                          @ ()
                          @ (a -> a)
                          (let {
                             w3 :: Text.Parsec.Prim.ParsecT
                                     [GHC.Types.Char]
                                     st
                                     Data.Functor.Identity.Identity
                                     GHC.Types.Char
                             = Text.Parsec.Char.char
                                 @ [GHC.Types.Char]
                                 @ Data.Functor.Identity.Identity
                                 @ st
                                 (TSPLexer.$s$fStream[]mtok @ GHC.Types.Char)
                                 w1
                           } in
                           (\ @ b
                              (w4 :: Text.Parsec.Prim.State [GHC.Types.Char] st)
                              (w5 :: ()
                                     -> Text.Parsec.Prim.State [GHC.Types.Char] st
                                     -> Text.Parsec.Error.ParseError
                                     -> Data.Functor.Identity.Identity b)
                              (w6 :: Text.Parsec.Error.ParseError
                                     -> Data.Functor.Identity.Identity b)
                              (w7 :: ()
                                     -> Text.Parsec.Prim.State [GHC.Types.Char] st
                                     -> Text.Parsec.Error.ParseError
                                     -> Data.Functor.Identity.Identity b)
                              (w8 :: Text.Parsec.Error.ParseError
                                     -> Data.Functor.Identity.Identity b) ->
                            Text.Parsec.Combinator.$wnotFollowedBy
                              @ [GHC.Types.Char]
                              @ Data.Functor.Identity.Identity
                              @ GHC.Types.Char
                              @ GHC.Types.Char
                              @ st
                              GHC.Show.$fShowChar
                              w3
                              @ b
                              w4
                              w7
                              w8)
                             `cast`
                           (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                     <[GHC.Types.Char]>_R
                                     <st>_R
                                     <Data.Functor.Identity.Identity>_R
                                     <()>_R)))
                          (Text.Parsec.Prim.$fApplicativeParsecT5
                             @ (a -> a)
                             @ [GHC.Types.Char]
                             @ st
                             @ Data.Functor.Identity.Identity
                             w2)
                            `cast`
                          (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                    <[GHC.Types.Char]>_R
                                    <st>_R
                                    <Data.Functor.Identity.Identity>_R
                                    <a -> a>_R)))
                         `cast`
                       (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                 <[GHC.Types.Char]>_R
                                 <st>_R
                                 <Data.Functor.Identity.Identity>_R
                                 <a -> a>_R)))
                      `cast`
                    (Sym (Text.Parsec.Prim.N:ParsecT[0]
                              <[GHC.Types.Char]>_R
                              <st>_R
                              <Data.Functor.Identity.Identity>_R
                              <a -> a>_R)) #)) -}
429787aad8ea0e732e5b9fa34ccba109
  $wprefix ::
    GHC.Base.String
    -> GHC.Types.Char
    -> (a -> a)
    -> (# Text.Parsec.String.GenParser GHC.Types.Char st (a -> a) #)
  {- Arity: 3, Strictness: <L,U><L,U(U)><L,U>, Inline: [0],
     Unfolding: (\ @ a
                   @ st
                   (w :: GHC.Base.String)
                   (w1 :: GHC.Types.Char)
                   (w2 :: a -> a) ->
                 (# (Text.Parsec.Prim.$fApplicativeParsecT2
                       @ [GHC.Types.Char]
                       @ st
                       @ Data.Functor.Identity.Identity
                       @ GHC.Base.String
                       @ (a -> a)
                       (Text.Parsec.Char.string1
                          @ [GHC.Types.Char]
                          @ Data.Functor.Identity.Identity
                          @ st
                          (TSPLexer.$s$fStream[]mtok @ GHC.Types.Char)
                          w)
                         `cast`
                       (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                 <[GHC.Types.Char]>_R
                                 <st>_R
                                 <Data.Functor.Identity.Identity>_R
                                 <[GHC.Types.Char]>_R))
                       (Text.Parsec.Prim.$fApplicativeParsecT2
                          @ [GHC.Types.Char]
                          @ st
                          @ Data.Functor.Identity.Identity
                          @ ()
                          @ (a -> a)
                          (let {
                             w3 :: Text.Parsec.Prim.ParsecT
                                     [GHC.Types.Char]
                                     st
                                     Data.Functor.Identity.Identity
                                     GHC.Types.Char
                             = Text.Parsec.Char.char
                                 @ [GHC.Types.Char]
                                 @ Data.Functor.Identity.Identity
                                 @ st
                                 (TSPLexer.$s$fStream[]mtok @ GHC.Types.Char)
                                 w1
                           } in
                           (\ @ b
                              (w4 :: Text.Parsec.Prim.State [GHC.Types.Char] st)
                              (w5 :: ()
                                     -> Text.Parsec.Prim.State [GHC.Types.Char] st
                                     -> Text.Parsec.Error.ParseError
                                     -> Data.Functor.Identity.Identity b)
                              (w6 :: Text.Parsec.Error.ParseError
                                     -> Data.Functor.Identity.Identity b)
                              (w7 :: ()
                                     -> Text.Parsec.Prim.State [GHC.Types.Char] st
                                     -> Text.Parsec.Error.ParseError
                                     -> Data.Functor.Identity.Identity b)
                              (w8 :: Text.Parsec.Error.ParseError
                                     -> Data.Functor.Identity.Identity b) ->
                            Text.Parsec.Combinator.$wnotFollowedBy
                              @ [GHC.Types.Char]
                              @ Data.Functor.Identity.Identity
                              @ GHC.Types.Char
                              @ GHC.Types.Char
                              @ st
                              GHC.Show.$fShowChar
                              w3
                              @ b
                              w4
                              w7
                              w8)
                             `cast`
                           (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                     <[GHC.Types.Char]>_R
                                     <st>_R
                                     <Data.Functor.Identity.Identity>_R
                                     <()>_R)))
                          (Text.Parsec.Prim.$fApplicativeParsecT5
                             @ (a -> a)
                             @ [GHC.Types.Char]
                             @ st
                             @ Data.Functor.Identity.Identity
                             w2)
                            `cast`
                          (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                    <[GHC.Types.Char]>_R
                                    <st>_R
                                    <Data.Functor.Identity.Identity>_R
                                    <a -> a>_R)))
                         `cast`
                       (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                 <[GHC.Types.Char]>_R
                                 <st>_R
                                 <Data.Functor.Identity.Identity>_R
                                 <a -> a>_R)))
                      `cast`
                    (Sym (Text.Parsec.Prim.N:ParsecT[0]
                              <[GHC.Types.Char]>_R
                              <st>_R
                              <Data.Functor.Identity.Identity>_R
                              <a -> a>_R)) #)) -}
78d34f506b5ce2fdff932f4147d9e6ae
  $wsortPerm ::
    [LexerTypes.Tperm]
    -> [LexerTypes.TVarDec]
    -> [LexerTypes.TSPTable]
    -> [LexerTypes.PVSTypeDef]
    -> [LexerTypes.PVSInstDef]
    -> [LexerTypes.PVSFunction]
    -> [LexerTypes.PVSMacro]
    -> (# [LexerTypes.TVarDec], [LexerTypes.TSPTable],
          [LexerTypes.PVSTypeDef], [LexerTypes.PVSInstDef],
          [LexerTypes.PVSFunction], [LexerTypes.PVSMacro] #)
  {- Arity: 7, Strictness: <S,1*U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
cdb0c6681a1dc1486cea8228235d6954
  $wterminator ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><L,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (ww :: [GHC.Types.Char])
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: ())
                   (w :: GHC.Base.String
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1)
                   (w1 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 TSPLexer.$wp
                   @ b1
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   (\ (x3 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    w x3
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww5 { Text.Parsec.Error.ParseError ww6 ww7 ->
                       case ww6 of ww8 { Text.Parsec.Pos.SourcePos ww9 ww16 ww17 ->
                       case Text.Parsec.Error.$wmergeError
                              ww9
                              ww16
                              ww17
                              ww7
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww18 ->
                       Text.Parsec.Error.ParseError ww15 ww18 } } } } }))
                   w1
                   (\ (err :: Text.Parsec.Error.ParseError) ->
                    w2
                      (case err of ww5 { Text.Parsec.Error.ParseError ww6 ww7 ->
                       Text.Parsec.Prim.$wsetExpectErrors
                         ww6
                         ww7
                         TSPLexer.name_msgs }))) -}
47b9159d888d830f0bfb9e24448415a4
  $wtspFuncDec ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (LexerTypes.PVSFunction
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (LexerTypes.PVSFunction
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 9,
     Strictness: <L,U><L,U><S,U><S,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0] -}
0d95af17025dcb998396c81014c3e8c5
  assembleTSPpackage ::
    GHC.Base.String
    -> [LexerTypes.TVarDec]
    -> [LexerTypes.TSPTable]
    -> [LexerTypes.PVSTypeDef]
    -> [LexerTypes.PVSInstDef]
    -> [LexerTypes.PVSFunction]
    -> [LexerTypes.PVSMacro]
    -> LexerTypes.TSPpackage
  {- Arity: 7, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
     Unfolding: InlineRule (7, True, True)
                (\ (nom :: GHC.Base.String)
                   (var :: [LexerTypes.TVarDec])
                   (tsp :: [LexerTypes.TSPTable])
                   (tds :: [LexerTypes.PVSTypeDef])
                   (insts :: [LexerTypes.PVSInstDef])
                   (funcs :: [LexerTypes.PVSFunction])
                   (macs :: [LexerTypes.PVSMacro]) ->
                 LexerTypes.TSPpackage nom tds insts var tsp funcs macs) -}
634f4c752dca857c90ddd5c34792d0a3
  binary ::
    GHC.Base.String
    -> GHC.Types.Char
    -> (a -> a -> a)
    -> Text.Parsec.Expr.Assoc
    -> Text.ParserCombinators.Parsec.Expr.Operator GHC.Types.Char st a
  {- Arity: 4, Strictness: <L,U><L,U(U)><L,U><L,U>m1, Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   @ st
                   (w :: GHC.Base.String)
                   (w1 :: GHC.Types.Char)
                   (w2 :: a -> a -> a)
                   (w3 :: Text.Parsec.Expr.Assoc) ->
                 case TSPLexer.$wbinary @ a @ st w w1 w2 w3 of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ a
                   ww1
                   ww2 }) -}
e76a85e376daeca25ba7ac9ec1157088
  checkCapitalization :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: [GHC.Types.Char]) ->
                 case ds of wild {
                   [] -> TSPLexer.checkCapitalization2
                   : x3 xs
                   -> case x3 of wild1 { GHC.Types.C# c# ->
                      case {__pkg_ccall base-4.10.1.0 GHC.Prim.Int#
                                                      -> GHC.Prim.State# GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            GHC.Prim.Int# #)}
                             (GHC.Prim.ord# c#)
                             GHC.Prim.realWorld# of wild2 { (#,#) ds1 ds2 ->
                      case ds2 of wild3 {
                        DEFAULT -> GHC.Types.: @ GHC.Types.Char wild1 xs
                        0# -> TSPLexer.checkCapitalization1 } } } }) -}
b950c1721927b556ac5b0e883eb1ce46
  checkCapitalization1 :: GHC.Base.String
  {- Strictness: x -}
524d47c3bb58a16e6920839e13cd70c3
  checkCapitalization2 :: GHC.Base.String
  {- Strictness: x -}
4fed61a276e4cd90b4e44b216e23bfe2
  field :: Text.Parsec.String.Parser LexerTypes.PVS_Field
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.field1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <(GHC.Base.String, LexerTypes.PVSType)>_R)) -}
0cf50864dff915f13e4577bab411b7e4
  field1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ((GHC.Base.String, LexerTypes.PVSType)
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((GHC.Base.String, LexerTypes.PVSType)
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: (GHC.Base.String, LexerTypes.PVSType)
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: (GHC.Base.String, LexerTypes.PVSType)
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ (GHC.Base.String, LexerTypes.PVSType)
                   TSPLexer.field4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(GHC.Base.String, LexerTypes.PVSType)>_R))
                   TSPLexer.field2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
a57b77512bf03678200c81dfa419cbf6
  field2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.field_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
1149630dff1e50a8e77965ece45979f3
  field3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Field"#) -}
07db31558a18df4f64187b035417df24
  field4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String, LexerTypes.PVSType)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Base.String, LexerTypes.PVSType)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: (GHC.Base.String, LexerTypes.PVSType)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: (GHC.Base.String, LexerTypes.PVSType)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 case TSPLexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds1
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Base.String>_R)
                   @ b1
                   s1
                   (\ (x3 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    TSPLexer.field5
                      x3
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x4 :: (GHC.Base.String, LexerTypes.PVSType))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x3 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    TSPLexer.field5
                      x3
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x4 :: (GHC.Base.String, LexerTypes.PVSType))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr }) -}
c8c6f08ba5b62bf2be4bbb8ab9f14903
  field5 ::
    GHC.Base.String
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> ((GHC.Base.String, LexerTypes.PVSType)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> ((GHC.Base.String, LexerTypes.PVSType)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
1731a4df75c921d310c076b76ba28dca
  field_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.field3) -}
76d91ac54d2d76ab7c1df2e26a1a99a3
  fields :: Text.Parsec.String.Parser [LexerTypes.PVS_Field]
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.fields1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[LexerTypes.PVS_Field]>_R)) -}
7860b262ede984c2983d1321f7ceb327
  fields1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([LexerTypes.PVS_Field]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([LexerTypes.PVS_Field]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: [LexerTypes.PVS_Field]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: [LexerTypes.PVS_Field]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [LexerTypes.PVS_Field]
                   TSPLexer.fields3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[LexerTypes.PVS_Field]>_R))
                   TSPLexer.fields_msgs
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
f950159f6de433cddb3861c4fd5ec8a7
  fields2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Listing of Fields"#) -}
c8d9f4b3848309a798231e295647f0af
  fields3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([LexerTypes.PVS_Field]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([LexerTypes.PVS_Field]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
1a60aaf06e14a6ea4335d9129d66a20a
  fields_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.fields2) -}
0e9fa3cbc9d257da32d2c0c5bb40752d
  fields_msgs :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.fields_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
85c1d60dea7fb39a6312dcdb44209e7c
  helper :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.helper1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[GHC.Types.Char]>_R)) -}
cfb41edc86e581101e4a7c5831e765f2
  helper1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: [GHC.Types.Char]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: [GHC.Types.Char]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [GHC.Types.Char]
                   TSPLexer.helper7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   TSPLexer.helper5
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
59a224e7744d7a2bf4d66e1468e57e5f
  helper10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\"ELSE LET\""#) -}
bc77ed437ef53a12130a750203e13457
  helper11 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
02450eae12836f9d815c30ac85961202
  helper12 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: [GHC.Types.Char]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: [GHC.Types.Char]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [GHC.Types.Char]
                   TSPLexer.helper15
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   TSPLexer.helper13
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
418c95c117085961cee77380f77ef4ff
  helper13 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.helper3_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
d2b8bf4fec6fb2ecfa0af0b5ad9472f7
  helper14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\"IN\""#) -}
471a52f3141e071a44e2c70cb72435cb
  helper15 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
a9af727f8ffbd5417258060e06c350ba
  helper2 :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.helper8
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[GHC.Types.Char]>_R)) -}
1349b018b42d8841f8fcb2b7dfa9a378
  helper2_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.helper10) -}
597a69a1b1665206d50188bd47a8a5e9
  helper3 :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.helper12
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[GHC.Types.Char]>_R)) -}
83d37efd5330c61bc4fdcf1a7340f7fc
  helper3_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.helper14) -}
47056afe58757ea5317f4395a8a2b955
  helper5 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.helper_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
14544abc8304b9259a067acbc9bf19fc
  helper6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Optional FORALL t:"#) -}
a101e344c97db12ff2df795d573f0a5d
  helper7 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
3dbe892addd1a41ecce1903f9280024b
  helper8 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: [GHC.Types.Char]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: [GHC.Types.Char]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [GHC.Types.Char]
                   TSPLexer.helper11
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   TSPLexer.helper9
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
6edb508e368b2ecf0f36c5c4b329ed7b
  helper9 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.helper2_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
baa7a1fe49abde97d55e76bebdb41c8b
  helper_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.helper6) -}
f80615b05b7f3d71b2175b696c55daf5
  idPath :: Text.Parsec.String.Parser LexerTypes.ID_Path
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.idPath1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <LexerTypes.ID_Path>_R)) -}
5362f7f99d703c01f00dd8e9fb7bc71f
  idPath1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (LexerTypes.ID_Path
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (LexerTypes.ID_Path
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: LexerTypes.ID_Path
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: LexerTypes.ID_Path
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ LexerTypes.ID_Path
                   TSPLexer.idPath3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <LexerTypes.ID_Path>_R))
                   TSPLexer.idPath_msgs
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
5a3e0fa251c9e7eafddf6457bbeb4d7a
  idPath2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ID Path"#) -}
efd3b86ad4eae09aae485c658d069b66
  idPath3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (LexerTypes.ID_Path
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (LexerTypes.ID_Path
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
fbaa62a5f47f352ea91fc91d506ba666
  idPath_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.idPath2) -}
09010b35020eecfa90f99b3e74895b8e
  idPath_msgs :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.idPath_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
666df5bed994a5f3f5c218923d403aa3
  identifier ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String u Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (\ @ u ->
                 case TSPLexer.lexer
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds1 }) -}
e75cf28814450805fd83043f4ac0552a
  importsTSP :: Text.Parsec.String.Parser [GHC.Base.String]
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.importsTSP1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[GHC.Base.String]>_R)) -}
584be3f5ef034dd3211a263f2b4fd58c
  importsTSP1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Base.String]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Base.String]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: [GHC.Base.String]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: [GHC.Base.String]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [GHC.Base.String]
                   TSPLexer.importsTSP3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Base.String]>_R))
                   TSPLexer.importsTSP_msgs
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
975fb69c90e591cc04b1f4621dc4f93c
  importsTSP2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Import Statements"#) -}
52444544698fb6191ebf72a11a1e0e46
  importsTSP3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Base.String]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Base.String]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
bd2cf5e769b8fa626c8aab452eb40de9
  importsTSP_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.importsTSP2) -}
5368d319b87cfd5ce3b8956edf382fbc
  importsTSP_msgs :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.importsTSP_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
b6259b5c097c8de6f32ebdb2d23a64d1
  intercalatedBy ::
    GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> Text.Parsec.String.Parser [GHC.Base.String]
  {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
1c85f00f31720360a8d7492174e528da
  lexeme ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String u Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String u Data.Functor.Identity.Identity a
  {- Unfolding: (\ @ u @ a ->
                 case TSPLexer.lexer
                        @ u of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds14 @ a }) -}
914b676e8138ecd7870dd590825d4f87
  lexer ::
    Text.Parsec.Token.GenTokenParser
      GHC.Base.String u Data.Functor.Identity.Identity
  {- Unfolding: (\ @ u ->
                 Text.Parsec.Token.makeTokenParser
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ u
                   (TSPLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   (TSPLexer.pvsDef @ u)) -}
7475ba90b061ffecb2a2cd2ea3677222
  methodArgs :: Text.Parsec.String.Parser [LexerTypes.Expression]
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.methodArgs1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[LexerTypes.Expression]>_R)) -}
b21f12c83bbc8f4b15a5eba2405f6e70
  methodArgs1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([LexerTypes.Expression]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([LexerTypes.Expression]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: [LexerTypes.Expression]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: [LexerTypes.Expression]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [LexerTypes.Expression]
                   TSPLexer.methodArgs3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[LexerTypes.Expression]>_R))
                   TSPLexer.methodArgs_msgs
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
66afd16b57608306a2f5cadfe37bc1eb
  methodArgs2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Method Args List"#) -}
b72c2289fd1cdf23225e858896244c77
  methodArgs3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([LexerTypes.Expression]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([LexerTypes.Expression]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
3eee4974681106ee87ed97265800b828
  methodArgs_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.methodArgs2) -}
ac5526111084ea373a789cf85df027ad
  methodArgs_msgs :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.methodArgs_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
75037ca4e971f72421021df14111b700
  name :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.name1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[GHC.Types.Char]>_R)) -}
dcde58d3515d8405f5f247b88260d4de
  name1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: [GHC.Types.Char]
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: [GHC.Types.Char]
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [GHC.Types.Char]
                   TSPLexer.name3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   TSPLexer.name_msgs
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
6f0a49a5d2e8e22915719d1d886796f9
  name2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Description Name"#) -}
d4981e88f006cff732c3156518b8dd0b
  name3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,U><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 TSPLexer.$wp @ b1 ww1 ww5 ww6 ww7 ww3 w1 w2 w4 } }) -}
a9907a546c6ab401a24eed25859e9c10
  name_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.name2) -}
e037b36352c315dccbb5c058a6d8c11a
  name_msgs :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.name_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
13581f9fa684e7135afdd2aeb98360fb
  natural ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      u
      Data.Functor.Identity.Identity
      GHC.Integer.Type.Integer
  {- Unfolding: (\ @ u ->
                 case TSPLexer.lexer
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds7 }) -}
0134675c390900cceb9fbb77f4f15b1d
  parens ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String u Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String u Data.Functor.Identity.Identity a
  {- Unfolding: (\ @ u @ a ->
                 case TSPLexer.lexer
                        @ u of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds16 @ a }) -}
570739c89a1836f2701972e747ee40b7
  parseTSP :: Text.Parsec.String.Parser LexerTypes.TSPpackage
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,U><L,U><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.parseTSP1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <LexerTypes.TSPpackage>_R)) -}
fa2f227bdf7a94122f7e91dfc0a78137
  parseTSP1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (LexerTypes.TSPpackage
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (LexerTypes.TSPpackage
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,U><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: LexerTypes.TSPpackage
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: LexerTypes.TSPpackage
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 TSPLexer.$wparseTSP @ b1 ww1 ww5 ww6 ww7 ww3 w1 w2 w4 } }) -}
7a4a213ab37977fff7280cf24caf507b
  permIterator :: Text.Parsec.String.Parser [LexerTypes.Tperm]
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.permIterator1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[(GHC.Base.Maybe LexerTypes.TVarDec,
                             GHC.Base.Maybe LexerTypes.TSPTable,
                             GHC.Base.Maybe LexerTypes.PVSTypeDef,
                             GHC.Base.Maybe LexerTypes.PVSInstDef,
                             GHC.Base.Maybe LexerTypes.PVSFunction,
                             GHC.Base.Maybe LexerTypes.PVSMacro)]>_R)) -}
e23d619494b589f05c7ba59fd244bcb9
  permIterator1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([(GHC.Base.Maybe LexerTypes.TVarDec,
          GHC.Base.Maybe LexerTypes.TSPTable,
          GHC.Base.Maybe LexerTypes.PVSTypeDef,
          GHC.Base.Maybe LexerTypes.PVSInstDef,
          GHC.Base.Maybe LexerTypes.PVSFunction,
          GHC.Base.Maybe LexerTypes.PVSMacro)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([(GHC.Base.Maybe LexerTypes.TVarDec,
          GHC.Base.Maybe LexerTypes.TSPTable,
          GHC.Base.Maybe LexerTypes.PVSTypeDef,
          GHC.Base.Maybe LexerTypes.PVSInstDef,
          GHC.Base.Maybe LexerTypes.PVSFunction,
          GHC.Base.Maybe LexerTypes.PVSMacro)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: [(GHC.Base.Maybe LexerTypes.TVarDec,
                              GHC.Base.Maybe LexerTypes.TSPTable,
                              GHC.Base.Maybe LexerTypes.PVSTypeDef,
                              GHC.Base.Maybe LexerTypes.PVSInstDef,
                              GHC.Base.Maybe LexerTypes.PVSFunction,
                              GHC.Base.Maybe LexerTypes.PVSMacro)]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: [(GHC.Base.Maybe LexerTypes.TVarDec,
                              GHC.Base.Maybe LexerTypes.TSPTable,
                              GHC.Base.Maybe LexerTypes.PVSTypeDef,
                              GHC.Base.Maybe LexerTypes.PVSInstDef,
                              GHC.Base.Maybe LexerTypes.PVSFunction,
                              GHC.Base.Maybe LexerTypes.PVSMacro)]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [(GHC.Base.Maybe LexerTypes.TVarDec,
                       GHC.Base.Maybe LexerTypes.TSPTable,
                       GHC.Base.Maybe LexerTypes.PVSTypeDef,
                       GHC.Base.Maybe LexerTypes.PVSInstDef,
                       GHC.Base.Maybe LexerTypes.PVSFunction,
                       GHC.Base.Maybe LexerTypes.PVSMacro)]
                   TSPLexer.permIterator4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[(GHC.Base.Maybe LexerTypes.TVarDec,
                                GHC.Base.Maybe LexerTypes.TSPTable,
                                GHC.Base.Maybe LexerTypes.PVSTypeDef,
                                GHC.Base.Maybe LexerTypes.PVSInstDef,
                                GHC.Base.Maybe LexerTypes.PVSFunction,
                                GHC.Base.Maybe LexerTypes.PVSMacro)]>_R))
                   TSPLexer.permIterator2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
7c46f1c2e21ecd9b3822b85a7f258016
  permIterator2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.permIterator_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
750a242ec92604ce83b9d09bd30c625b
  permIterator3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TSP Permutant"#) -}
db07e5bca6565518cc8a4d036c5013fa
  permIterator4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([(GHC.Base.Maybe LexerTypes.TVarDec,
          GHC.Base.Maybe LexerTypes.TSPTable,
          GHC.Base.Maybe LexerTypes.PVSTypeDef,
          GHC.Base.Maybe LexerTypes.PVSInstDef,
          GHC.Base.Maybe LexerTypes.PVSFunction,
          GHC.Base.Maybe LexerTypes.PVSMacro)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([(GHC.Base.Maybe LexerTypes.TVarDec,
          GHC.Base.Maybe LexerTypes.TSPTable,
          GHC.Base.Maybe LexerTypes.PVSTypeDef,
          GHC.Base.Maybe LexerTypes.PVSInstDef,
          GHC.Base.Maybe LexerTypes.PVSFunction,
          GHC.Base.Maybe LexerTypes.PVSMacro)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
a0e7f347a6ef92a138adb0de7a30d945
  permIterator_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   TSPLexer.permIterator3) -}
885fdec3d9a4cd4bbfa881f39ff53684
  postfix ::
    GHC.Base.String
    -> GHC.Types.Char
    -> (a -> a)
    -> Text.ParserCombinators.Parsec.Expr.Operator GHC.Types.Char st a
  {- Arity: 3, Strictness: <L,U><L,U(U)><L,U>m3, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ st
                   (w :: GHC.Base.String)
                   (w1 :: GHC.Types.Char)
                   (w2 :: a -> a) ->
                 case TSPLexer.$wpostfix @ a @ st w w1 w2 of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Postfix
                   @ GHC.Types.Char
                   @ st
                   @ a
                   ww1 }) -}
0fdda2c2e621ea605e776821b3d3d9f3
  prefix ::
    GHC.Base.String
    -> GHC.Types.Char
    -> (a -> a)
    -> Text.ParserCombinators.Parsec.Expr.Operator GHC.Types.Char st a
  {- Arity: 3, Strictness: <L,U><L,U(U)><L,U>m2, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ st
                   (w :: GHC.Base.String)
                   (w1 :: GHC.Types.Char)
                   (w2 :: a -> a) ->
                 case TSPLexer.$wprefix @ a @ st w w1 w2 of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Prefix
                   @ GHC.Types.Char
                   @ st
                   @ a
                   ww1 }) -}
d76252fec95ee2106bb724a7228c4048
  pvsDef :: Text.Parsec.Token.LanguageDef st
  {- Unfolding: (\ @ st ->
                 Text.Parsec.Token.LanguageDef
                   @ GHC.Base.String
                   @ st
                   @ Data.Functor.Identity.Identity
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   TSPLexer.pvsDef210
                   GHC.Types.False
                   (TSPLexer.pvsDef466 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   (TSPLexer.pvsDef464 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   (TSPLexer.pvsDef462 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   (TSPLexer.pvsDef460 @ st)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <st>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   TSPLexer.pvsDef220
                   TSPLexer.pvsDef1
                   GHC.Types.False) -}
e284c5e22e3f16ca097476ad6af2e2f0
  pvsDef1 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef218
                   TSPLexer.pvsDef2) -}
0c5c6a45d8e892f45fab811f1ce8002d
  pvsDef10 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef200
                   TSPLexer.pvsDef11) -}
f7ae84350a1d781677c3ed92c8f51218
  pvsDef100 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef101) -}
ec29adc1a9d5535aa8c07e51afeb1c4a
  pvsDef101 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("{|"#) -}
6964ad4e3647d0c2631d6c17d0760bce
  pvsDef102 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef103) -}
c764bb7624ec53850d05bce5bcd7cdb4
  pvsDef103 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("{"#) -}
89a1abf77a057d7f031024226f7c88a3
  pvsDef104 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef105) -}
8044988b811a198d05e666aa1fe49587
  pvsDef105 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("`"#) -}
f9c0c1bbfeec0d3a91ca8bff4712f355
  pvsDef106 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef107) -}
99551524e49dc60bf3b66a73aa98c4f7
  pvsDef107 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("^^"#) -}
e40d0924e5780b13d2bbaad7227863c5
  pvsDef108 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef109) -}
3734f4a09403003460cedf0d57dbfba6
  pvsDef109 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("^"#) -}
c0dfbb0ab662237242a4b8be588fc928
  pvsDef11 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef198
                   TSPLexer.pvsDef12) -}
444fe130ac407d5988de43ab4384ee4f
  pvsDef110 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef111) -}
1b853d706b585307338ea80b75c37d13
  pvsDef111 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("]|"#) -}
4044c17dc036a88ba6841bc2cdf2bcf2
  pvsDef112 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef113) -}
aecc03177f9ce5cce70e35d6a264fd62
  pvsDef113 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("]"#) -}
7d83d617d37a2d9089fcde7b7ebff38e
  pvsDef114 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef115) -}
b947ca14555fe0822d708bae654e3a1f
  pvsDef115 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\\/"#) -}
b17d2179d4530c5f9b75825f380755bc
  pvsDef116 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef117) -}
047af750393670fa3f7e3e8230ca5a58
  pvsDef117 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\\"#) -}
ef5fa70ecd5592cefead092d8def549e
  pvsDef118 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef119) -}
500dadf250ea3428915c1d0017a3e20c
  pvsDef119 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[||]"#) -}
4fdf876d863082656998e5349f39bb43
  pvsDef12 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef196
                   TSPLexer.pvsDef13) -}
b5e397e132f86ba32f1e25dd5315af09
  pvsDef120 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef121) -}
9ad234d1d7927414ad0adfb99c89e099
  pvsDef121 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[|"#) -}
07d957cccd0f0278c20c0b0a9108cb58
  pvsDef122 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef123) -}
6f5ec7b20a0be4157691bb65b1485345
  pvsDef123 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[]"#) -}
8cbdd4f0875e082f0a631c745ae8872d
  pvsDef124 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef125) -}
5fe446a4be63ddc6b89bd1b567b98da8
  pvsDef125 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[#"#) -}
3c5401c905bb21ecf7c6bbd52881f5db
  pvsDef126 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef127) -}
297620c5a9f94c97648bc96be389374c
  pvsDef127 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("["#) -}
ab07f67abe24a50c9d320887636529c5
  pvsDef128 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef129) -}
6337daf270cca1f6551152d6cbb44a9f
  pvsDef129 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("@@"#) -}
d9f33f9d2eabfce30d8e7fd61836e977
  pvsDef13 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef194
                   TSPLexer.pvsDef14) -}
de52d81a5afe562e74b23d7fa519a81f
  pvsDef130 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef131) -}
a3901f3cf502841483b3a4f9f7ef0ca1
  pvsDef131 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("@"#) -}
4a32db068707ef77b874d83103b516f9
  pvsDef132 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef133) -}
b63eea44e6343ce2bc9a7c44c94aa669
  pvsDef133 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (">>="#) -}
3ada72c80aa19128a007f84eb1d4a5d8
  pvsDef134 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef135) -}
e311c01d4180034ccdc0c414f71df809
  pvsDef135 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (">>"#) -}
6d610992cc7b9325ba7bbfa9e689186a
  pvsDef136 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef137) -}
ca682537ad01812639288160932ff6eb
  pvsDef137 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (">="#) -}
bf6bc0836cd73c915ead842369389ce6
  pvsDef138 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef139) -}
ebc6f43c969cda7d2a89bb54f90c8968
  pvsDef139 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (">"#) -}
6703fb972f85735abb052209226e6310
  pvsDef14 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef192
                   TSPLexer.pvsDef15) -}
5118bbdbabe53653149d1114412b56d8
  pvsDef140 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef141) -}
76788ee15952be151a8dfe9d71013203
  pvsDef141 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("=>"#) -}
9a08532e64d3280f0e0de217e9fbd21b
  pvsDef142 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef143) -}
7868482e725cf11ec04563801d0fe828
  pvsDef143 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("=="#) -}
27ef31d66934136af37a2023192359e3
  pvsDef144 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef145) -}
58a0c44c5009180f7ebf3fc63cd2c634
  pvsDef145 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("="#) -}
8c4906531623436c7393172c421a0957
  pvsDef146 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef147) -}
cd596829267b794a8d9ced933f1611a9
  pvsDef147 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<|"#) -}
a2e4b5d3e6edb6b8f8a33db07ad07a99
  pvsDef148 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef149) -}
1fc24834eae76d52c0a6d3c1bf63667d
  pvsDef149 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<>"#) -}
feb573b864a79938ab828b1e621ae87d
  pvsDef15 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef190
                   TSPLexer.pvsDef16) -}
2ecc9d10255795518c1c3086ca883b07
  pvsDef150 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef151) -}
9ae9b597e4fc19c30be6502740787213
  pvsDef151 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<=>"#) -}
949b176c7e5c69233cd62b64fa3f5474
  pvsDef152 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef153) -}
f86842d014c4a3725aa9bf427d5363a9
  pvsDef153 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<="#) -}
9a0388d47c7fc1b50dc72c42f3571ed5
  pvsDef154 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef155) -}
c7b8d1052dcf43426a91754b1bd544e7
  pvsDef155 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<<="#) -}
2eb5bd787084952aef76b99ff46e1848
  pvsDef156 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef157) -}
ccfb35306d7635e51558705cab923571
  pvsDef157 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<<"#) -}
47e7a926c8a45b850ce9b10ffb84180c
  pvsDef158 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef159) -}
69b6da8ac1b8979272f3045f707acc34
  pvsDef159 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<"#) -}
76419183fa31e2b33cd40e5bb67bab30
  pvsDef16 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef188
                   TSPLexer.pvsDef17) -}
2d6a0e5896c686240b9049b27a55f30e
  pvsDef160 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef161) -}
2db97a25b1c708a829ce426ed3837b48
  pvsDef161 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (";"#) -}
6450a6a7efba4c76a03b1ef0078109ac
  pvsDef162 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef163) -}
26298b1721e906dee0bcc0062f254045
  pvsDef163 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (":="#) -}
8dd47d501c3955455da291a2a7f0dc5f
  pvsDef164 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef165) -}
0b400e12192928347ae675078b9ca079
  pvsDef165 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("::"#) -}
75dbb11b606e351b8bde3f34aebdeed4
  pvsDef166 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef167) -}
0cdd851e330660c3ea4456b345b426c9
  pvsDef167 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (":)"#) -}
7df0d4b946efbc3e3976120079809b8a
  pvsDef168 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef169) -}
9b334c1e2d02ca32856e31a0d094f6fc
  pvsDef169 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (":"#) -}
f06228e2eb5786385fe95b6884bbd526
  pvsDef17 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef186
                   TSPLexer.pvsDef18) -}
560e4f10983581206bd4883102d4e9c6
  pvsDef170 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef171) -}
82c8a997d80d99f24e70b0423706a82c
  pvsDef171 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/\\"#) -}
6f2a41a1928530b3fda28258c8410c10
  pvsDef172 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef173) -}
1502fb0d2f8be6b6f1cb95bfeef6980a
  pvsDef173 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/="#) -}
bf53aa56cd35c9249ca46d2d00d840ad
  pvsDef174 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef175) -}
b318dd7c7700ce6759b0a7e837f13f6a
  pvsDef175 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("//"#) -}
eb573c3fd79e26afeb83424139d0e166
  pvsDef176 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef177) -}
99211e200f629827f53d6d7394d735e7
  pvsDef177 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/"#) -}
b7b6421ff33d87c02497d74c6b78ee12
  pvsDef178 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef179) -}
b5e2cee9d8ba027bb51a7df423c1b207
  pvsDef179 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("."#) -}
acd85eeede8d31108dfca1f13e9aa9a3
  pvsDef18 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef184
                   TSPLexer.pvsDef19) -}
627c0e2cc1d4f0a9a17e0bb07d8aaa64
  pvsDef180 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef181) -}
bdd0ff43e72893f9dc9776031e08b3d0
  pvsDef181 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("->"#) -}
584cd6f4c97297e27f3f209b09425b77
  pvsDef182 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef183) -}
d81bfb11e46c055abf47ea2c65dbb9b1
  pvsDef183 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-"#) -}
4218882b4cb487bef14287ccb9ba2890
  pvsDef184 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef185) -}
991ccb8f7ea48cf96e82d8ae2d0df5ce
  pvsDef185 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (","#) -}
20a73e112a27222fd6d56c1c99a68e57
  pvsDef186 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef187) -}
73c038fd3caadfa24ee462703529e028
  pvsDef187 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("++"#) -}
d2628ba7b6717753eecd28e70912ad74
  pvsDef188 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef189) -}
ac563b13b3ed9f734f64be9f06606393
  pvsDef189 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("+"#) -}
d8e1d8fb471414fb9e9f6228272e191a
  pvsDef19 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef182
                   TSPLexer.pvsDef20) -}
467e6c1555122d5b851f8df63708ddc3
  pvsDef190 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef191) -}
e98c594b67aeaad43c371d5ab06d606a
  pvsDef191 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("**"#) -}
55c156d7c14bb96c54b81ad74af885aa
  pvsDef192 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef193) -}
b824bd06fc11fef68e8eaeb2af25f16e
  pvsDef193 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("*"#) -}
17b66a2e2c851dae3e19a2cd1feca9a0
  pvsDef194 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef195) -}
b8d3c8bfc48d6a6b258bb7e594634690
  pvsDef195 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (")"#) -}
401755fa77f757ae6d73da659c617c0e
  pvsDef196 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef197) -}
605799727409179d7c668044f35ed969
  pvsDef197 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("(||)"#) -}
b9c8639faf6ac6df2551ecd6814e5836
  pvsDef198 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef199) -}
94bde89131ca9a3a2ae2643bfc83db88
  pvsDef199 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("(|"#) -}
d52d1a8ff03f50ef4dcd7e8e4dad391a
  pvsDef2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef216
                   TSPLexer.pvsDef3) -}
9d151625696cf6dc58d3cb5b49bf6322
  pvsDef20 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef180
                   TSPLexer.pvsDef21) -}
863de556ecd446c9275b67c113e14a33
  pvsDef200 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef201) -}
1d2f007f1a76a09b704cdcce6612dbd0
  pvsDef201 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("(:"#) -}
e13d26279024d68660f4bbc9420b8d5e
  pvsDef202 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef203) -}
d3103976be97b409b392eefa3e347495
  pvsDef203 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("(#"#) -}
0a2d44a017e2b5d5155ed7f00e4a8133
  pvsDef204 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef205) -}
2113949a287d06f3511404f1f0ea49ec
  pvsDef205 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("("#) -}
127c04e97fd239852bed9da2db32513f
  pvsDef206 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef207) -}
117848485820cdfe82d8e051706350b2
  pvsDef207 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("&&"#) -}
fefc535c7f65da406c17c7c9e86c1e3f
  pvsDef208 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef209) -}
eb902aa75e92162d40558b5afb40a8a1
  pvsDef209 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("&"#) -}
d328b3ee2122417ab8d6cad2c82a67ae
  pvsDef21 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef178
                   TSPLexer.pvsDef22) -}
dd082fbfb1b681c95c4ec33ea989f900
  pvsDef210 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef211) -}
ae61223250c32fe5cc8a4b7ceabb7ec1
  pvsDef211 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("%"#) -}
ce97438bb8677a2f3b32efa7fd32e236
  pvsDef212 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef213) -}
ae76199d1126f56c193509828c42f25e
  pvsDef213 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#]"#) -}
e6e75960f27578a3712c6ece4b3189ee
  pvsDef214 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef215) -}
e016654cf92cf0d253365cce573d2ac1
  pvsDef215 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#)"#) -}
dbca1d9a1a383bd9da49b855a357c35b
  pvsDef216 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef217) -}
fd329166f745bc005f3fcf9ad4e72ae4
  pvsDef217 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("##"#) -}
00d2ca31fd3d03874494350cfcaede59
  pvsDef218 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef219) -}
eb9834c57eb19c409a4a9e425c742010
  pvsDef219 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("#"#) -}
d56327ff257d8414adf848feb486a946
  pvsDef22 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef176
                   TSPLexer.pvsDef23) -}
dae618aaaa8de4dbb16d0f113822ca78
  pvsDef220 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef458
                   TSPLexer.pvsDef221) -}
a0a137ff8bd99ad6180a72301bf0c483
  pvsDef221 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef456
                   TSPLexer.pvsDef222) -}
98f70ce5d490068edc5d5fd4ad6e321e
  pvsDef222 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef454
                   TSPLexer.pvsDef223) -}
536e15b0475221155cd7aa46fa999760
  pvsDef223 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef452
                   TSPLexer.pvsDef224) -}
e73a3174afe0cff3e3cd148f4b8a2819
  pvsDef224 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef450
                   TSPLexer.pvsDef225) -}
58f63babe129dfd650c981c518b9d191
  pvsDef225 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef448
                   TSPLexer.pvsDef226) -}
ef45a2a39a8223b2c48f59244d1b033e
  pvsDef226 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef446
                   TSPLexer.pvsDef227) -}
4877fbfd2dc25d787269969aeffce5c5
  pvsDef227 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef444
                   TSPLexer.pvsDef228) -}
552d8dbbf6e5151f2ad5618725d6b613
  pvsDef228 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef442
                   TSPLexer.pvsDef229) -}
7fe93f182c3cc15ff8ca486e41d4682c
  pvsDef229 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef440
                   TSPLexer.pvsDef230) -}
05c42210c38cc5b7c703a02d869599be
  pvsDef23 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef174
                   TSPLexer.pvsDef24) -}
9a4713bda0e3f5327e48eb807144cc32
  pvsDef230 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef438
                   TSPLexer.pvsDef231) -}
66d2b830363684e4a8aaee6673a8e16d
  pvsDef231 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef436
                   TSPLexer.pvsDef232) -}
6d5f79d09827e51728bbd8c3f2d82f5c
  pvsDef232 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef434
                   TSPLexer.pvsDef233) -}
e9af28f658643b139946221c41329656
  pvsDef233 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef432
                   TSPLexer.pvsDef234) -}
b4988fbc248599740843bcb0941777e8
  pvsDef234 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef430
                   TSPLexer.pvsDef235) -}
3fec7b43a2556c3d9013c80b3a5323c3
  pvsDef235 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef428
                   TSPLexer.pvsDef236) -}
874219396ba0aa6791226e0d8dfba8f2
  pvsDef236 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef426
                   TSPLexer.pvsDef237) -}
7b9a8f14971f2aa5d156f7a77efe95af
  pvsDef237 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef424
                   TSPLexer.pvsDef238) -}
65036fe65e2fdb2946fa3bb87091c9be
  pvsDef238 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef422
                   TSPLexer.pvsDef239) -}
0c5ced217fb7d05d81672676e45bd56d
  pvsDef239 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef420
                   TSPLexer.pvsDef240) -}
37295372ea6b951523625c468959ba8d
  pvsDef24 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef172
                   TSPLexer.pvsDef25) -}
0aa6d1592552a398b78448f7d6577691
  pvsDef240 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef418
                   TSPLexer.pvsDef241) -}
95a939d9bd30271fa70e94942699f6df
  pvsDef241 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef416
                   TSPLexer.pvsDef242) -}
0464839c897eb94d4e673c66a679889d
  pvsDef242 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef414
                   TSPLexer.pvsDef243) -}
5db424ffd5c3957e057849ce64825e71
  pvsDef243 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef412
                   TSPLexer.pvsDef244) -}
5a5d5b258a257ba49b25abb37d3128b9
  pvsDef244 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef410
                   TSPLexer.pvsDef245) -}
3c7690f81703a47957de8b2012a1c2d4
  pvsDef245 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef408
                   TSPLexer.pvsDef246) -}
93315a5e0e806c44a18e582b7a0b4b80
  pvsDef246 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef406
                   TSPLexer.pvsDef247) -}
df5f3a71dbadfb9e7ae6a8029f81cfd5
  pvsDef247 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef404
                   TSPLexer.pvsDef248) -}
111390ca86a667e3ffe07510761b6089
  pvsDef248 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef402
                   TSPLexer.pvsDef249) -}
a7ac030818c9cd83c4e6e9e316dd22c8
  pvsDef249 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef400
                   TSPLexer.pvsDef250) -}
8ddaa0d8bd693a80a2f1ca4d45e23027
  pvsDef25 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef170
                   TSPLexer.pvsDef26) -}
b5e88a0bfb3415fe8461dfbdd208a15e
  pvsDef250 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef398
                   TSPLexer.pvsDef251) -}
346128904a0c2042f32460a26ac4fe3c
  pvsDef251 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef396
                   TSPLexer.pvsDef252) -}
d4c180f0976863175cff93721c8025ff
  pvsDef252 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef394
                   TSPLexer.pvsDef253) -}
5c7fbdfbb197505657f4220ffa95dcc1
  pvsDef253 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef392
                   TSPLexer.pvsDef254) -}
6f3774fc50a365033e013f5a7bb818ec
  pvsDef254 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef390
                   TSPLexer.pvsDef255) -}
82cde3ab125c8f6c9fe4fa003d92b8b0
  pvsDef255 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef388
                   TSPLexer.pvsDef256) -}
8db72a795f57c8b2ea23c28fc96fa72a
  pvsDef256 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef386
                   TSPLexer.pvsDef257) -}
62988d69872318fb42102e1246103155
  pvsDef257 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef384
                   TSPLexer.pvsDef258) -}
a228e218fff14b373f84a99298bd5b4a
  pvsDef258 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef382
                   TSPLexer.pvsDef259) -}
793d4043a17f9d5cd53a50e0abc3c76d
  pvsDef259 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef380
                   TSPLexer.pvsDef260) -}
f2f369c0d1b57f7474d24e25b8096924
  pvsDef26 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef168
                   TSPLexer.pvsDef27) -}
9a378cd690c35c4298322fd7e8c42a7a
  pvsDef260 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef378
                   TSPLexer.pvsDef261) -}
d5df0cee868cc7259de08a0d06446e9f
  pvsDef261 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef376
                   TSPLexer.pvsDef262) -}
bb7d331a87a2860106cf28a3fb096e8f
  pvsDef262 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef374
                   TSPLexer.pvsDef263) -}
d4a7155860d1e84db3bc969633177c9e
  pvsDef263 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef372
                   TSPLexer.pvsDef264) -}
f07c6715b2bf28a88119b1cf5258d0fa
  pvsDef264 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef370
                   TSPLexer.pvsDef265) -}
23998ce79d4a553dfb7772f5cc1ba719
  pvsDef265 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef368
                   TSPLexer.pvsDef266) -}
1db1089fdb3957108b74140611d4ea21
  pvsDef266 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef366
                   TSPLexer.pvsDef267) -}
b86a6cd8580e6ecc869a9337f6633903
  pvsDef267 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef364
                   TSPLexer.pvsDef268) -}
1fa1a121f6550a26724f9d9bf5f93c12
  pvsDef268 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef362
                   TSPLexer.pvsDef269) -}
ee3865da975acd58cdb116cf8d4f97ca
  pvsDef269 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef360
                   TSPLexer.pvsDef270) -}
ca393469b3a5cf58e675c4b357d7902c
  pvsDef27 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef166
                   TSPLexer.pvsDef28) -}
d066ce34edfa85b09eff872a052be858
  pvsDef270 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef358
                   TSPLexer.pvsDef271) -}
da88d237ec04adea454f8c7c582a23f0
  pvsDef271 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef356
                   TSPLexer.pvsDef272) -}
15a319d331607952baad46a9f7bb09bf
  pvsDef272 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef354
                   TSPLexer.pvsDef273) -}
5aa28731f56d1d927f559eba2d9f8083
  pvsDef273 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef352
                   TSPLexer.pvsDef274) -}
16b5cc80a514c1d53dd5414209f08d41
  pvsDef274 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef350
                   TSPLexer.pvsDef275) -}
5fe3a204b6189a6882c258c7bb5e545a
  pvsDef275 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef348
                   TSPLexer.pvsDef276) -}
6b6c4bcfe71dd7635322ccf874597997
  pvsDef276 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef346
                   TSPLexer.pvsDef277) -}
1d535fdcd72748f7e58c6340bc6087a9
  pvsDef277 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef344
                   TSPLexer.pvsDef278) -}
be43cb33b5d33368819e3bf08268b172
  pvsDef278 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef342
                   TSPLexer.pvsDef279) -}
74612473f920f6ed9f88ff3c6d188cde
  pvsDef279 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef340
                   TSPLexer.pvsDef280) -}
81e59f16d4a59e548a7dc3b2c6d2a37d
  pvsDef28 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef164
                   TSPLexer.pvsDef29) -}
ea37f12c28fff408b6a3392386e2898d
  pvsDef280 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef338
                   TSPLexer.pvsDef281) -}
51a23f3d1bf89609ffa4853f2ff0ce91
  pvsDef281 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef336
                   TSPLexer.pvsDef282) -}
7da2fe32a8f72448a289cee72c143f82
  pvsDef282 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef334
                   TSPLexer.pvsDef283) -}
869573c8293cb71a039dd46bac6ba4d7
  pvsDef283 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef332
                   TSPLexer.pvsDef284) -}
018176b05438a9ec4220658946f56021
  pvsDef284 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef330
                   TSPLexer.pvsDef285) -}
3cb42a370e0f7d812adbe34e70fd4595
  pvsDef285 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef328
                   TSPLexer.pvsDef286) -}
22ca3ac764d18dafc656112d7d4e07c8
  pvsDef286 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef326
                   TSPLexer.pvsDef287) -}
11b8fe96d4c69453dcd79d910ddabf3a
  pvsDef287 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef324
                   TSPLexer.pvsDef288) -}
19109ed6c5e29e231f03a0aa63cd4bab
  pvsDef288 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef322
                   TSPLexer.pvsDef289) -}
dc06b3123f86eff9840819d10de0a7e0
  pvsDef289 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef320
                   TSPLexer.pvsDef290) -}
02aa975d004836431c823ed00dc88ed1
  pvsDef29 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef162
                   TSPLexer.pvsDef30) -}
f286ead5197ba1aa0178f6e95625c562
  pvsDef290 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef318
                   TSPLexer.pvsDef291) -}
eddffe2277928d1f68902617a9300450
  pvsDef291 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef316
                   TSPLexer.pvsDef292) -}
ad3682fdc432f08b890089807b0d63b0
  pvsDef292 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef314
                   TSPLexer.pvsDef293) -}
b6551500340e20aeccb778c442effe30
  pvsDef293 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef312
                   TSPLexer.pvsDef294) -}
a94b0bd265716b953263157e6dc69517
  pvsDef294 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef310
                   TSPLexer.pvsDef295) -}
52215fb961ec4b3915817807601c97ab
  pvsDef295 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef308
                   TSPLexer.pvsDef296) -}
ab059f421baac3bffc94aaaab61a5fc8
  pvsDef296 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef306
                   TSPLexer.pvsDef297) -}
9b4a1fb2080313912ad99fe872b3206b
  pvsDef297 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef304
                   TSPLexer.pvsDef298) -}
ed3f28e73e020d320b82ee5a49fce2c5
  pvsDef298 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef302
                   TSPLexer.pvsDef299) -}
c0315b26163f3ae9e2a4083c32d10753
  pvsDef299 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef300
                   (GHC.Types.[] @ GHC.Base.String)) -}
e7df71e88e00973feae7e456afb2465c
  pvsDef3 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef214
                   TSPLexer.pvsDef4) -}
9f0c2b379f5fd0183a4c157c0a922813
  pvsDef30 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef160
                   TSPLexer.pvsDef31) -}
5436b8d40a299cfc7ef0ade041c28bd6
  pvsDef300 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef301) -}
63263a6e9a6a291b303d6ae07ff00965
  pvsDef301 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("xor"#) -}
d26d71b8cba58e4feba53895f6cbdcf8
  pvsDef302 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef303) -}
967215d52d4bd5da5038e833cca3aefb
  pvsDef303 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("with"#) -}
7c4aeb0e231a5bef74b6a00fe3a5c1da
  pvsDef304 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef305) -}
a7dd95e018d6015cfff051b7223bf879
  pvsDef305 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("where"#) -}
d6c46e9dab89e20ba6b721c0fca22697
  pvsDef306 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef307) -}
8f30a76d96bc98ae05ffab485d988d65
  pvsDef307 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("when"#) -}
5cfd3ecb2705397563fa6b921b85da42
  pvsDef308 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef309) -}
672679de3c900f5c539e5b6ec79cd646
  pvsDef309 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("var"#) -}
cbcd5a17c9cffa0d892ecae7df3c993a
  pvsDef31 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef158
                   TSPLexer.pvsDef32) -}
bf1413b84cebe9ac71985dafeb1d6cca
  pvsDef310 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef311) -}
d6da116c402753d68f18406cd3122631
  pvsDef311 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("type+"#) -}
400543ea701107c0057c8cf698f0e643
  pvsDef312 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef313) -}
d42dbf656eaabdcf78267f51911d8040
  pvsDef313 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("type"#) -}
aafa05584176ea7ba427e38b65105282
  pvsDef314 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef315) -}
442d38c9c6c3a3ea0ee94ce1771e1ad5
  pvsDef315 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("true"#) -}
45ff89b3ad4c81a2c345d265b740faff
  pvsDef316 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef317) -}
beafff942eb6d6179c77aab6c7a7cd0b
  pvsDef317 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("theory"#) -}
d49d9d90ce3c27e1ec42ef2027ae91d2
  pvsDef318 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef319) -}
e6b074330fa29bbb4cad66b27e29666f
  pvsDef319 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("theorem"#) -}
c9092cff29e3d1c559f565af225acc7b
  pvsDef32 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef156
                   TSPLexer.pvsDef33) -}
86d4eb7fad5882abb071f97d2f89f4fd
  pvsDef320 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef321) -}
34049c1e9f8959736a6b32952a6226b5
  pvsDef321 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("then"#) -}
2eeedde7cbd7bb7e1c063e73ef19d9a5
  pvsDef322 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef323) -}
82fe3b4afa1b6dc4b77282653adf432b
  pvsDef323 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("table"#) -}
08e2c0011cc2202207b203230db42b8b
  pvsDef324 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef325) -}
bc96ac2f9aaa78743669d4a9df588ab2
  pvsDef325 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("subtypes_of"#) -}
76e5b1f02dadc5b74ce93e62361eeb72
  pvsDef326 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef327) -}
4d7c9c8cd7923bf7ec78b324cfeee68f
  pvsDef327 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("subtypes"#) -}
1532aaad84ec709f2705628a11bdba52
  pvsDef328 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef329) -}
c0f749d7f35dcb9dde7e5e6d29cd3811
  pvsDef329 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("sublemma"#) -}
4570ebd3d1d3edd7551c6131436fb530
  pvsDef33 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef154
                   TSPLexer.pvsDef34) -}
cdb291a5316774f3c952d23b38d48a93
  pvsDef330 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef331) -}
1c3bf7508b8e787a8d9887aa53b44d8f
  pvsDef331 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("recursive"#) -}
5a11f01602141487c6e663f7c04273f2
  pvsDef332 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef333) -}
0e0b9ad2e4fd07158a046ffda7b8e5c7
  pvsDef333 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("proposition"#) -}
c42f3faf1ad412c4d9d2f2577e8b05e5
  pvsDef334 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef335) -}
a81014aff909dae21acb3e09203cdfc2
  pvsDef335 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("postulate"#) -}
20dd1323f6562d65183459a50354010d
  pvsDef336 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef337) -}
85a01bc83254e7730a9f8e5ea1e36c5f
  pvsDef337 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("orelse"#) -}
80bca6cea5c0a26e564563d7e2fb3e48
  pvsDef338 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef339) -}
e6631f20f80eada570645a0901d6e33c
  pvsDef339 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("or"#) -}
294b5f8187c1355d9565963d35e25d10
  pvsDef34 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef152
                   TSPLexer.pvsDef35) -}
992ff322ea8aea1d99a863f7cad6309f
  pvsDef340 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef341) -}
cbca5d3b4d8e6a4063bf085a1414337b
  pvsDef341 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("of"#) -}
cfc674649b50583d453b94a9f227eaca
  pvsDef342 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef343) -}
035bb5d33ab876898140621cdbfd80c9
  pvsDef343 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("obligation"#) -}
a56ac5cecbe3ba1e2a6315db86b9f159
  pvsDef344 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef345) -}
81c012f38c96419bc42fd0f5fc0d8c69
  pvsDef345 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("o"#) -}
7fa192586bab63ccf4637f0f0ff40fd8
  pvsDef346 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef347) -}
b3dc2fb9b3b32d9502792a1cc847a0d6
  pvsDef347 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("not"#) -}
0b98f51b9705efff632c225a71ea5bd7
  pvsDef348 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef349) -}
9acd7ec0e6eaaf7c91f9f56ff3130c60
  pvsDef349 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nonempty_type"#) -}
92053b9b7e97807abd09c715dd1c653b
  pvsDef35 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef150
                   TSPLexer.pvsDef36) -}
e9640666e252a2c1fff1083a8e9fb1d6
  pvsDef350 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef351) -}
6e52acabae063596cf50d5d7d0cf14de
  pvsDef351 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("measure"#) -}
81bb6e08263fa9c7ebdac29c20d08cdb
  pvsDef352 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef353) -}
de7d522e083580ddcef310df25b1d6b0
  pvsDef353 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("macro"#) -}
c78f19ed20d77a18c07270ccbf0ad6ce
  pvsDef354 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef355) -}
e08e088c46134ead27f5fd696b82d267
  pvsDef355 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("library"#) -}
3adce495421fed9b7217ed7f968cd68a
  pvsDef356 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef357) -}
e194ab173d45e0bbcc1cfe311d1cb343
  pvsDef357 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("let"#) -}
dd5d28a0cebbde4d6ccb9fe441d5a580
  pvsDef358 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef359) -}
c8e464cbba4d505b98e3fe11d5e6da83
  pvsDef359 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("lemma"#) -}
762641d70691ae7eb4664542321e6a4e
  pvsDef36 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef148
                   TSPLexer.pvsDef37) -}
6d14c15160eac4084c717ddd7b0e8739
  pvsDef360 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef361) -}
6cf22ac2361f71afbfbe76b1d1bf302b
  pvsDef361 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("law"#) -}
f2bc5aff7da0576a34044e17ec2a2495
  pvsDef362 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef363) -}
827ac382d6e2bdf4dc1e9b36bfaa3e82
  pvsDef363 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("lambda"#) -}
be0a97167063a29c16b3b08f1c89658e
  pvsDef364 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef365) -}
a7db7ab140035a709be0f0a065182b83
  pvsDef365 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("judgement"#) -}
9e32f96c01aee7a201b6642f1165be37
  pvsDef366 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef367) -}
6f8f87feb9b1c26ced6777e41b9ae77a
  pvsDef367 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("inductive"#) -}
df97ae6c6476ff6fbd98a0f3577b2aa3
  pvsDef368 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef369) -}
d8322a972457bc24497180b21efbfe34
  pvsDef369 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("in"#) -}
a79f0ba3d4d0e9df5a6b3a8f3c754fa8
  pvsDef37 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef146
                   TSPLexer.pvsDef38) -}
d0c92b7e1d002b6d139bd7addedbd725
  pvsDef370 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef371) -}
ef612ee6fecff6c2d42190f691844d0b
  pvsDef371 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("importing"#) -}
726c894ab649ff0e7d29a4f2c162ad71
  pvsDef372 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef373) -}
481b0ff060e2e6b4f59323fc72b612c2
  pvsDef373 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("implies"#) -}
c4e83debc92ea2f4dcb008e2dfd96193
  pvsDef374 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef375) -}
d7469ee3e1a62cb01790cb4845e7a27e
  pvsDef375 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("iff"#) -}
dce9cafa1e28c49dfb5ff1832a47096e
  pvsDef376 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef377) -}
7ccd6d1a482f17ff5e66643b111263c3
  pvsDef377 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("if"#) -}
caa0fba363e196ea81b0df90652c5b69
  pvsDef378 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef379) -}
cb61141aa4fb6bbe621ea76f8bbeb062
  pvsDef379 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("has_type"#) -}
c80e6406333b61c2b5276736786ef675
  pvsDef38 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef144
                   TSPLexer.pvsDef39) -}
ee42cd1d0c43c2fa355f42bd066555e3
  pvsDef380 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef381) -}
7ea14ac6e2d422f702dab8ee0081d285
  pvsDef381 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("function"#) -}
2a613f6c15a8200de261dde306832105
  pvsDef382 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef383) -}
32010ba3aaf5d207338874f317a0b680
  pvsDef383 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("from"#) -}
a011ece24c3609d13580bf62bba0228a
  pvsDef384 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef385) -}
2fc9b3764004127478f566b02fb60788
  pvsDef385 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("formula"#) -}
9cdd1f232799842d14d4f0ab09eba1e6
  pvsDef386 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef387) -}
e98816148bec1ef01707112b43ebe687
  pvsDef387 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("forall"#) -}
3316a78167eccf0b263cd4c93958ceb6
  pvsDef388 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef389) -}
dae6a429804513c9b955348c87f05a84
  pvsDef389 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("false"#) -}
280c63d414f43b0d10c76590c9fe730c
  pvsDef39 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef142
                   TSPLexer.pvsDef40) -}
90b2ecc6f31b7a43c832709bc6fcaa0c
  pvsDef390 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef391) -}
5a548f4dc17fb7e6092a461b5d1a6830
  pvsDef391 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("fact"#) -}
b27e1526f52b25e472ea60cd77e550a2
  pvsDef392 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef393) -}
832e1a2a1002d57cb34cfde52e03243d
  pvsDef393 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("exporting"#) -}
886b5e3d4d477dfdd65dce83bcee0e60
  pvsDef394 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef395) -}
566394f23633fab138ab34d5ebe93881
  pvsDef395 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("exists"#) -}
1945d5d06d9b43995687fb8cef506f0c
  pvsDef396 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef397) -}
3bdcf7e5e8f084353782f6b579f8e4fc
  pvsDef397 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("endtable"#) -}
a3ef386a217ad583bba294e399b3507f
  pvsDef398 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef399) -}
a180a9c2a426d4b4dc26236261b1ec98
  pvsDef399 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("endif"#) -}
349228bab0d0e3ca87b29dda92c66c37
  pvsDef4 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef212
                   TSPLexer.pvsDef5) -}
34ace080acddc62e8d4bed9829f583f9
  pvsDef40 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef140
                   TSPLexer.pvsDef41) -}
aa49265c377aad43751080e075ed5802
  pvsDef400 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef401) -}
1b0db98d71c426adf625d3c8c2f665b5
  pvsDef401 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("endcond"#) -}
afbb30278cd99749df453a22432df3d0
  pvsDef402 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef403) -}
d3cd04e63fa7361a909028137ae9d633
  pvsDef403 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("endcases"#) -}
ed2ee331d80183fc0d0551a800c69af9
  pvsDef404 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef405) -}
26e5242de3b8b104034661ae014b1811
  pvsDef405 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("endassuming"#) -}
318253c4cf2ec5db110dce2db62fd065
  pvsDef406 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef407) -}
32cf0e4f526155f121daedf21c8d665c
  pvsDef407 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("end"#) -}
66ce64b665cd212a8195ced5bf09c258
  pvsDef408 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef409) -}
a0abb3c538d778afde8e05eb3bce2350
  pvsDef409 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("elseif"#) -}
b64c603714fdb95c3747d13d4922cb6f
  pvsDef41 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef138
                   TSPLexer.pvsDef42) -}
9ada33a5bff6282349d4060e2d5922ce
  pvsDef410 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef411) -}
51bfc370537dc6e097fa87575b441219
  pvsDef411 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("else"#) -}
ed36da205f2d0ed1682b3c8cc7faa0ec
  pvsDef412 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef413) -}
0994e6dee4719002c35e5eb692648279
  pvsDef413 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("datatype"#) -}
f2cfdba33a02596989e28c8f235f420e
  pvsDef414 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef415) -}
0cd32e56ca27d3eef18331b17024cc2f
  pvsDef415 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("corollary"#) -}
336781efc927d5ef85dfb55cd7da7291
  pvsDef416 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef417) -}
e9ee50cfdd913f0703f855bfdfe67ec7
  pvsDef417 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("conversion-"#) -}
b3d8c4ef604d717061c907011173bf61
  pvsDef418 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef419) -}
9b6ce95de656680222d4d3a80b983296
  pvsDef419 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("conversion+"#) -}
940aa74f5347e288e775e6d691ce427d
  pvsDef42 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef136
                   TSPLexer.pvsDef43) -}
ba6bfc81ac46d5414040473e1671e503
  pvsDef420 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef421) -}
087fbcf3a73c4a21d735795a08248788
  pvsDef421 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("conversion"#) -}
2d6059013d2e622e5687669bc4dfb89a
  pvsDef422 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef423) -}
3c78c75686d0f2601fbc5fc441936e21
  pvsDef423 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("containing"#) -}
85287d21a274acc66144ea47ec143485
  pvsDef424 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef425) -}
7e3cd0e1e23a7d5fab1ba90538baf37a
  pvsDef425 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("conjecture"#) -}
2eeaa18bdc855514da802d7061890878
  pvsDef426 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef427) -}
b4513fed39d32bf1a7c40cb962457fa5
  pvsDef427 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cond"#) -}
896e3477aab5f7684153e6a560383c68
  pvsDef428 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef429) -}
f2daea6df6142376c1735c884394eca9
  pvsDef429 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("closure"#) -}
8b7ac1cca5540012614f0879cb7f109d
  pvsDef43 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef134
                   TSPLexer.pvsDef44) -}
4b3ea5489d20384732e6bd46a6284d9b
  pvsDef430 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef431) -}
8975db7fd4eb63b7e5e80bd4789399cc
  pvsDef431 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("claim"#) -}
7d923a28125781fc7db85db46c8c57fe
  pvsDef432 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef433) -}
bca433e67e9e56d09f33f378e61f544e
  pvsDef433 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("challenge"#) -}
052f1ea571ba0d54c84f0995b7b8c67e
  pvsDef434 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef435) -}
e22fd4f199e5801854eaa1e1563ead4c
  pvsDef435 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("cases"#) -}
de81ec928c538cd4a38ebe3f7909dbe9
  pvsDef436 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef437) -}
7a8c7378a9ae4a4f2f6b0cc950d8c969
  pvsDef437 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("by"#) -}
39e4838d53b8e293c4f5b7eedfc6e2da
  pvsDef438 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef439) -}
b198b87d3ca806175522a90786938151
  pvsDef439 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("but"#) -}
2223fb8b8f6ebb9359e1ea8f9e5c97d5
  pvsDef44 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef132
                   TSPLexer.pvsDef45) -}
aad4b85506c6399aeb6aa7daa0338aa6
  pvsDef440 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef441) -}
f2b972f46aaa5a6c329806c6c6243f08
  pvsDef441 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("begin"#) -}
6b88d1bf319d189ddab8b39ef6b82322
  pvsDef442 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef443) -}
f59806f5887d3ba23f1df603ca393ea8
  pvsDef443 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("axiom"#) -}
35c1fb966f7736e95199803f4a8e0d92
  pvsDef444 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef445) -}
b1cb0e663a0fcdeaa495508214c010a9
  pvsDef445 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("auto_rewrite-"#) -}
306aaf90fbd393c046a5a0b8974c0d98
  pvsDef446 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef447) -}
7355dffa2686787850796f6d68af8fab
  pvsDef447 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("auto_rewrite+"#) -}
3d71d5208355b5897b052822cfe46e0c
  pvsDef448 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef449) -}
25d2e55f33a6cd5fbe3cf7899e93a216
  pvsDef449 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("auto_rewrite"#) -}
a32c45ca136b25b3c45a262a9f69f0c8
  pvsDef45 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef130
                   TSPLexer.pvsDef46) -}
eeca97afba411d3eac106e606bf0a023
  pvsDef450 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef451) -}
e15fcecb195e773ca100c14e0ce2a4e9
  pvsDef451 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("assumption"#) -}
c30f021d928eeaeb7e1c6e5d558153b8
  pvsDef452 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef453) -}
ccb44e340fba03ef2c24611ea936999a
  pvsDef453 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("assuming"#) -}
6a3333d94ac8a821fc17de903dcd0c2c
  pvsDef454 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef455) -}
a51f9af69a55df533a2aaef7244e3384
  pvsDef455 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("array"#) -}
e9a5c5c09fa4c8d1bdc08e53d452f298
  pvsDef456 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef457) -}
ddceae71369befe47dfd28c54ba3a6d2
  pvsDef457 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("andthen"#) -}
fbd2a395e259ad9457e25553c14b2a38
  pvsDef458 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef459) -}
925f7bd9a7d5d9c07da16b3187b5392d
  pvsDef459 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("and"#) -}
4c599f33310c7e13c4e6483274afc4e3
  pvsDef46 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef128
                   TSPLexer.pvsDef47) -}
a7a09292e4dc1d4e6b61b69893193448
  pvsDef460 ::
    Text.Parsec.Prim.State GHC.Base.String st
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,A><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ st
                   @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String st)
                   (eta1 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String st
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String st
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 case eta of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ st
                   (TSPLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   TSPLexer.pvsDef461
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   eta1
                   eta4 } }) -}
4ef56421031bd8d8d7f6e075f7d29fc2
  pvsDef461 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (c :: GHC.Types.Char) ->
                 GHC.List.elem
                   @ GHC.Types.Char
                   GHC.Classes.$fEqChar
                   c
                   TSPLexer.pvsDef_cs) -}
9f4c7b6c4be0b4d9c5bad2707fd6fa52
  pvsDef462 ::
    Text.Parsec.Prim.State GHC.Base.String st
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,A><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ st
                   @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String st)
                   (eta1 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String st
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String st
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 case eta of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ st
                   (TSPLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   TSPLexer.pvsDef463
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   eta1
                   eta4 } }) -}
9a0d2612ff831946312053b38375d285
  pvsDef463 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (c :: GHC.Types.Char) ->
                 GHC.List.elem
                   @ GHC.Types.Char
                   GHC.Classes.$fEqChar
                   c
                   TSPLexer.pvsDef_cs1) -}
3eada6194ed3eb642e8a9ecc444047de
  pvsDef464 ::
    Text.Parsec.Prim.State GHC.Base.String st
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,A><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ st
                   @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String st)
                   (eta1 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String st
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String st
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 case eta of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ st
                   (TSPLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   TSPLexer.pvsDef465
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   eta1
                   eta4 } }) -}
4cf67028c1e8acfea06d3f1e5e2fa1c4
  pvsDef465 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (c :: GHC.Types.Char) ->
                 GHC.List.elem
                   @ GHC.Types.Char
                   GHC.Classes.$fEqChar
                   c
                   TSPLexer.pvsDef_cs2) -}
17ef593dfa8a2f92c9898f244b270119
  pvsDef466 ::
    Text.Parsec.Prim.State GHC.Base.String st
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String st
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,A><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ st
                   @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String st)
                   (eta1 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String st
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String st
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 case eta of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ st
                   (TSPLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   TSPLexer.pvsDef467
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   eta1
                   eta4 } }) -}
aab68e9d86615d0bb08362847b8d2a1f
  pvsDef467 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (c :: GHC.Types.Char) ->
                 GHC.List.elem
                   @ GHC.Types.Char
                   GHC.Classes.$fEqChar
                   c
                   TSPLexer.pvsDef_cs3) -}
55c81d1574f5a644c3686a14bec90a5b
  pvsDef47 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef126
                   TSPLexer.pvsDef48) -}
714ef9f78f25e4b57a73a498e53ca72a
  pvsDef48 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef124
                   TSPLexer.pvsDef49) -}
5b9efcf8b0fa9c62337eee8b4bbe3962
  pvsDef49 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef122
                   TSPLexer.pvsDef50) -}
cfc5a048de4d746e4837a15458858d9d
  pvsDef5 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef210
                   TSPLexer.pvsDef6) -}
f059edc6a0b6becfcd9541e388d5f98f
  pvsDef50 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef120
                   TSPLexer.pvsDef51) -}
fa2e7ca167842ab0a6a6376586df5c63
  pvsDef51 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef118
                   TSPLexer.pvsDef52) -}
8d02bb628073b491a7e8e1380eeff193
  pvsDef52 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef116
                   TSPLexer.pvsDef53) -}
620c997fff51f1a99f5ba242e6f9774a
  pvsDef53 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef114
                   TSPLexer.pvsDef54) -}
a7db263e42ae822938517164bdef7737
  pvsDef54 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef112
                   TSPLexer.pvsDef55) -}
074ea12e3a49c16e31eebe6e64f16972
  pvsDef55 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef110
                   TSPLexer.pvsDef56) -}
14cc2daf98fd391a3d7d2b0e8f28a067
  pvsDef56 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef108
                   TSPLexer.pvsDef57) -}
e83a4551dfbf37a5c8eadae32f38ebb2
  pvsDef57 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef106
                   TSPLexer.pvsDef58) -}
095ec66a6a6d8b33470b01eefc180fed
  pvsDef58 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef104
                   TSPLexer.pvsDef59) -}
c6df8942b99608bb265fa9d3d4e10473
  pvsDef59 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef102
                   TSPLexer.pvsDef60) -}
dbaabb981b7f7efc6db2595af1c7dad4
  pvsDef6 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef208
                   TSPLexer.pvsDef7) -}
4614d2120a663b35d55d088ff9810466
  pvsDef60 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef100
                   TSPLexer.pvsDef61) -}
1ed57799194ba41fe8263c0ca1267d20
  pvsDef61 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef98
                   TSPLexer.pvsDef62) -}
9f68e4e66a7fe2f4cf1728064dd0bec8
  pvsDef62 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef96
                   TSPLexer.pvsDef63) -}
7c34c81872aaeb004fcb715cd0ddae40
  pvsDef63 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef94
                   TSPLexer.pvsDef64) -}
7b6414ef53baaadc6dae1c3e5b2c9e8a
  pvsDef64 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef92
                   TSPLexer.pvsDef65) -}
a6b115b3d05e4fefff360c332febb9ca
  pvsDef65 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef90
                   TSPLexer.pvsDef66) -}
30cb79df2db323da71190dbe1e82ebcb
  pvsDef66 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef88
                   TSPLexer.pvsDef67) -}
0698252a6f50961d2fb92b0ce600f48a
  pvsDef67 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef86
                   TSPLexer.pvsDef68) -}
128a24c1db11b8d21879530a67169443
  pvsDef68 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef84
                   TSPLexer.pvsDef69) -}
7b9d010c668e03b41b17fefeac1d9c30
  pvsDef69 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef82
                   TSPLexer.pvsDef70) -}
c766ab36a0ee8c754ee3138db8b58fc8
  pvsDef7 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef206
                   TSPLexer.pvsDef8) -}
aed9bde44f1dbd3a7c2cc83f2cb27f17
  pvsDef70 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef80
                   TSPLexer.pvsDef71) -}
125743bc255a730935f6ce8ba5c2bacb
  pvsDef71 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef78
                   TSPLexer.pvsDef72) -}
5c11b187998d5ec0a5af06ee8c17fd05
  pvsDef72 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef76
                   TSPLexer.pvsDef73) -}
0ff5908eb3cc3a0825b40a8063608639
  pvsDef73 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef74
                   (GHC.Types.[] @ GHC.Base.String)) -}
c5c7d34152b4abb44252134921d46b1a
  pvsDef74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef75) -}
2ddfc21e7c0c4dde9b54624706610962
  pvsDef75 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("~"#) -}
843871d0cbcfaa54db721836af828e1b
  pvsDef76 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef77) -}
6ebb320d1c90937eb477a901869ef9fe
  pvsDef77 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
82500dfb926f092939df1daed1e4bdb0
  pvsDef78 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef79) -}
cb03fbd23fbaa50cd5c05c40352ea48b
  pvsDef79 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("|}"#) -}
591b354b8213d3d44f7fb546e35d897c
  pvsDef8 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef204
                   TSPLexer.pvsDef9) -}
7606fd200647c2a38d68f166eec49149
  pvsDef80 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef81) -}
68f0ed172ef5de12614c96a178e42d2a
  pvsDef81 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("||"#) -}
f4ea57979287cbea7fab9315fe7b7fcc
  pvsDef82 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef83) -}
859e09be804710bb68d6c51b7a03f46a
  pvsDef83 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("|]"#) -}
3ed2a6902dfb7b55857b1aa01b2740b6
  pvsDef84 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef85) -}
3f9139f360cac039d5b844ed8853f63f
  pvsDef85 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("|["#) -}
a017dc2f10191f137f0a6f67d017cfa5
  pvsDef86 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef87) -}
7ad0e2f2fe2d55e6c779e6b903bbd48e
  pvsDef87 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("|>"#) -}
b38691df405924bd7ce3cb72c3272ca9
  pvsDef88 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef89) -}
60b95ddad2d97f97a89b01a9d30ed23d
  pvsDef89 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("|="#) -}
93fe8898f6d718d36ae7d7a499a8feaf
  pvsDef9 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsDef202
                   TSPLexer.pvsDef10) -}
85a49079a99e89eb3686195d79fb7745
  pvsDef90 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef91) -}
8def9787d8f95f139ff58db900d05677
  pvsDef91 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("|->"#) -}
5a9f54978ea95b7172095cdaae37ce92
  pvsDef92 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef93) -}
f7dc97d789bc4a9e15d735630ae98778
  pvsDef93 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("|-"#) -}
8b3f5a1c4af482292a18ee6eb81bffc5
  pvsDef94 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef95) -}
48afe60e3aa4ee12a8715bfa7385fe14
  pvsDef95 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("|)"#) -}
19ec17252cff6170a5ba72c934f3ed42
  pvsDef96 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef97) -}
5044d7df0c2c4f480152f657ae2633b7
  pvsDef97 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("|"#) -}
035cd11add46c8366ff349c5ad42edca
  pvsDef98 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.pvsDef99) -}
3eeb3a5247261e1bcdfe70a75061b53e
  pvsDef99 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("{||}"#) -}
720924896bf672e66608f434c6022263
  pvsDef_cs :: [GHC.Types.Char]
  {- Unfolding: (GHC.Enum.eftChar 36# 122#) -}
18c8b492dba18a174a5a1c88502c4272
  pvsDef_cs1 :: [GHC.Types.Char]
  {- Unfolding: (TSPLexer.pvsDef_go 36#) -}
c6f3a933c48162426c51a328576fc3a5
  pvsDef_cs2 :: [GHC.Types.Char]
  {- Unfolding: (TSPLexer.pvsDef_go1 36#) -}
10c54015cfad7b600d0e8a16edd00466
  pvsDef_cs3 :: [GHC.Types.Char]
  {- Unfolding: (TSPLexer.pvsDef_go2 36#) -}
79b00d9a1e16ae0e16dfc09b59976719
  pvsDef_go :: GHC.Prim.Int# -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U> -}
c5b37792992393e4d13eb3253935f5ab
  pvsDef_go1 :: GHC.Prim.Int# -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U> -}
86c0497acd543796fcbe12ec08f913aa
  pvsDef_go2 :: GHC.Prim.Int# -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U> -}
99b292c9e9dc3d118ec96abb51f14a58
  pvsExpression :: Text.Parsec.String.Parser LexerTypes.Expression
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.pvsExpression1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <LexerTypes.Op>_R)) -}
da176cc5acb37e691e7495a741f4158c
  pvsExpression1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (LexerTypes.Op
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (LexerTypes.Op
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: LexerTypes.Op
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: LexerTypes.Op
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ LexerTypes.Op
                   TSPLexer.pvsExpression_p
                   TSPLexer.pvsExpression2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
937531fd164361a9c1a23e14fa1a3aae
  pvsExpression2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsExpression_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
84ea927c46c47be718a190a43d9db952
  pvsExpression3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("expression"#) -}
e0f955c66cb89359764c4415c82df8e1
  pvsExpression_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   TSPLexer.pvsExpression3) -}
266f89bd9d43ba0f1bf8d5344bf75e00
  pvsExpression_p ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity LexerTypes.Op
41091af9ff4fd384a2ab9a25000ee855
  pvsStateInst ::
    Text.Parsec.String.Parser (GHC.Base.String, LexerTypes.Literal)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.pvsStateInst1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <(GHC.Base.String, LexerTypes.Expression)>_R)) -}
91433fe8082d8e1858e2a331dd589478
  pvsStateInst1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ((GHC.Base.String, LexerTypes.Expression)
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((GHC.Base.String, LexerTypes.Expression)
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: (GHC.Base.String, LexerTypes.Expression)
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: (GHC.Base.String, LexerTypes.Expression)
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ (GHC.Base.String, LexerTypes.Expression)
                   TSPLexer.pvsStateInst4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(GHC.Base.String, LexerTypes.Expression)>_R))
                   TSPLexer.pvsStateInst2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
a1e551eab21a0c5d6f35a49ef221978f
  pvsStateInst2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsStateInst_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
f92ec838e0514d5625f4834cd125b2fa
  pvsStateInst3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("state instantiation declaration"#) -}
fc345d2b45218f058610a618dfaa15bf
  pvsStateInst4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String, LexerTypes.Expression)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Base.String, LexerTypes.Expression)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: (GHC.Base.String, LexerTypes.Expression)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: (GHC.Base.String, LexerTypes.Expression)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 TSPLexer.pvsStateInst_m1
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Base.String>_R)
                   @ b1
                   s1
                   (\ (x3 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    TSPLexer.$wk
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x4 :: (GHC.Base.String, LexerTypes.Expression))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x3 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    TSPLexer.$wk
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x4 :: (GHC.Base.String, LexerTypes.Expression))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
498525520b6e948a4374d9de227caf8f
  pvsStateInst5 ::
    GHC.Base.String
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> ((GHC.Base.String, LexerTypes.Expression)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> ((GHC.Base.String, LexerTypes.Expression)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
f2817b275f7d8b901e0de7af5b67835b
  pvsStateInst6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   TSPLexer.pvsStateInst7) -}
dc8b5232d76a16503170eb9cd3680e11
  pvsStateInst7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("_var`"#) -}
f1d6686aa974a7495aa6d9621c77c76e
  pvsStateInst_m1 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (TSPLexer.terminatedString TSPLexer.pvsStateInst6) -}
909595da864dbcbf99f3b929e11d333c
  pvsStateInst_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   TSPLexer.pvsStateInst3) -}
726d9ae0c130434ad40b61f148223dbc
  pvsStateInstantiator ::
    Text.Parsec.String.Parser LexerTypes.PVSInstDef
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.pvsStateInstantiator1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <(GHC.Base.String, [(GHC.Base.String, LexerTypes.Literal)])>_R)) -}
0fe4900aab394a3634d94fe9a6d3f5fb
  pvsStateInstantiator1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ((GHC.Base.String, [(GHC.Base.String, LexerTypes.Literal)])
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((GHC.Base.String, [(GHC.Base.String, LexerTypes.Literal)])
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: (GHC.Base.String, [(GHC.Base.String, LexerTypes.Literal)])
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: (GHC.Base.String, [(GHC.Base.String, LexerTypes.Literal)])
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ (GHC.Base.String, [(GHC.Base.String, LexerTypes.Literal)])
                   TSPLexer.pvsStateInstantiator4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(GHC.Base.String, [(GHC.Base.String, LexerTypes.Literal)])>_R))
                   TSPLexer.pvsStateInstantiator2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
a16084aef2236742f2a3115d585316e1
  pvsStateInstantiator2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.pvsStateInstantiator_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
601654aeb41111f7c42246d490d96ecf
  pvsStateInstantiator3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("State Instantiator Declaration"#) -}
1676063e16ad0c75ee8e3fcfacf14a56
  pvsStateInstantiator4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String, [(GHC.Base.String, LexerTypes.Literal)])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Base.String, [(GHC.Base.String, LexerTypes.Literal)])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
2e8800fd27aba89e79107ea36e932353
  pvsStateInstantiator_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   TSPLexer.pvsStateInstantiator3) -}
1fccc020ad526e02cd71bb923c49451b
  pvsType :: Text.Parsec.String.Parser LexerTypes.PVSType
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.pvsType1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <LexerTypes.PVSType>_R)) -}
0a8c325ea067b99a6e8077f2dffdecce
  pvsType1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (LexerTypes.PVSType
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (LexerTypes.PVSType
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: LexerTypes.PVSType
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: LexerTypes.PVSType
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ LexerTypes.PVSType
                   TSPLexer.pvsType2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <LexerTypes.PVSType>_R))
                   TSPLexer.name_msgs
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
719b58859f3a3fd5556f19dc058876f6
  pvsType2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (LexerTypes.PVSType
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (LexerTypes.PVSType
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
80476fa716626a30e9256ccd566a4dbd
  reserved ::
    GHC.Base.String
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case TSPLexer.lexer
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 }) -}
1904f9b4d03eb8fb893cbb8056cc2cba
  reservedOp ::
    GHC.Base.String
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case TSPLexer.lexer
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 }) -}
5083c995b57a2bcf3c8b3a994ad90546
  runTSPparser ::
    GHC.Classes.Eq a =>
    Text.Parsec.String.Parser a -> GHC.Base.String -> a
  {- Arity: 3, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a ($dEq :: GHC.Classes.Eq a) -> TSPLexer.runTSPparser1 @ a) -}
8a60aeeafc5004a895828092e8c826cb
  runTSPparser1 ::
    Text.Parsec.String.Parser a -> GHC.Base.String -> a
  {- Arity: 2, Strictness: <L,1*C1(C1(C1(C1(C1(U)))))><L,U>,
     Unfolding: (\ @ a
                   (p68 :: Text.Parsec.String.Parser a)
                   (input :: GHC.Base.String) ->
                 case (Text.Parsec.Prim.runPT
                         @ GHC.Base.String
                         @ Data.Functor.Identity.Identity
                         @ GHC.Types.Char
                         @ ()
                         @ a
                         (TSPLexer.$s$fStream[]mtok @ GHC.Types.Char)
                         p68
                         GHC.Tuple.()
                         (GHC.Types.[] @ GHC.Types.Char)
                         input)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Data.Either.Either Text.Parsec.Error.ParseError a>_R) of wild {
                   Data.Either.Left err -> TSPLexer.runTSPparser2 @ a err
                   Data.Either.Right x3 -> x3 }) -}
1edf2f7454e9901331ec5b3159d85977
  runTSPparser2 :: Text.Parsec.Error.ParseError -> a
  {- Arity: 1, Strictness: <B,1*U(U(1*U,U,U),1*U)>x, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: Text.Parsec.Error.ParseError) ->
                 case w of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                 case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                 TSPLexer.$wlvl @ a ww4 ww5 ww6 ww2 } }) -}
5ebe43a2938c7fe3f8cd69aab5e5be82
  semi ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String u Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (\ @ u ->
                 case TSPLexer.lexer
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds22 }) -}
db2b8ce1a7170bad1e540198e31568de
  sepEquality ::
    LexerTypes.Expression
    -> (LexerTypes.Expression, LexerTypes.Expression)
  {- Arity: 1, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.Expression) ->
                 case ds of wild {
                   DEFAULT -> TSPLexer.sepEquality1
                   LexerTypes.Equals x3 y -> (x3, y) }) -}
cc315d7135ec07a7c3424dae03d244e6
  sepEquality1 :: (LexerTypes.Expression, LexerTypes.Expression)
  {- Strictness: x -}
be79407107e5ace7271340d334e15847
  sortPerm ::
    [LexerTypes.Tperm]
    -> ([LexerTypes.TVarDec], [LexerTypes.TSPTable],
        [LexerTypes.PVSTypeDef], [LexerTypes.PVSInstDef],
        [LexerTypes.PVSFunction], [LexerTypes.PVSMacro])
    -> ([LexerTypes.TVarDec], [LexerTypes.TSPTable],
        [LexerTypes.PVSTypeDef], [LexerTypes.PVSInstDef],
        [LexerTypes.PVSFunction], [LexerTypes.PVSMacro])
  {- Arity: 2, Strictness: <S,1*U><S,1*U(U,U,U,U,U,U)>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: [LexerTypes.Tperm])
                   (w1 :: ([LexerTypes.TVarDec], [LexerTypes.TSPTable],
                           [LexerTypes.PVSTypeDef], [LexerTypes.PVSInstDef],
                           [LexerTypes.PVSFunction], [LexerTypes.PVSMacro])) ->
                 case w1 of ww { (,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case TSPLexer.$wsortPerm
                        w
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ww6 of ww7 { (#,,,,,#) ww8 ww9 ww10 ww11 ww12 ww13 ->
                 (ww8, ww9, ww10, ww11, ww12, ww13) } }) -}
057736a8e12a082d419d0428beb443fe
  subExpr :: Text.Parsec.String.Parser LexerTypes.Expression
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.subExpr1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <LexerTypes.Expression>_R)) -}
98578913e268bb40eba9aa0e9dd7a0a2
  subExpr1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (LexerTypes.Expression
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (LexerTypes.Expression
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
b55804aaec4987470cf9fa750575455e
  swapper :: Text.Parsec.String.Parser LexerTypes.Replacement
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.swapper1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <(LexerTypes.Expression, LexerTypes.Expression)>_R)) -}
d6b54526fe42f859653b40c874252275
  swapper1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ((LexerTypes.Expression, LexerTypes.Expression)
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((LexerTypes.Expression, LexerTypes.Expression)
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: (LexerTypes.Expression, LexerTypes.Expression)
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: (LexerTypes.Expression, LexerTypes.Expression)
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ (LexerTypes.Expression, LexerTypes.Expression)
                   TSPLexer.swapper4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(LexerTypes.Expression, LexerTypes.Expression)>_R))
                   TSPLexer.swapper2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
0210191a383f7252f687c4ebbbbd9e5a
  swapper2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.swapper_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
243b50a2da1fb63ee45e0a2267c80e16
  swapper3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("synonym declaration"#) -}
73505573564df4510bf5a16f975a20fb
  swapper4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((LexerTypes.Expression, LexerTypes.Expression)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((LexerTypes.Expression, LexerTypes.Expression)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: (LexerTypes.Expression, LexerTypes.Expression)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: (LexerTypes.Expression, LexerTypes.Expression)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ LexerTypes.Op
                   TSPLexer.pvsExpression_p
                   TSPLexer.pvsExpression2
                   @ b1
                   s1
                   (\ (x3 :: LexerTypes.Expression)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    cok
                      (TSPLexer.sepEquality x3)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   cerr
                   (\ (x3 :: LexerTypes.Expression)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    eok
                      (TSPLexer.sepEquality x3)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eerr) -}
313dd8c66a299b76bb69f47d43d4a578
  swapper_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.swapper3) -}
28dab9dbc02d187328fa603b9d1c2732
  swappers :: Text.Parsec.String.Parser [LexerTypes.Replacement]
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.swappers1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[LexerTypes.Replacement]>_R)) -}
e5fb51418fd555119ee0bd4e91795350
  swappers1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([LexerTypes.Replacement]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([LexerTypes.Replacement]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: [LexerTypes.Replacement]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: [LexerTypes.Replacement]
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [LexerTypes.Replacement]
                   TSPLexer.swappers3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[LexerTypes.Replacement]>_R))
                   TSPLexer.swappers_msgs
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
8935084b2c0bf9d2595530de6a4741e8
  swappers2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("List of Synonym Declarations"#) -}
509c2953af0ee157fc5f101e39f2d9b2
  swappers3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([LexerTypes.Replacement]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([LexerTypes.Replacement]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
6b68ee45b4c1e7baaeb39f9502eb1737
  swappers_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.swappers2) -}
d7610a42a8616cce7740cf61275ab855
  swappers_msgs :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.swappers_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
09cd5ce561eba4e77d251daf7c1c5e5f
  symbol ::
    GHC.Base.String
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String u Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (\ @ u ->
                 case TSPLexer.lexer
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds14 }) -}
966231d16bec2a0df740dd9393d102c6
  table ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char st LexerTypes.Op]]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op]
                   (TSPLexer.table44 @ st)
                   (TSPLexer.table1 @ st)) -}
c4009eb9b1959de15b683eea6730f7de
  table1 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char st LexerTypes.Op]]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op]
                   (TSPLexer.table36 @ st)
                   (TSPLexer.table2 @ st)) -}
6b851e6e132356d85fc2209ce48029a3
  table10 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op1
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wbinary
                        @ LexerTypes.Op1
                        @ st
                        TSPLexer.pvsDef188
                        TSPLexer.table9
                        LexerTypes.Add
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op1
                   ww1
                   ww2 }) -}
a3d3f6108159f8ccbb19d39414aa4631
  table11 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table12 @ st)
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char st LexerTypes.Op))) -}
0bbc46cfc7898de45a931ab3822f21f5
  table12 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op1
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wbinary
                        @ LexerTypes.Op1
                        @ st
                        TSPLexer.pvsDef192
                        TSPLexer.table9
                        LexerTypes.Multiply
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op1
                   ww1
                   ww2 }) -}
2760b993ff3a9fa621c8b942a26d1796
  table13 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table20 @ st)
                   (TSPLexer.table14 @ st)) -}
53aff4508ddf4ee531414ab0297fcb01
  table14 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table19 @ st)
                   (TSPLexer.table15 @ st)) -}
d000047dfdcea46f5eb7022c8a391a19
  table15 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table16 @ st)
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char st LexerTypes.Op))) -}
332ee10e6d5ff4b4cf64a1b5975c952e
  table16 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op1
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wbinary
                        @ LexerTypes.Op1
                        @ st
                        TSPLexer.table17
                        TSPLexer.table9
                        LexerTypes.Or
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op1
                   ww1
                   ww2 }) -}
2f02d4f9228adf35afa1453ce775ac77
  table17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.table18) -}
07147559b4187ad659fbb19c368b6af9
  table18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OR"#) -}
ef22fb5301b5449e2e6518cfd5a39601
  table19 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op1
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wbinary
                        @ LexerTypes.Op1
                        @ st
                        TSPLexer.pvsDef208
                        TSPLexer.table9
                        LexerTypes.And
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op1
                   ww1
                   ww2 }) -}
98ae9e1d48935069f0ef711d39352c5f
  table2 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char st LexerTypes.Op]]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op]
                   (TSPLexer.table23 @ st)
                   (TSPLexer.table3 @ st)) -}
accf0124652e239705ec98e83ce6371e
  table20 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op1
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wbinary
                        @ LexerTypes.Op1
                        @ st
                        TSPLexer.table21
                        TSPLexer.table9
                        LexerTypes.And
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op1
                   ww1
                   ww2 }) -}
98c93a5030d3137046d21183b8944280
  table21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.table22) -}
97a7cc16cddf2947a90ceab5a39c2289
  table22 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AND"#) -}
acc1e7ca5df16c8b07b7794bce661798
  table23 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table35 @ st)
                   (TSPLexer.table24 @ st)) -}
d5f25a8da0e8a3fa75eaa67e6ae9a145
  table24 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table34 @ st)
                   (TSPLexer.table25 @ st)) -}
88ff93ead388fec726452367594fd59a
  table25 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table33 @ st)
                   (TSPLexer.table26 @ st)) -}
cc02585fdb5b6d9e30fdc01e3c0ad4ec
  table26 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table32 @ st)
                   (TSPLexer.table27 @ st)) -}
9ae9c3187f3ae43cf57d93f8d1f8375e
  table27 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table31 @ st)
                   (TSPLexer.table28 @ st)) -}
54d0cc215794fe5812edc5d8f1df704c
  table28 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table29 @ st)
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char st LexerTypes.Op))) -}
3f58ff3098c31dc04a08ab6ecfc8b64c
  table29 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op1
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wbinary
                        @ LexerTypes.Op1
                        @ st
                        TSPLexer.pvsDef158
                        TSPLexer.table30
                        LexerTypes.Less
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op1
                   ww1
                   ww2 }) -}
2977ab5c1b8c8273b783ed8479d87030
  table3 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char st LexerTypes.Op]]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op]
                   (TSPLexer.table13 @ st)
                   (TSPLexer.table4 @ st)) -}
6056509c6d83e0cd7b821020b1d9ec78
  table30 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '='#) -}
de49e26c8a60c5a21159b3a01df65555
  table31 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op1
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wbinary
                        @ LexerTypes.Op1
                        @ st
                        TSPLexer.pvsDef138
                        TSPLexer.table30
                        LexerTypes.Greater
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op1
                   ww1
                   ww2 }) -}
9cbc9aa7d322736a7cd041cd4f70f868
  table32 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op1
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wbinary
                        @ LexerTypes.Op1
                        @ st
                        TSPLexer.pvsDef152
                        TSPLexer.table9
                        LexerTypes.LessEquals
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op1
                   ww1
                   ww2 }) -}
17471cd7fcf56d4946bce9a3efc05a03
  table33 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op1
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wbinary
                        @ LexerTypes.Op1
                        @ st
                        TSPLexer.pvsDef136
                        TSPLexer.table9
                        LexerTypes.GreaterEquals
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op1
                   ww1
                   ww2 }) -}
07db3e55b53dc912a4841459d871d2ff
  table34 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op1
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wbinary
                        @ LexerTypes.Op1
                        @ st
                        TSPLexer.pvsDef172
                        TSPLexer.table9
                        LexerTypes.NotEquals
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op1
                   ww1
                   ww2 }) -}
6631d64d4c4bf76d78ed8280dd079855
  table35 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op1
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wbinary
                        @ LexerTypes.Op1
                        @ st
                        TSPLexer.pvsDef144
                        TSPLexer.table9
                        LexerTypes.Equals
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op1
                   ww1
                   ww2 }) -}
4ea2e1de80b1c5bcf958697dd341868c
  table36 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table43 @ st)
                   (TSPLexer.table37 @ st)) -}
3895db9f738754b2bf04fbcd713e5902
  table37 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table42 @ st)
                   (TSPLexer.table38 @ st)) -}
d96113f4560fff46d23ff440c8f06d6e
  table38 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table39 @ st)
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char st LexerTypes.Op))) -}
b05320dc388b340280d6d4fee836e0c9
  table39 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wprefix
                        @ LexerTypes.Op
                        @ st
                        TSPLexer.table40
                        TSPLexer.table9
                        LexerTypes.Not of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Prefix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op
                   ww1 }) -}
200bf909de791939bb5552a11d65d568
  table4 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char st LexerTypes.Op]]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op]
                   (TSPLexer.table11 @ st)
                   (TSPLexer.table5 @ st)) -}
f12a0d48cd8f1b6263ae2dafda0b7c68
  table40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.table41) -}
f680f405a5f114d3fd5e4f4e50848c40
  table41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("NOT"#) -}
9d62ed2eae7c5ea2b36992267d3e1dfa
  table42 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wprefix
                        @ LexerTypes.Op
                        @ st
                        TSPLexer.pvsDef188
                        TSPLexer.table9
                        (GHC.Base.id @ LexerTypes.Op) of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Prefix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op
                   ww1 }) -}
97a58e7a14940922e7f0462caad089ea
  table43 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wprefix
                        @ LexerTypes.Op
                        @ st
                        TSPLexer.pvsDef182
                        TSPLexer.table9
                        LexerTypes.Negative of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Prefix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op
                   ww1 }) -}
ece3c4beb4da47c285cd6d081214bd38
  table44 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table55 @ st)
                   (TSPLexer.table45 @ st)) -}
bf1c945a2d18c374b8901cd288c46cf3
  table45 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table52 @ st)
                   (TSPLexer.table46 @ st)) -}
2d4b7a31153fa860588d77090f221d29
  table46 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table51 @ st)
                   (TSPLexer.table47 @ st)) -}
f6492c3fde4868ebff228e3520d60101
  table47 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table48 @ st)
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char st LexerTypes.Op))) -}
972b7d1b8890b549751cc4027142703a
  table48 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wpostfix
                        @ LexerTypes.Op
                        @ st
                        TSPLexer.table49
                        TSPLexer.table9
                        (GHC.Base.id @ LexerTypes.Op) of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Postfix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op
                   ww1 }) -}
4b295fdc7bae5773f08d1b30de4e4d1b
  table49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.table50) -}
a4681bb1b07ddb1b9f2def69843c1506
  table5 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char st LexerTypes.Op]]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op]
                   (TSPLexer.table6 @ st)
                   (GHC.Types.[]
                      @ [Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char st LexerTypes.Op])) -}
83ef918853e49fee257849d37d4777d2
  table50 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\t"#) -}
ab0762b2f727bf2f654350ab1448163a
  table51 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wprefix
                        @ LexerTypes.Op
                        @ st
                        TSPLexer.table49
                        TSPLexer.table9
                        (GHC.Base.id @ LexerTypes.Op) of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Prefix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op
                   ww1 }) -}
8383cd5c4089a11af22dde4183cedd91
  table52 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wpostfix
                        @ LexerTypes.Op
                        @ st
                        TSPLexer.table53
                        TSPLexer.table9
                        (GHC.Base.id @ LexerTypes.Op) of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Postfix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op
                   ww1 }) -}
9f90bd8bdceec13f7b8e3441c199d509
  table53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.table54) -}
61efd2db562083bc2d49b9e10f66133d
  table54 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" "#) -}
33a64b1cdd17a93398a56ee7e0bc6f95
  table55 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wprefix
                        @ LexerTypes.Op
                        @ st
                        TSPLexer.table53
                        TSPLexer.table9
                        (GHC.Base.id @ LexerTypes.Op) of ww { Unit# ww1 ->
                 Text.ParserCombinators.Parsec.Expr.Prefix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op
                   ww1 }) -}
4995715b97c3b4582b4fd161f84bdb9b
  table6 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table10 @ st)
                   (TSPLexer.table7 @ st)) -}
61e21e8e2cc24d22b43840c52ab3d6c6
  table7 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char st LexerTypes.Op]
  {- Strictness: m2,
     Unfolding: (\ @ st ->
                 GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char st LexerTypes.Op)
                   (TSPLexer.table8 @ st)
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char st LexerTypes.Op))) -}
a381c2f38c5b60a5eb9200f454c47033
  table8 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char st LexerTypes.Op1
  {- Unfolding: (\ @ st ->
                 case TSPLexer.$wbinary
                        @ LexerTypes.Op1
                        @ st
                        TSPLexer.pvsDef182
                        TSPLexer.table9
                        LexerTypes.Subtract
                        Text.Parsec.Expr.AssocLeft of ww { (#,#) ww1 ww2 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ st
                   @ LexerTypes.Op1
                   ww1
                   ww2 }) -}
d90dd327f26151ca990634a8c3c40f22
  table9 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '@'#) -}
aec4ebfb323df076ec2f56018e94f956
  terminatedString ::
    GHC.Base.String -> Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 1, Strictness: <L,U> -}
fcf2d9f2c5929d1f5ba2802b5c5f28ba
  terminator :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.terminator1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Base.String>_R)) -}
1483300fe36c6cdde6ba7c5dae08d8e3
  terminator1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ GHC.Base.String
                   TSPLexer.terminator3
                   TSPLexer.terminator2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))) -}
ef9b9b5e32a92cfa046f1d1d32754abf
  terminator2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: GHC.Base.String
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: GHC.Base.String
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 TSPLexer.$wterminator @ b1 ww1 ww5 ww6 ww7 ww3 w1 w2 w4 } }) -}
700e9e65e9b29ddf88e95da877282f04
  terminator3 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity ()
  {- Unfolding: (case TSPLexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 TSPLexer.terminator4 }) -}
29cecae495e7932fc5f1897b92c84355
  terminator4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.terminator5) -}
94ed2b9f6e9ee682097975d65db07005
  terminator5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("END"#) -}
b407b39deab0810565b8526e20794ebe
  timeRefID ::
    Text.Parsec.String.Parser (LexerTypes.ID_Path, LexerTypes.Temporal)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.timeRefID1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <(LexerTypes.ID_Path, LexerTypes.Temporal)>_R)) -}
494b10c21a0079fee390e4acd8615540
  timeRefID1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((LexerTypes.ID_Path, LexerTypes.Temporal)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((LexerTypes.ID_Path, LexerTypes.Temporal)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: (LexerTypes.ID_Path, LexerTypes.Temporal)
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: (LexerTypes.ID_Path, LexerTypes.Temporal)
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ (LexerTypes.ID_Path, LexerTypes.Temporal)
                   TSPLexer.timeRefID4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(LexerTypes.ID_Path, LexerTypes.Temporal)>_R))
                   TSPLexer.timeRefID2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
1d55fc133be03d6585c343bb31a04176
  timeRefID2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.timeRefID_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
93ee7fec5e7fe34eb1a643b4751a28aa
  timeRefID3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Time referenced identifier"#) -}
7cc681d47e1d65a455da470e5eada7ca
  timeRefID4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((LexerTypes.ID_Path, LexerTypes.Temporal)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((LexerTypes.ID_Path, LexerTypes.Temporal)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: (LexerTypes.ID_Path, LexerTypes.Temporal)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eok :: (LexerTypes.ID_Path, LexerTypes.Temporal)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 let {
                   eerr1 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b
                     {- Arity: 1, Strictness: <L,U(U(U,U,U),U)> -}
                   = \ (err :: Text.Parsec.Error.ParseError) ->
                     TSPLexer.timeRefID7
                       @ b
                       s1
                       cok
                       cerr
                       (\ (y :: (LexerTypes.ID_Path, LexerTypes.Temporal))
                          (s' :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                          (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                        eok y s' (Text.Parsec.Error.mergeError err err'))
                       (\ (err' :: Text.Parsec.Error.ParseError) ->
                        eerr (Text.Parsec.Error.mergeError err err'))
                 } in
                 TSPLexer.timeRefID5 @ b s1 cok eerr1 eok eerr1) -}
571d3b4f5b0991e80c1c8ab4b8c3c7a8
  timeRefID5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((LexerTypes.ID_Path, LexerTypes.Temporal)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((LexerTypes.ID_Path, LexerTypes.Temporal)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: (LexerTypes.ID_Path, LexerTypes.Temporal)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: (LexerTypes.ID_Path, LexerTypes.Temporal)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 case TSPLexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds1
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Base.String>_R)
                   @ b1
                   s1
                   (\ (x3 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    TSPLexer.timeRefID6
                      x3
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x4 :: (LexerTypes.ID_Path, LexerTypes.Temporal))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x3 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    TSPLexer.timeRefID6
                      x3
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x4 :: (LexerTypes.ID_Path, LexerTypes.Temporal))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr }) -}
3b02b3311173409c7c819a27357a79d7
  timeRefID6 ::
    GHC.Base.String
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> ((LexerTypes.ID_Path, LexerTypes.Temporal)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> ((LexerTypes.ID_Path, LexerTypes.Temporal)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
271e1172c26c3a72bd569f2d99455c68
  timeRefID7 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((LexerTypes.ID_Path, LexerTypes.Temporal)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((LexerTypes.ID_Path, LexerTypes.Temporal)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: (LexerTypes.ID_Path, LexerTypes.Temporal)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: (LexerTypes.ID_Path, LexerTypes.Temporal)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 case TSPLexer.lexer
                        @ () of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds1
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Base.String>_R)
                   @ b1
                   s1
                   (\ (x3 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    TSPLexer.timeRefID8
                      x3
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x4 :: (LexerTypes.ID_Path, LexerTypes.Temporal))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x3 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    TSPLexer.timeRefID8
                      x3
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x4 :: (LexerTypes.ID_Path, LexerTypes.Temporal))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr }) -}
d0fa8b89a353102dd3fa728b51e1fe72
  timeRefID8 ::
    GHC.Base.String
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> ((LexerTypes.ID_Path, LexerTypes.Temporal)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> ((LexerTypes.ID_Path, LexerTypes.Temporal)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
d4a3d30f6301b1bbe081f1fee0eb5d4f
  timeRefID_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.timeRefID3) -}
32d3b8b7e1ca90751b60ffed24a9d9d1
  timelineReference :: Text.Parsec.String.Parser GHC.Types.Int
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.timelineReference1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Types.Int>_R)) -}
da9c9f8bfdb99199b251f114a3bdcad3
  timelineReference1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: GHC.Types.Int
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: GHC.Types.Int
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Int
                   TSPLexer.timelineReference3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Int>_R))
                   TSPLexer.timelineReference_msgs
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
a2cd74aacd11eb559f511c9a03cf3f8a
  timelineReference2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Temporal Reference"#) -}
d1185e8565d4b9ba4c776fd9c9387259
  timelineReference3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
e7963b19bb8444a683762c65315cf015
  timelineReference_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   TSPLexer.timelineReference2) -}
cf994f79071ce30f0f25278327fa4a76
  timelineReference_msgs :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.timelineReference_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
affc30225e0dcc64b7f98de0435be452
  tspDefInst :: Text.Parsec.String.Parser LexerTypes.PVSInstDef
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.tspDefInst1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <LexerTypes.PVSInstDef>_R)) -}
9a5b691ab080adfb4477a90afa233a40
  tspDefInst1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (LexerTypes.PVSInstDef
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (LexerTypes.PVSInstDef
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: LexerTypes.PVSInstDef
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: LexerTypes.PVSInstDef
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ LexerTypes.PVSInstDef
                   TSPLexer.tspDefInst4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <LexerTypes.PVSInstDef>_R))
                   TSPLexer.tspDefInst2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
3fe8f824b04c0c8049fe807d284b724a
  tspDefInst2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.tspDefInst_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
b02b68332c78175dddc50955c7ad77d4
  tspDefInst3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Structure Instantiation Definition"#) -}
c29e3c09cc5bfcc7c4c73f83b448b24f
  tspDefInst4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (LexerTypes.PVSInstDef
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (LexerTypes.PVSInstDef
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
0537d716a6f0ebe456c7f5465aaf1c30
  tspDefInst_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.tspDefInst3) -}
ea3d924ea9bf52a8c2b645b52aac3fcc
  tspFuncDec :: Text.Parsec.String.Parser LexerTypes.PVSFunction
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.tspFuncDec1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <LexerTypes.PVSFunction>_R)) -}
cad805aeedebc4442508136e9faaa848
  tspFuncDec1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (LexerTypes.PVSFunction
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (LexerTypes.PVSFunction
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: LexerTypes.PVSFunction
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: LexerTypes.PVSFunction
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 TSPLexer.$wtspFuncDec @ b1 ww1 ww5 ww6 ww7 ww3 w1 w2 w3 w4 } }) -}
8331a0727a640f0bebd7e495851acb5b
  tspLine :: Text.Parsec.String.Parser LexerTypes.TSPLine
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.tspLine1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <(LexerTypes.Expression, LexerTypes.Expression)>_R)) -}
427761680a7ddee3f0ce1a8f69e80e87
  tspLine1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ((LexerTypes.Expression, LexerTypes.Expression)
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((LexerTypes.Expression, LexerTypes.Expression)
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: (LexerTypes.Expression, LexerTypes.Expression)
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: (LexerTypes.Expression, LexerTypes.Expression)
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ (LexerTypes.Expression, LexerTypes.Expression)
                   TSPLexer.tspLine4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(LexerTypes.Expression, LexerTypes.Expression)>_R))
                   TSPLexer.tspLine2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
3b9483129ebfa95c39f6243e7539852a
  tspLine2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.tspLine_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
d48de865996149d9349e189a2e17b654
  tspLine3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Tabular Specification Line"#) -}
9b228b4fb711fc8dcac71a90f7e85880
  tspLine4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((LexerTypes.Expression, LexerTypes.Expression)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((LexerTypes.Expression, LexerTypes.Expression)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ (LexerTypes.Expression, LexerTypes.Expression)
                   TSPLexer.tspLine7
                   TSPLexer.tspLine5
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(LexerTypes.Expression, LexerTypes.Expression)>_R))) -}
f99a52c5fd69379dba9cd47bfdf8d9fa
  tspLine5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((LexerTypes.Expression, LexerTypes.Expression)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((LexerTypes.Expression, LexerTypes.Expression)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: (LexerTypes.Expression, LexerTypes.Expression)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: (LexerTypes.Expression, LexerTypes.Expression)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ LexerTypes.Op
                   TSPLexer.pvsExpression_p
                   TSPLexer.pvsExpression2
                   @ b1
                   s1
                   (\ (x3 :: LexerTypes.Expression)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    TSPLexer.tspLine6
                      x3
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x4 :: (LexerTypes.Expression, LexerTypes.Expression))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x3 :: LexerTypes.Expression)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    TSPLexer.tspLine6
                      x3
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x4 :: (LexerTypes.Expression, LexerTypes.Expression))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
f47dc83705ef3b9b1e8509bf348744be
  tspLine6 ::
    LexerTypes.Expression
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> ((LexerTypes.Expression, LexerTypes.Expression)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> ((LexerTypes.Expression, LexerTypes.Expression)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
700cb9a81ac2e7a548291150c247aba1
  tspLine7 :: Text.Parsec.String.Parser GHC.Types.Char
  {- Unfolding: (TSPLexer.wchar TSPLexer.tspLine8) -}
b08a533c741ee4ee719a76b8a470dbe2
  tspLine8 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '|'#) -}
e0769d3bad6292d6e75b4d7ed2fadc40
  tspLine_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.tspLine3) -}
0fe9f38579337bce575989da9a30e118
  tspMacro :: Text.Parsec.String.Parser LexerTypes.PVSMacro
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.tspMacro1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <(GHC.Base.String, LexerTypes.PVSType,
                            LexerTypes.Expression)>_R)) -}
8a33b0fb2bd4beb3aaac1436bc740a52
  tspMacro1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ((GHC.Base.String, LexerTypes.PVSType, LexerTypes.Expression)
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((GHC.Base.String, LexerTypes.PVSType, LexerTypes.Expression)
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: (GHC.Base.String, LexerTypes.PVSType,
                             LexerTypes.Expression)
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: (GHC.Base.String, LexerTypes.PVSType,
                             LexerTypes.Expression)
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ (GHC.Base.String, LexerTypes.PVSType, LexerTypes.Expression)
                   TSPLexer.tspMacro4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(GHC.Base.String, LexerTypes.PVSType, LexerTypes.Expression)>_R))
                   TSPLexer.tspMacro2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
9654c435396468d100c706e4953d9138
  tspMacro2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.tspMacro_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
44da5992e45a101c7c61908e6c3b4d41
  tspMacro3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PVS Macro Declaration"#) -}
79095f2f825e5635437ba681c869640d
  tspMacro4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String, LexerTypes.PVSType, LexerTypes.Expression)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Base.String, LexerTypes.PVSType, LexerTypes.Expression)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: (GHC.Base.String, LexerTypes.PVSType, LexerTypes.Expression)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: (GHC.Base.String, LexerTypes.PVSType, LexerTypes.Expression)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 TSPLexer.$wp1 @ b1 ww1 ww5 ww6 ww7 ww3 w1 w2 w3 w4 } }) -}
18fd9b7ec1367f7bcd466808258b7918
  tspMacro_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.tspMacro3) -}
bb14ef2e729adc0d335cf9f2dcc900d6
  tspPermParser :: Text.Parsec.String.Parser LexerTypes.Tperm
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.tspPermParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <(GHC.Base.Maybe LexerTypes.TVarDec,
                            GHC.Base.Maybe LexerTypes.TSPTable,
                            GHC.Base.Maybe LexerTypes.PVSTypeDef,
                            GHC.Base.Maybe LexerTypes.PVSInstDef,
                            GHC.Base.Maybe LexerTypes.PVSFunction,
                            GHC.Base.Maybe LexerTypes.PVSMacro)>_R)) -}
5419bed317b86081998bde048b5af10f
  tspPermParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.Maybe LexerTypes.TVarDec,
         GHC.Base.Maybe LexerTypes.TSPTable,
         GHC.Base.Maybe LexerTypes.PVSTypeDef,
         GHC.Base.Maybe LexerTypes.PVSInstDef,
         GHC.Base.Maybe LexerTypes.PVSFunction,
         GHC.Base.Maybe LexerTypes.PVSMacro)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((GHC.Base.Maybe LexerTypes.TVarDec,
         GHC.Base.Maybe LexerTypes.TSPTable,
         GHC.Base.Maybe LexerTypes.PVSTypeDef,
         GHC.Base.Maybe LexerTypes.PVSInstDef,
         GHC.Base.Maybe LexerTypes.PVSFunction,
         GHC.Base.Maybe LexerTypes.PVSMacro)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: (GHC.Base.Maybe LexerTypes.TVarDec,
                             GHC.Base.Maybe LexerTypes.TSPTable,
                             GHC.Base.Maybe LexerTypes.PVSTypeDef,
                             GHC.Base.Maybe LexerTypes.PVSInstDef,
                             GHC.Base.Maybe LexerTypes.PVSFunction,
                             GHC.Base.Maybe LexerTypes.PVSMacro)
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: (GHC.Base.Maybe LexerTypes.TVarDec,
                             GHC.Base.Maybe LexerTypes.TSPTable,
                             GHC.Base.Maybe LexerTypes.PVSTypeDef,
                             GHC.Base.Maybe LexerTypes.PVSInstDef,
                             GHC.Base.Maybe LexerTypes.PVSFunction,
                             GHC.Base.Maybe LexerTypes.PVSMacro)
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ (GHC.Base.Maybe LexerTypes.TVarDec,
                      GHC.Base.Maybe LexerTypes.TSPTable,
                      GHC.Base.Maybe LexerTypes.PVSTypeDef,
                      GHC.Base.Maybe LexerTypes.PVSInstDef,
                      GHC.Base.Maybe LexerTypes.PVSFunction,
                      GHC.Base.Maybe LexerTypes.PVSMacro)
                   TSPLexer.tspPermParser4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(GHC.Base.Maybe LexerTypes.TVarDec,
                               GHC.Base.Maybe LexerTypes.TSPTable,
                               GHC.Base.Maybe LexerTypes.PVSTypeDef,
                               GHC.Base.Maybe LexerTypes.PVSInstDef,
                               GHC.Base.Maybe LexerTypes.PVSFunction,
                               GHC.Base.Maybe LexerTypes.PVSMacro)>_R))
                   TSPLexer.tspPermParser2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
49004b04fcb57935b05edfa7f9996459
  tspPermParser2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.tspPermParser_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
b4c0c234aae312a8f5b6b4d8f5744eaa
  tspPermParser3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Tabspec Permutation Parse"#) -}
9fe7a7faf47290397fc70d12a965542e
  tspPermParser4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.Maybe LexerTypes.TVarDec,
         GHC.Base.Maybe LexerTypes.TSPTable,
         GHC.Base.Maybe LexerTypes.PVSTypeDef,
         GHC.Base.Maybe LexerTypes.PVSInstDef,
         GHC.Base.Maybe LexerTypes.PVSFunction,
         GHC.Base.Maybe LexerTypes.PVSMacro)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((GHC.Base.Maybe LexerTypes.TVarDec,
         GHC.Base.Maybe LexerTypes.TSPTable,
         GHC.Base.Maybe LexerTypes.PVSTypeDef,
         GHC.Base.Maybe LexerTypes.PVSInstDef,
         GHC.Base.Maybe LexerTypes.PVSFunction,
         GHC.Base.Maybe LexerTypes.PVSMacro)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
886eb5d589876a003c4f85ad9ebe8288
  tspPermParser_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   TSPLexer.tspPermParser3) -}
4b724b39f49de99587f41d27cf2a393c
  tspPreamble :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.tspPreamble1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Base.String>_R)) -}
b0af9d0c342bdfcb236c2c797709d9bc
  tspPreamble1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: GHC.Base.String
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: GHC.Base.String
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   TSPLexer.tspPreamble4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   TSPLexer.tspPreamble2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
07d57339022bf865e6ef8a1b3f658e2a
  tspPreamble2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.tspPreamble_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
cc427b2ea3adfbeb3eefed96c5772487
  tspPreamble3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Preamble"#) -}
844915c8750387b5bb96fef4aa1661f1
  tspPreamble4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: GHC.Base.String
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: GHC.Base.String
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 TSPLexer.$wp2 @ b1 ww1 ww5 ww6 ww7 ww3 w1 w2 w4 } }) -}
acd0193ea90d818ab9267a2c356c8391
  tspPreamble_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.tspPreamble3) -}
35e6a1a63fd6849710df5a5bdf7c0fc6
  tspTable :: Text.Parsec.String.Parser LexerTypes.TSPTable
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.tspTable1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <(GHC.Base.String, (LexerTypes.ID_Path, LexerTypes.Temporal),
                            LexerTypes.Expression, [LexerTypes.Replacement], [GHC.Base.String],
                            [LexerTypes.TSPLine])>_R)) -}
e9f0c03e819039841dffbd7074a572a5
  tspTable1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String, (LexerTypes.ID_Path, LexerTypes.Temporal),
         LexerTypes.Expression, [LexerTypes.Replacement], [GHC.Base.String],
         [LexerTypes.TSPLine])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((GHC.Base.String, (LexerTypes.ID_Path, LexerTypes.Temporal),
         LexerTypes.Expression, [LexerTypes.Replacement], [GHC.Base.String],
         [LexerTypes.TSPLine])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: (GHC.Base.String,
                             (LexerTypes.ID_Path, LexerTypes.Temporal), LexerTypes.Expression,
                             [LexerTypes.Replacement], [GHC.Base.String], [LexerTypes.TSPLine])
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: (GHC.Base.String,
                             (LexerTypes.ID_Path, LexerTypes.Temporal), LexerTypes.Expression,
                             [LexerTypes.Replacement], [GHC.Base.String], [LexerTypes.TSPLine])
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ (GHC.Base.String, (LexerTypes.ID_Path, LexerTypes.Temporal),
                      LexerTypes.Expression, [LexerTypes.Replacement], [GHC.Base.String],
                      [LexerTypes.TSPLine])
                   TSPLexer.tspTable4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(GHC.Base.String, (LexerTypes.ID_Path, LexerTypes.Temporal),
                               LexerTypes.Expression, [LexerTypes.Replacement], [GHC.Base.String],
                               [LexerTypes.TSPLine])>_R))
                   TSPLexer.tspTable2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
b689259e868148cfb6e4ed892f0f0f1b
  tspTable2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.tspTable_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
b93510ca86eef1c060b20eb715b4060b
  tspTable3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Tabular Specification"#) -}
e8d0c840759e8ad09fbc9906d0e741c4
  tspTable4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String, (LexerTypes.ID_Path, LexerTypes.Temporal),
         LexerTypes.Expression, [LexerTypes.Replacement], [GHC.Base.String],
         [LexerTypes.TSPLine])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((GHC.Base.String, (LexerTypes.ID_Path, LexerTypes.Temporal),
         LexerTypes.Expression, [LexerTypes.Replacement], [GHC.Base.String],
         [LexerTypes.TSPLine])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,U><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: (GHC.Base.String, (LexerTypes.ID_Path, LexerTypes.Temporal),
                           LexerTypes.Expression, [LexerTypes.Replacement], [GHC.Base.String],
                           [LexerTypes.TSPLine])
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: (GHC.Base.String, (LexerTypes.ID_Path, LexerTypes.Temporal),
                           LexerTypes.Expression, [LexerTypes.Replacement], [GHC.Base.String],
                           [LexerTypes.TSPLine])
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 TSPLexer.$wp3 @ b ww1 ww5 ww6 ww7 ww3 w1 w2 w4 } }) -}
a152e114ffe02cb787d40f65d88a587d
  tspTable_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.tspTable3) -}
99011bddc0bed383982e32c380cdb254
  typedec :: Text.Parsec.String.Parser LexerTypes.PVSTypeDef
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.typedec1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <LexerTypes.PVSTypeDef>_R)) -}
0156e1c934bf35b38a3ee3ab5e738f61
  typedec1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (LexerTypes.PVSTypeDef
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (LexerTypes.PVSTypeDef
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: LexerTypes.PVSTypeDef
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: LexerTypes.PVSTypeDef
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ LexerTypes.PVSTypeDef
                   TSPLexer.typedec4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <LexerTypes.PVSTypeDef>_R))
                   TSPLexer.typedec2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
bf5d22d0b8a86e5cd7639beb482d878f
  typedec2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.typedec_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
144ce46c8e770f7708ee4d545d55da58
  typedec3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PVS Type Definition"#) -}
7f727a5851124b4cbfdcd1e8f0fd3d47
  typedec4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (LexerTypes.PVSTypeDef
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (LexerTypes.PVSTypeDef
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: LexerTypes.PVSTypeDef
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: LexerTypes.PVSTypeDef
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 TSPLexer.$wp5 @ b ww1 ww5 ww6 ww7 ww3 w1 w2 w3 w4 } }) -}
e0669d733ff5e1857e952a14140d610a
  typedec_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.typedec3) -}
70393c9d1fa1edf5c872e887b65d9e8b
  varDec :: Text.Parsec.String.Parser LexerTypes.TVarDec
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.varDec1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <([GHC.Base.String], LexerTypes.PVSType)>_R)) -}
c880f1f80d0f68d08a0f646c3f3f73fd
  varDec1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (([GHC.Base.String], LexerTypes.PVSType)
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (([GHC.Base.String], LexerTypes.PVSType)
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: ([GHC.Base.String], LexerTypes.PVSType)
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: ([GHC.Base.String], LexerTypes.PVSType)
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ([GHC.Base.String], LexerTypes.PVSType)
                   TSPLexer.varDec4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <([GHC.Base.String], LexerTypes.PVSType)>_R))
                   TSPLexer.varDec2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
49bd30e7e838f20e06af30351d0cc8af
  varDec2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TSPLexer.varDec_msg
                   (GHC.Types.[] @ GHC.Base.String)) -}
d73c4b79ffaa24d4e908b74bf50a6c25
  varDec3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Variable Declaration"#) -}
977f3bc8bb4c70992501c6771d5d78e8
  varDec4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (([GHC.Base.String], LexerTypes.PVSType)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (([GHC.Base.String], LexerTypes.PVSType)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: ([GHC.Base.String], LexerTypes.PVSType)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: ([GHC.Base.String], LexerTypes.PVSType)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 TSPLexer.varDec_m1
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <[GHC.Base.String]>_R)
                   @ b1
                   s1
                   (\ (x3 :: [GHC.Base.String])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    TSPLexer.varDec5
                      x3
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x4 :: ([GHC.Base.String], LexerTypes.PVSType))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x3 :: [GHC.Base.String])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    TSPLexer.varDec5
                      x3
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x4 :: ([GHC.Base.String], LexerTypes.PVSType))
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
8d45542712da705e95bfc5d704d5e682
  varDec5 ::
    [GHC.Base.String]
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (([GHC.Base.String], LexerTypes.PVSType)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (([GHC.Base.String], LexerTypes.PVSType)
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U> -}
177fbcd2bae42a079e9c9983cc2af213
  varDec_m1 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char]
      ()
      Data.Functor.Identity.Identity
      [GHC.Base.String]
  {- Unfolding: (TSPLexer.intercalatedBy
                   TSPLexer.pvsDef184
                   GHC.Types.True
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6f5f4314ff5b00dc7cb7e2908a58ee5d
  varDec_msg :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# TSPLexer.varDec3) -}
de23550ba0e5baa304b1f3da321e4013
  wchar :: GHC.Types.Char -> Text.Parsec.String.Parser GHC.Types.Char
  {- Arity: 1, Strictness: <L,U(U)>,
     Unfolding: (\ (c :: GHC.Types.Char) ->
                 let {
                   m11 :: Text.Parsec.Prim.ParsecT
                            [GHC.Types.Char] () Data.Functor.Identity.Identity GHC.Types.Char
                   = Text.Parsec.Char.char
                       @ GHC.Base.String
                       @ Data.Functor.Identity.Identity
                       @ ()
                       (TSPLexer.$s$fStream[]mtok @ GHC.Types.Char)
                       c
                 } in
                 (\ @ b1
                    (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                    (cok :: GHC.Types.Char
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                    (cerr :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b1)
                    (eok :: GHC.Types.Char
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                    (eerr :: Text.Parsec.Error.ParseError
                             -> Data.Functor.Identity.Identity b1) ->
                  m11
                    `cast`
                  (Text.Parsec.Prim.N:ParsecT[0]
                       <[GHC.Types.Char]>_R
                       <()>_R
                       <Data.Functor.Identity.Identity>_R
                       <GHC.Types.Char>_R)
                    @ b1
                    s1
                    (\ (x3 :: GHC.Types.Char)
                       (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                       (err :: Text.Parsec.Error.ParseError) ->
                     Text.Parsec.Prim.$fApplicativeParsecT2
                       @ [GHC.Types.Char]
                       @ ()
                       @ Data.Functor.Identity.Identity
                       @ ()
                       @ GHC.Types.Char
                       (TSPLexer.whiteSpace @ ())
                       (Text.Parsec.Prim.$fApplicativeParsecT5
                          @ GHC.Types.Char
                          @ [GHC.Types.Char]
                          @ ()
                          @ Data.Functor.Identity.Identity
                          x3)
                         `cast`
                       (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                 <[GHC.Types.Char]>_R
                                 <()>_R
                                 <Data.Functor.Identity.Identity>_R
                                 <GHC.Types.Char>_R))
                       @ b1
                       s2
                       cok
                       cerr
                       (\ (x4 :: GHC.Types.Char)
                          (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                          (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                        cok x4 s3 (Text.Parsec.Error.mergeError err err'))
                       (\ (err' :: Text.Parsec.Error.ParseError) ->
                        cerr (Text.Parsec.Error.mergeError err err')))
                    cerr
                    (\ (x3 :: GHC.Types.Char)
                       (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                       (err :: Text.Parsec.Error.ParseError) ->
                     Text.Parsec.Prim.$fApplicativeParsecT2
                       @ [GHC.Types.Char]
                       @ ()
                       @ Data.Functor.Identity.Identity
                       @ ()
                       @ GHC.Types.Char
                       (TSPLexer.whiteSpace @ ())
                       (Text.Parsec.Prim.$fApplicativeParsecT5
                          @ GHC.Types.Char
                          @ [GHC.Types.Char]
                          @ ()
                          @ Data.Functor.Identity.Identity
                          x3)
                         `cast`
                       (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                 <[GHC.Types.Char]>_R
                                 <()>_R
                                 <Data.Functor.Identity.Identity>_R
                                 <GHC.Types.Char>_R))
                       @ b1
                       s2
                       cok
                       cerr
                       (\ (x4 :: GHC.Types.Char)
                          (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                          (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                        eok x4 s3 (Text.Parsec.Error.mergeError err err'))
                       (\ (err' :: Text.Parsec.Error.ParseError) ->
                        eerr (Text.Parsec.Error.mergeError err err')))
                    eerr)
                   `cast`
                 (Sym (Text.Parsec.Prim.N:ParsecT[0]
                           <[GHC.Types.Char]>_R
                           <()>_R
                           <Data.Functor.Identity.Identity>_R
                           <GHC.Types.Char>_R))) -}
e3166b7658512d71ae1771d058fd0c6f
  whiteSpace ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String u Data.Functor.Identity.Identity ()
  {- Unfolding: (\ @ u ->
                 case TSPLexer.lexer
                        @ u of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds16 }) -}
1eb8db3940e3b47a0210ba97164a58be
  wstring ::
    GHC.Base.String -> Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 6,
     Strictness: <S,U><L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.wstring1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <[GHC.Types.Char]>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <GHC.Base.String>_R)) -}
233a77b63c6432cd961d9773efdb84a0
  wstring1 ::
    GHC.Base.String
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (GHC.Base.String
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (GHC.Base.String
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <S,U><L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ (s :: GHC.Base.String)
                   @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 let {
                   lvl111 :: forall b1.
                             Text.Parsec.Prim.State [GHC.Types.Char] ()
                             -> (GHC.Base.String
                                 -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                                 -> Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b1)
                             -> (Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b1)
                             -> (GHC.Base.String
                                 -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                                 -> Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b1)
                             -> (Text.Parsec.Error.ParseError
                                 -> Data.Functor.Identity.Identity b1)
                             -> Data.Functor.Identity.Identity b1
                     {- Arity: 5 -}
                   = Text.Parsec.Prim.$fApplicativeParsecT5
                       @ GHC.Base.String
                       @ [GHC.Types.Char]
                       @ ()
                       @ Data.Functor.Identity.Identity
                       s
                 } in
                 Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (TSPLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   s
                   @ b
                   eta
                   (\ (x3 :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Text.Parsec.Prim.$fApplicativeParsecT2
                      @ [GHC.Types.Char]
                      @ ()
                      @ Data.Functor.Identity.Identity
                      @ ()
                      @ GHC.Base.String
                      (TSPLexer.whiteSpace @ ())
                      lvl111
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <GHC.Base.String>_R))
                      @ b
                      s2
                      eta1
                      eta2
                      (\ (x4 :: GHC.Base.String)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eta1 x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ (x3 :: GHC.Base.String)[OneShot]
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Text.Parsec.Prim.$fApplicativeParsecT2
                      @ [GHC.Types.Char]
                      @ ()
                      @ Data.Functor.Identity.Identity
                      @ ()
                      @ GHC.Base.String
                      (TSPLexer.whiteSpace @ ())
                      (Text.Parsec.Prim.$fApplicativeParsecT5
                         @ GHC.Base.String
                         @ [GHC.Types.Char]
                         @ ()
                         @ Data.Functor.Identity.Identity
                         s)
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <GHC.Base.String>_R))
                      @ b
                      s2
                      eta1
                      eta2
                      (\ (x4 :: GHC.Base.String)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eta3 x4 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
ea08180b9241a667f7c4007c0949c30d
  xintercalatedBy ::
    GHC.Base.String
    -> GHC.Types.Bool
    -> Text.Parsec.String.Parser a
    -> Text.Parsec.String.Parser [a]
  {- Arity: 8,
     Strictness: <L,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                TSPLexer.xintercalatedBy1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Base.String>_R
                 ->_R <GHC.Types.Bool>_R
                 ->_R <Text.Parsec.String.Parser a>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <[GHC.Types.Char]>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <[a]>_R)) -}
19c07d75d793dc08aca91d605c8ff5dc
  xintercalatedBy1 ::
    GHC.Base.String
    -> GHC.Types.Bool
    -> Text.Parsec.String.Parser a
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> ([a]
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> ([a]
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 8,
     Strictness: <L,U><L,U><L,C(C1(C1(C1(C1(U)))))><L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
e2dbcd6c5c00765ff3d20f318e242dbf
  xterminatedString ::
    GHC.Base.String -> Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 1, Strictness: <L,U> -}
"SPEC/TSPLexer $fStream[]mtok @ Identity _" [orphan] forall @ tok
                                                            (v :: GHC.Base.Monad
                                                                    Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok @ Data.Functor.Identity.Identity
                                  @ tok
                                  v
  = TSPLexer.$s$fStream[]mtok @ tok
"SPEC/TSPLexer $fStream[]mtok_$cuncons @ Identity _" [orphan] forall @ tok
                                                                     ($dMonad :: GHC.Base.Monad
                                                                                   Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cuncons @ Data.Functor.Identity.Identity
                                           @ tok
                                           $dMonad
  = TSPLexer.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

