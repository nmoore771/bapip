
==================== FINAL INTERFACE ====================
2022-03-30 13:21:38.907928187 UTC

interface BAPIP-0.1.0.0-IeoLXJJUcqyHz2cFv4cIMD:LexerTypes 8022
  interface hash: 05fc289cd29861e066c57f8e4051f6a0
  ABI hash: ea2837b19066a45c4d666600c2728879
  export-list hash: 24099e1d1a603a4b110bad9ae51c8629
  orphan hash: 37f1cfaa4fe5d229b3ed89818f3fb1fb
  flag hash: aa1a6078e28560b315026c49539ca393
  sig of: Nothing
  used TH splices: False
  where
exports:
  LexerTypes.aEq
  LexerTypes.mEq
  LexerTypes.mkBSVModule
  LexerTypes.showRuleHeap
  LexerTypes.showST
  LexerTypes.showShortened
  LexerTypes.showTT
  LexerTypes.ActionAttribute{LexerTypes.Act_Doc}
  LexerTypes.ActionDec
  LexerTypes.ActionName
  LexerTypes.ActionPath{LexerTypes.ActionNameAP LexerTypes.MethodNameAP LexerTypes.RuleNameAP LexerTypes.SubmoduleNameAP}
  LexerTypes.AddressWidth
  LexerTypes.Argument
  LexerTypes.ArgumentAttribute{LexerTypes.Arg_Always_Enabled LexerTypes.Arg_Always_Ready LexerTypes.Arg_Doc LexerTypes.Arg_Enable LexerTypes.Arg_Port LexerTypes.Arg_Prefix LexerTypes.Arg_Ready LexerTypes.Arg_Result}
  LexerTypes.BSVConstantDec
  LexerTypes.BSVFunction
  LexerTypes.BSVInstDef
  LexerTypes.BSVMacro{LexerTypes.CompoundMacro LexerTypes.SimpleMacro}
  LexerTypes.BSVModuleDec{LexerTypes.BSVModuleDec actions attributes instanceName instances interfaceDecs interfaceName mName methods rules state}
  LexerTypes.BSVPackage{LexerTypes.BSVPackage bsv_constants bsv_functions bsv_instDefs bsv_macros bsv_modules bsv_packageName bsv_typedefs hexFiles imports including interfaces}
  LexerTypes.BSVType{LexerTypes.BSV_Bit LexerTypes.BSV_Bool LexerTypes.BSV_Custom LexerTypes.BSV_Int LexerTypes.BSV_Maybe LexerTypes.BSV_Real LexerTypes.BSV_UInt}
  LexerTypes.BSVTypeDef{LexerTypes.BSV_Enumeration LexerTypes.BSV_Struct LexerTypes.BSV_Synonym}
  LexerTypes.BSV_Field
  LexerTypes.BSVstateDec{LexerTypes.BSV_Fifo LexerTypes.BSV_Reg LexerTypes.BSV_RegFile LexerTypes.BSV_SubModuleDec LexerTypes.BSV_Vector LexerTypes.DWire}
  LexerTypes.Case
  LexerTypes.ClearTree
  LexerTypes.Context
  LexerTypes.DefaultValue
  LexerTypes.DeqTree
  LexerTypes.Else
  LexerTypes.EnqTree
  LexerTypes.Enumerat
  LexerTypes.ExpCase
  LexerTypes.Expression{LexerTypes.Add LexerTypes.And LexerTypes.Binding LexerTypes.BitConcat LexerTypes.BitSelect LexerTypes.BitSelectRange LexerTypes.BitwiseAND LexerTypes.BitwiseOR LexerTypes.BitwiseXOR LexerTypes.CasesOf LexerTypes.Divide LexerTypes.Equals LexerTypes.Exp_FunctionCall LexerTypes.Exp_If LexerTypes.Exp_MethodCall LexerTypes.FieldAccess LexerTypes.FromMaybe LexerTypes.Greater LexerTypes.GreaterEquals LexerTypes.Identifier LexerTypes.IsValid LexerTypes.LShift LexerTypes.Less LexerTypes.LessEquals LexerTypes.Literal LexerTypes.MaybeIf LexerTypes.MaybeValue LexerTypes.Modulo LexerTypes.Multiply LexerTypes.Negative LexerTypes.Not LexerTypes.NotEquals LexerTypes.Or LexerTypes.PMatch LexerTypes.RPFlag LexerTypes.RShift LexerTypes.Skip LexerTypes.StructCluster LexerTypes.Subtract LexerTypes.Tagged LexerTypes.ValueMethodCall}
  LexerTypes.FalseExpression
  LexerTypes.FalseTree
  LexerTypes.FieldName
  LexerTypes.FifoType{LexerTypes.BypassFIFO LexerTypes.BypassFIFOF LexerTypes.DepthParamFIFO LexerTypes.FIFO LexerTypes.FIFO1 LexerTypes.FIFOF LexerTypes.FIFOF1 LexerTypes.LFIFO LexerTypes.LFIFOF LexerTypes.PipelineFIFO LexerTypes.PipelineFIFOF LexerTypes.SizedBypassFIFOF LexerTypes.SizedFIFO LexerTypes.SizedFIFOF}
  LexerTypes.File
  LexerTypes.FileContents
  LexerTypes.FileName
  LexerTypes.Guard
  LexerTypes.HexFile
  LexerTypes.ID_Path{LexerTypes.ID LexerTypes.ID_Submod_Struct LexerTypes.ID_Vect}
  LexerTypes.Increments
  LexerTypes.Index
  LexerTypes.Init
  LexerTypes.Inits
  LexerTypes.InputPath
  LexerTypes.InstName
  LexerTypes.InstanceName
  LexerTypes.InterfaceAttribute{LexerTypes.Int_Always_Enabled LexerTypes.Int_Always_Ready LexerTypes.Int_Doc}
  LexerTypes.InterfaceDec
  LexerTypes.InterfaceName
  LexerTypes.InterfaceRef
  LexerTypes.InvokationTree{LexerTypes.Ileaf LexerTypes.Istem}
  LexerTypes.Lit{LexerTypes.LitBool LexerTypes.LitChar LexerTypes.LitEnum LexerTypes.LitInt LexerTypes.LitReal LexerTypes.LitSizedInt LexerTypes.LitString LexerTypes.LitStructConstructor LexerTypes.LitVoid}
  LexerTypes.Literal
  LexerTypes.LocalName
  LexerTypes.LocalVar
  LexerTypes.Matching
  LexerTypes.MaxIndex
  LexerTypes.MaybeIDTag{LexerTypes.InvalidID LexerTypes.ValidID}
  LexerTypes.MaybeTag{LexerTypes.Invalid LexerTypes.MaybeContainer LexerTypes.Valid}
  LexerTypes.MethodApplication
  LexerTypes.MethodArg
  LexerTypes.MethodBody
  LexerTypes.MethodBodyAttribute{LexerTypes.Met_Doc}
  LexerTypes.MethodCallPass
  LexerTypes.MethodDec
  LexerTypes.MethodDecAttribute{LexerTypes.MDc_Always_Enabled LexerTypes.MDc_Always_Ready LexerTypes.MDc_Doc LexerTypes.MDc_Enable LexerTypes.MDc_Port LexerTypes.MDc_Prefix LexerTypes.MDc_Ready LexerTypes.MDc_Result}
  LexerTypes.MethodName
  LexerTypes.MidModInterfaceDec
  LexerTypes.MinIndex
  LexerTypes.Mode{LexerTypes.B2B LexerTypes.B2P LexerTypes.P2B LexerTypes.P2P LexerTypes.T2B LexerTypes.T2P}
  LexerTypes.ModuleAttribute{LexerTypes.Clock_Ancestors LexerTypes.Clock_Family LexerTypes.Clock_Prefix LexerTypes.Default_Clock_Gate LexerTypes.Default_Clock_OSC LexerTypes.Default_Gate_Inhigh LexerTypes.Default_Gate_Unused LexerTypes.Default_Reset LexerTypes.Descending_Urgency LexerTypes.Gate_All_Clocks LexerTypes.Gate_Input_Clocks LexerTypes.Gate_Prefix LexerTypes.MAvoid LexerTypes.Mod_Always_Enabled LexerTypes.Mod_Always_Ready LexerTypes.Mod_Conflict_Free LexerTypes.Mod_Doc LexerTypes.Mod_Execution_Order LexerTypes.Mod_Mutually_Exclusive LexerTypes.Mod_Preempts LexerTypes.No_Default_Reset LexerTypes.Reset_Prefix LexerTypes.Synthesize}
  LexerTypes.ModuleInst
  LexerTypes.ModuleName
  LexerTypes.N
  LexerTypes.Name
  LexerTypes.Op
  LexerTypes.Op1
  LexerTypes.Op2
  LexerTypes.OutputDir
  LexerTypes.PVSArgument
  LexerTypes.PVSConstantDec
  LexerTypes.PVSFunction
  LexerTypes.PVSInstDef
  LexerTypes.PVSMacro
  LexerTypes.PVSPackage{LexerTypes.PVSPackage pvs_constants pvs_functions pvs_instantiations pvs_packageName pvs_state pvs_typedefs transitions}
  LexerTypes.PVSType{LexerTypes.PVS_Bit LexerTypes.PVS_Bool LexerTypes.PVS_Custom LexerTypes.PVS_Int LexerTypes.PVS_Maybe LexerTypes.PVS_Real LexerTypes.PVS_UInt}
  LexerTypes.PVSTypeDef{LexerTypes.PVS_Enumeration LexerTypes.PVS_Struct LexerTypes.PVS_Synonym}
  LexerTypes.PVS_Field
  LexerTypes.PVSstate{LexerTypes.PVS_DWire LexerTypes.PVS_Fifo LexerTypes.PVS_Reg LexerTypes.PVS_SubModuleDec LexerTypes.PVS_Vector}
  LexerTypes.PVSstateDec
  LexerTypes.PVSstateInst
  LexerTypes.PVSstateRecord
  LexerTypes.PVStransition
  LexerTypes.PackageName
  LexerTypes.Path
  LexerTypes.PermMod{LexerTypes.PermMod actionsM intersM methodsM rulesM stateM}
  LexerTypes.RankedNodes
  LexerTypes.RegFileLoader{LexerTypes.RegFileLoad}
  LexerTypes.Replacement
  LexerTypes.ReturnType{LexerTypes.Action LexerTypes.ActionValue LexerTypes.Value}
  LexerTypes.RuleAttribute{LexerTypes.Fire_When_Enabled LexerTypes.No_Implicit_Conditions LexerTypes.Rul_Conflict_Free LexerTypes.Rul_Descending_Urgency LexerTypes.Rul_Doc LexerTypes.Rul_Execution_Order LexerTypes.Rul_Mutually_Exclusive LexerTypes.Rul_Preempts}
  LexerTypes.RuleDec
  LexerTypes.RuleGraph
  LexerTypes.RuleHeap{LexerTypes.RHeap}
  LexerTypes.RuleName
  LexerTypes.RuleNode{LexerTypes.RuleNode rnName rnPreempts}
  LexerTypes.RuleSchedule{LexerTypes.RuleSchedule actionMethodsCalled conflictsWith dWireReads dWireWrites executesAfter executesBefore fifoClears fifoDeqs fifoEnqs fifoFirsts implicitConditions isPreemptedBy noConflictsWith preempts rGuard rName rStatements writesTo}
  LexerTypes.RuleTree{LexerTypes.RuleLeaf LexerTypes.RuleStem}
  LexerTypes.RuleUrgParams{LexerTypes.RuleUrgParams doesntPreEmpt isPreEmptedByP isntPreEmptedBy preEmpts rpGuard rpName writesToP}
  LexerTypes.Size
  LexerTypes.Spacer
  LexerTypes.Spacing
  LexerTypes.SpecFalseTree
  LexerTypes.SpecTrueTree
  LexerTypes.SpecificTree{LexerTypes.SpecEx LexerTypes.SpecLeaf LexerTypes.SpecStem}
  LexerTypes.Statement{LexerTypes.ActionCall LexerTypes.ForLoop LexerTypes.If LexerTypes.LocalDec LexerTypes.MethodCall LexerTypes.PMatchIf LexerTypes.Return LexerTypes.StatementBlock LexerTypes.StructReturn LexerTypes.Switch LexerTypes.Void LexerTypes.Write}
  LexerTypes.StatementAttribute{LexerTypes.NoSplit LexerTypes.Split LexerTypes.Sta_Conflict_Free LexerTypes.Sta_Descending_Urgency LexerTypes.Sta_Doc LexerTypes.Sta_Execution_Order LexerTypes.Sta_Mutually_Exclusive LexerTypes.Sta_Preempts}
  LexerTypes.StructName
  LexerTypes.SubmoduleName
  LexerTypes.SuperModuleName
  LexerTypes.TName
  LexerTypes.TSPLine
  LexerTypes.TSPOutVar
  LexerTypes.TSPTable
  LexerTypes.TSPpackage{LexerTypes.TSPpackage defInsts macros tName tsp_funcs tsps typedefs varDecs}
  LexerTypes.TVarDec
  LexerTypes.Temporal{LexerTypes.N_Time}
  LexerTypes.Then
  LexerTypes.TotalTree{LexerTypes.TotalLeaf LexerTypes.TotalStem}
  LexerTypes.Tperm
  LexerTypes.TransitionGuard
  LexerTypes.TransitionTable{LexerTypes.TransDWire LexerTypes.TransFIFO LexerTypes.TransMod LexerTypes.TransReg LexerTypes.TransStruct LexerTypes.TransVect}
  LexerTypes.TransitionTableMethods{LexerTypes.TransModMethods}
  LexerTypes.TransitionVar
  LexerTypes.TreeHeap{LexerTypes.THeap}
  LexerTypes.TrueExpression
  LexerTypes.TrueTree
  LexerTypes.UStatement{LexerTypes.DeclAssign LexerTypes.UAssign}
  LexerTypes.UTArgs
  LexerTypes.UType{LexerTypes.U_Int LexerTypes.U_String}
  LexerTypes.UrgIndex
  LexerTypes.ValueMethod
  LexerTypes.VectorInit{LexerTypes.Explicit LexerTypes.Replicate}
  LexerTypes.Writes
module dependencies:
package dependencies: base-4.10.1.0 ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:Data.Either d7dae5d9bf298dee616e465c14b5d60e
import  -/  base-4.10.1.0:Data.List 4ab7fa2a1b87502b23af891a384f0506
import  -/  base-4.10.1.0:Data.OldList 555420b092ca8cf0a8f9666bc0e07dcf
import  -/  base-4.10.1.0:Debug.Trace d6b92a67d41f66511d3d35c0713fec79
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  integer-gmp-1.0.1.0:GHC.Integer.Type 5fa81108482c33b62ec3ac7464eece96
826bf9b3273fb2f15950fa50da194ba0
  $fEqActionAttribute :: GHC.Classes.Eq LexerTypes.ActionAttribute
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.ActionAttribute
                  LexerTypes.$fEqActionAttribute_$c==
                  LexerTypes.$fEqActionAttribute_$c/= -}
826bf9b3273fb2f15950fa50da194ba0
  $fEqActionAttribute_$c/= ::
    LexerTypes.ActionAttribute
    -> LexerTypes.ActionAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.ActionAttribute)
                   (b :: LexerTypes.ActionAttribute) ->
                 case a of wild { LexerTypes.Act_Doc a1 ->
                 case b of wild1 { LexerTypes.Act_Doc b1 ->
                 case GHC.Base.eqString a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
826bf9b3273fb2f15950fa50da194ba0
  $fEqActionAttribute_$c== ::
    LexerTypes.ActionAttribute
    -> LexerTypes.ActionAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: LexerTypes.ActionAttribute)
                   (ds1 :: LexerTypes.ActionAttribute) ->
                 case ds of wild { LexerTypes.Act_Doc a1 ->
                 case ds1 of wild1 { LexerTypes.Act_Doc b1 ->
                 GHC.Base.eqString a1 b1 } }) -}
75d03845d9b5153ed1f38098fefa25af
  $fEqActionPath :: GHC.Classes.Eq LexerTypes.ActionPath
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.ActionPath
                  LexerTypes.$fEqActionPath_$c==
                  LexerTypes.$fEqActionPath_$c/= -}
75d03845d9b5153ed1f38098fefa25af
  $fEqActionPath_$c/= ::
    LexerTypes.ActionPath -> LexerTypes.ActionPath -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.ActionPath) (b :: LexerTypes.ActionPath) ->
                 case LexerTypes.$fEqActionPath_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
75d03845d9b5153ed1f38098fefa25af
  $fEqActionPath_$c== ::
    LexerTypes.ActionPath -> LexerTypes.ActionPath -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
9843a91dd1e7fc3f97d724b817ded62a
  $fEqArgumentAttribute ::
    GHC.Classes.Eq LexerTypes.ArgumentAttribute
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.ArgumentAttribute
                  LexerTypes.$fEqArgumentAttribute_$c==
                  LexerTypes.$fEqArgumentAttribute_$c/= -}
9843a91dd1e7fc3f97d724b817ded62a
  $fEqArgumentAttribute_$c/= ::
    LexerTypes.ArgumentAttribute
    -> LexerTypes.ArgumentAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.ArgumentAttribute)
                   (b :: LexerTypes.ArgumentAttribute) ->
                 case LexerTypes.$fEqArgumentAttribute_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
9843a91dd1e7fc3f97d724b817ded62a
  $fEqArgumentAttribute_$c== ::
    LexerTypes.ArgumentAttribute
    -> LexerTypes.ArgumentAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.ArgumentAttribute)
                   (ds1 :: LexerTypes.ArgumentAttribute) ->
                 case ds of wild {
                   LexerTypes.Arg_Ready a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Arg_Ready b1 -> GHC.Base.eqString a1 b1 }
                   LexerTypes.Arg_Enable a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Arg_Enable b1 -> GHC.Base.eqString a1 b1 }
                   LexerTypes.Arg_Result a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Arg_Result b1 -> GHC.Base.eqString a1 b1 }
                   LexerTypes.Arg_Prefix a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Arg_Prefix b1 -> GHC.Base.eqString a1 b1 }
                   LexerTypes.Arg_Port a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Arg_Port b1 -> GHC.Base.eqString a1 b1 }
                   LexerTypes.Arg_Always_Ready
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Arg_Always_Ready -> GHC.Types.True }
                   LexerTypes.Arg_Always_Enabled
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Arg_Always_Enabled -> GHC.Types.True }
                   LexerTypes.Arg_Doc a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Arg_Doc b1 -> GHC.Base.eqString a1 b1 } }) -}
150b9413fc0ca585963b402f9a2b8cb8
  $fEqBSVMacro :: GHC.Classes.Eq LexerTypes.BSVMacro
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.BSVMacro
                  LexerTypes.$fEqBSVMacro_$c==
                  LexerTypes.$fEqBSVMacro_$c/= -}
150b9413fc0ca585963b402f9a2b8cb8
  $fEqBSVMacro_$c/= ::
    LexerTypes.BSVMacro -> LexerTypes.BSVMacro -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.BSVMacro) (b :: LexerTypes.BSVMacro) ->
                 case LexerTypes.$fEqBSVMacro_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
150b9413fc0ca585963b402f9a2b8cb8
  $fEqBSVMacro_$c== ::
    LexerTypes.BSVMacro -> LexerTypes.BSVMacro -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.BSVMacro)
                   (ds1 :: LexerTypes.BSVMacro) ->
                 case ds of wild {
                   LexerTypes.SimpleMacro a1 a2
                   -> case ds1 of wild1 {
                        LexerTypes.SimpleMacro b1 b2
                        -> case GHC.Base.eqString a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Base.eqString a2 b2 }
                        LexerTypes.CompoundMacro ipv ipv1 ipv2 -> GHC.Types.False }
                   LexerTypes.CompoundMacro a1 a2 a3
                   -> case ds1 of wild1 {
                        LexerTypes.SimpleMacro ipv ipv1 -> GHC.Types.False
                        LexerTypes.CompoundMacro b1 b2 b3
                        -> case GHC.Base.eqString a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case GHC.Classes.$fEq[]_$s$c==1 a2 b2 of wild3 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True -> GHC.Base.eqString a3 b3 } } } }) -}
6a9e148802acadaa54114400a09553a4
  $fEqBSVModuleDec :: GHC.Classes.Eq LexerTypes.BSVModuleDec
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.BSVModuleDec
                  LexerTypes.$fEqBSVModuleDec_$c==
                  LexerTypes.$fEqBSVModuleDec_$c/= -}
6a9e148802acadaa54114400a09553a4
  $fEqBSVModuleDec_$c/= ::
    LexerTypes.BSVModuleDec
    -> LexerTypes.BSVModuleDec -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.BSVModuleDec) (b :: LexerTypes.BSVModuleDec) ->
                 case LexerTypes.$fEqBSVModuleDec_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
6a9e148802acadaa54114400a09553a4
  $fEqBSVModuleDec_$c== ::
    LexerTypes.BSVModuleDec
    -> LexerTypes.BSVModuleDec -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)> -}
dca7bfb1a37746d89b662b651361e667
  $fEqBSVPackage :: GHC.Classes.Eq LexerTypes.BSVPackage
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.BSVPackage
                  LexerTypes.$fEqBSVPackage_$c==
                  LexerTypes.$fEqBSVPackage_$c/= -}
5c75b1594d29cc5303bba6bc537d0f95
  $fEqBSVPackage1 ::
    GHC.Classes.Eq (GHC.Base.String, [LexerTypes.Literal])
  {- Unfolding: (GHC.Classes.$fEq(,)
                   @ [GHC.Types.Char]
                   @ [LexerTypes.Literal]
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   LexerTypes.$fEqBSVPackage2) -}
a649b542fa4d8f8708cc5762aeae349a
  $fEqBSVPackage10 ::
    GHC.Classes.Eq
      (LexerTypes.Name, LexerTypes.BSVType, LexerTypes.Literal)
  {- Unfolding: (GHC.Classes.$fEq(,,)
                   @ [GHC.Types.Char]
                   @ LexerTypes.BSVType
                   @ LexerTypes.Expression
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   LexerTypes.$fEqBSVType
                   LexerTypes.$fEqExpression) -}
607312f97decef3c0c1c7fb57c028ad4
  $fEqBSVPackage11 ::
    GHC.Classes.Eq
      (LexerTypes.Name, [LexerTypes.MethodDec],
       [LexerTypes.InterfaceRef], [LexerTypes.InterfaceAttribute])
  {- Unfolding: (GHC.Classes.$fEq(,,,)
                   @ [GHC.Types.Char]
                   @ [LexerTypes.MethodDec]
                   @ [LexerTypes.InterfaceRef]
                   @ [LexerTypes.InterfaceAttribute]
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   LexerTypes.$fEqBSVPackage12
                   LexerTypes.$fEqBSVPackage_$s$fEq[]2
                   LexerTypes.$fEqBSVPackage_$s$fEq[]1) -}
72ee9b6482848c173210d422e23992a7
  $fEqBSVPackage12 :: GHC.Classes.Eq [LexerTypes.MethodDec]
  {- Unfolding: (GHC.Classes.$fEq[]
                   @ (LexerTypes.Name, LexerTypes.ReturnType, [LexerTypes.Argument],
                      [LexerTypes.MethodDecAttribute])
                   LexerTypes.$fEqBSVPackage13) -}
e2e1d1fea5dd79b7208823665eb4f448
  $fEqBSVPackage13 ::
    GHC.Classes.Eq
      (LexerTypes.Name, LexerTypes.ReturnType, [LexerTypes.Argument],
       [LexerTypes.MethodDecAttribute])
  {- Unfolding: (GHC.Classes.$fEq(,,,)
                   @ [GHC.Types.Char]
                   @ LexerTypes.ReturnType
                   @ [LexerTypes.Argument]
                   @ [LexerTypes.MethodDecAttribute]
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   LexerTypes.$fEqReturnType
                   LexerTypes.$fEqBSVPackage5
                   LexerTypes.$fEqBSVPackage_$s$fEq[]3) -}
3aad65b56b6942c4007042275ff5cf95
  $fEqBSVPackage2 :: GHC.Classes.Eq [LexerTypes.Literal]
  {- Unfolding: (GHC.Classes.$fEq[]
                   @ LexerTypes.Expression
                   LexerTypes.$fEqExpression) -}
6e0069f49df44e89fdea7de723efe34d
  $fEqBSVPackage3 ::
    GHC.Classes.Eq
      (GHC.Base.String, [LexerTypes.Argument], LexerTypes.BSVType,
       [LexerTypes.Statement])
  {- Unfolding: (GHC.Classes.$fEq(,,,)
                   @ [GHC.Types.Char]
                   @ [LexerTypes.Argument]
                   @ LexerTypes.BSVType
                   @ [LexerTypes.Statement]
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   LexerTypes.$fEqBSVPackage5
                   LexerTypes.$fEqBSVType
                   LexerTypes.$fEqBSVPackage4) -}
d426fa367a85e8992da3594f758f2adc
  $fEqBSVPackage4 :: GHC.Classes.Eq [LexerTypes.Statement]
  {- Unfolding: (GHC.Classes.$fEq[]
                   @ LexerTypes.Statement
                   LexerTypes.$fEqStatement) -}
bf621ebb29bd3599440ec286266350ab
  $fEqBSVPackage5 :: GHC.Classes.Eq [LexerTypes.Argument]
  {- Unfolding: (GHC.Classes.$fEq[]
                   @ (LexerTypes.Name, LexerTypes.BSVType,
                      [LexerTypes.ArgumentAttribute])
                   LexerTypes.$fEqBSVPackage6) -}
1efa93923bc4361f13defc4ef54a2e7c
  $fEqBSVPackage6 ::
    GHC.Classes.Eq
      (LexerTypes.Name, LexerTypes.BSVType,
       [LexerTypes.ArgumentAttribute])
  {- Unfolding: (GHC.Classes.$fEq(,,)
                   @ [GHC.Types.Char]
                   @ LexerTypes.BSVType
                   @ [LexerTypes.ArgumentAttribute]
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   LexerTypes.$fEqBSVType
                   LexerTypes.$fEqBSVPackage_$s$fEq[]) -}
36224ba3dd112858d59ef6323325d9e7
  $fEqBSVPackage7 ::
    GHC.Classes.Eq
      (LexerTypes.Name, [(LexerTypes.Name, LexerTypes.Literal)])
  {- Unfolding: (GHC.Classes.$fEq(,)
                   @ [GHC.Types.Char]
                   @ [(LexerTypes.Name, LexerTypes.Literal)]
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   LexerTypes.$fEqBSVPackage8) -}
20fa8227f300e0f2e94dc650b1751245
  $fEqBSVPackage8 ::
    GHC.Classes.Eq [(LexerTypes.Name, LexerTypes.Literal)]
  {- Unfolding: (GHC.Classes.$fEq[]
                   @ (LexerTypes.Name, LexerTypes.Literal)
                   LexerTypes.$fEqBSVPackage9) -}
33f81b97a3c5743db21caee28faf53ec
  $fEqBSVPackage9 ::
    GHC.Classes.Eq (GHC.Base.String, LexerTypes.Expression)
  {- Unfolding: (GHC.Classes.$fEq(,)
                   @ [GHC.Types.Char]
                   @ LexerTypes.Expression
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   LexerTypes.$fEqExpression) -}
dca7bfb1a37746d89b662b651361e667
  $fEqBSVPackage_$c/= ::
    LexerTypes.BSVPackage -> LexerTypes.BSVPackage -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.BSVPackage) (b :: LexerTypes.BSVPackage) ->
                 case LexerTypes.$fEqBSVPackage_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
dca7bfb1a37746d89b662b651361e667
  $fEqBSVPackage_$c== ::
    LexerTypes.BSVPackage -> LexerTypes.BSVPackage -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: (\ (ds :: LexerTypes.BSVPackage)
                   (ds1 :: LexerTypes.BSVPackage) ->
                 case ds of wild { LexerTypes.BSVPackage a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 ->
                 case ds1 of wild1 { LexerTypes.BSVPackage b1 b2 b3 b4 b5 b6 b7 b8 b9 b10 b11 ->
                 case GHC.Base.eqString a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Classes.$fEq[]_$s$c==1 a2 b2 of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Classes.$fEq[]_$s$c==1 a3 b3 of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case GHC.Classes.$fEq[]_$c==
                                       @ (LexerTypes.Name, [LexerTypes.MethodDec],
                                          [LexerTypes.InterfaceRef],
                                          [LexerTypes.InterfaceAttribute])
                                       LexerTypes.$fEqBSVPackage11
                                       a4
                                       b4 of wild5 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case GHC.Classes.$fEq[]_$c==
                                            @ (LexerTypes.Name, LexerTypes.BSVType,
                                               LexerTypes.Literal)
                                            LexerTypes.$fEqBSVPackage10
                                            a5
                                            b5 of wild6 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> case GHC.Classes.$fEq[]_$c==
                                                 @ LexerTypes.BSVTypeDef
                                                 LexerTypes.$fEqBSVTypeDef
                                                 a6
                                                 b6 of wild7 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> case GHC.Classes.$fEq[]_$c==
                                                      @ (LexerTypes.Name,
                                                         [(LexerTypes.Name, LexerTypes.Literal)])
                                                      LexerTypes.$fEqBSVPackage7
                                                      a7
                                                      b7 of wild8 {
                                                 GHC.Types.False -> GHC.Types.False
                                                 GHC.Types.True
                                                 -> case GHC.Classes.$fEq[]_$c==
                                                           @ LexerTypes.BSVModuleDec
                                                           LexerTypes.$fEqBSVModuleDec
                                                           a8
                                                           b8 of wild9 {
                                                      GHC.Types.False -> GHC.Types.False
                                                      GHC.Types.True
                                                      -> case GHC.Classes.$fEq[]_$c==
                                                                @ (GHC.Base.String,
                                                                   [LexerTypes.Argument],
                                                                   LexerTypes.BSVType,
                                                                   [LexerTypes.Statement])
                                                                LexerTypes.$fEqBSVPackage3
                                                                a9
                                                                b9 of wild10 {
                                                           GHC.Types.False -> GHC.Types.False
                                                           GHC.Types.True
                                                           -> case GHC.Classes.$fEq[]_$c==
                                                                     @ LexerTypes.BSVMacro
                                                                     LexerTypes.$fEqBSVMacro
                                                                     a10
                                                                     b10 of wild11 {
                                                                GHC.Types.False -> GHC.Types.False
                                                                GHC.Types.True
                                                                -> GHC.Classes.$fEq[]_$c==
                                                                     @ (GHC.Base.String,
                                                                        [LexerTypes.Literal])
                                                                     LexerTypes.$fEqBSVPackage1
                                                                     a11
                                                                     b11 } } } } } } } } } } } }) -}
079a3e74b1b12f56421fe5c9d0e93ddf
  $fEqBSVPackage_$s$fEq(,) ::
    GHC.Classes.Eq ([GHC.Types.Char], [GHC.Types.Char])
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ ([GHC.Types.Char], [GHC.Types.Char])
                  (GHC.Classes.$fEq(,)_$c==
                     @ [GHC.Types.Char]
                     @ [GHC.Types.Char]
                     GHC.Classes.$fEq[]_$s$fEq[]1
                     GHC.Classes.$fEq[]_$s$fEq[]1)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ [GHC.Types.Char]
                     @ [GHC.Types.Char]
                     GHC.Classes.$fEq[]_$s$fEq[]1
                     GHC.Classes.$fEq[]_$s$fEq[]1) -}
268a40da9b0dc0cb6d9f703f2f4edf5a
  $fEqBSVPackage_$s$fEq[] ::
    GHC.Classes.Eq [LexerTypes.ArgumentAttribute]
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [LexerTypes.ArgumentAttribute]
                  (GHC.Classes.$fEq[]_$c==
                     @ LexerTypes.ArgumentAttribute
                     LexerTypes.$fEqArgumentAttribute)
                  LexerTypes.$fEqBSVPackage_$s$fEq[]_$c/= -}
4e03f81a8ebcafd32d4087cc03ca9f8e
  $fEqBSVPackage_$s$fEq[]1 ::
    GHC.Classes.Eq [LexerTypes.InterfaceAttribute]
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [LexerTypes.InterfaceAttribute]
                  (GHC.Classes.$fEq[]_$c==
                     @ LexerTypes.InterfaceAttribute
                     LexerTypes.$fEqInterfaceAttribute)
                  LexerTypes.$fEqBSVPackage_$s$fEq[]_$c/=1 -}
cad1b10bb57b37c3fcf18d370b0bc805
  $fEqBSVPackage_$s$fEq[]2 ::
    GHC.Classes.Eq [(LexerTypes.InterfaceName, GHC.Base.String)]
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [(LexerTypes.InterfaceName, GHC.Base.String)]
                  (GHC.Classes.$fEq[]_$c==
                     @ (LexerTypes.InterfaceName, GHC.Base.String)
                     LexerTypes.$fEqBSVPackage_$s$fEq(,))
                  LexerTypes.$fEqBSVPackage_$s$fEq[]_$c/=2 -}
af39f8b535ce74a9e1fd3ed3a9dbf13f
  $fEqBSVPackage_$s$fEq[]3 ::
    GHC.Classes.Eq [LexerTypes.MethodDecAttribute]
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [LexerTypes.MethodDecAttribute]
                  (GHC.Classes.$fEq[]_$c==
                     @ LexerTypes.MethodDecAttribute
                     LexerTypes.$fEqMethodDecAttribute)
                  LexerTypes.$fEqBSVPackage_$s$fEq[]_$c/=3 -}
1d1530073595b7e90b5bd2026932888e
  $fEqBSVPackage_$s$fEq[]_$c/= ::
    [LexerTypes.ArgumentAttribute]
    -> [LexerTypes.ArgumentAttribute] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [LexerTypes.ArgumentAttribute])
                   (y :: [LexerTypes.ArgumentAttribute]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ LexerTypes.ArgumentAttribute
                        LexerTypes.$fEqArgumentAttribute
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
4f1945dbd29e36c0cf417c762667765a
  $fEqBSVPackage_$s$fEq[]_$c/=1 ::
    [LexerTypes.InterfaceAttribute]
    -> [LexerTypes.InterfaceAttribute] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [LexerTypes.InterfaceAttribute])
                   (y :: [LexerTypes.InterfaceAttribute]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ LexerTypes.InterfaceAttribute
                        LexerTypes.$fEqInterfaceAttribute
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
cf16b765a413fb12a5c87c7effe73b76
  $fEqBSVPackage_$s$fEq[]_$c/=2 ::
    [(LexerTypes.InterfaceName, GHC.Base.String)]
    -> [(LexerTypes.InterfaceName, GHC.Base.String)] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [(LexerTypes.InterfaceName, GHC.Base.String)])
                   (y :: [(LexerTypes.InterfaceName, GHC.Base.String)]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ (LexerTypes.InterfaceName, GHC.Base.String)
                        LexerTypes.$fEqBSVPackage_$s$fEq(,)
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
d493ef5ce76dc7b9fe024c8aa9d5cda7
  $fEqBSVPackage_$s$fEq[]_$c/=3 ::
    [LexerTypes.MethodDecAttribute]
    -> [LexerTypes.MethodDecAttribute] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [LexerTypes.MethodDecAttribute])
                   (y :: [LexerTypes.MethodDecAttribute]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ LexerTypes.MethodDecAttribute
                        LexerTypes.$fEqMethodDecAttribute
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
4a6fa266ef9464fb93f2d34d394bedde
  $fEqBSVType :: GHC.Classes.Eq LexerTypes.BSVType
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.BSVType
                  LexerTypes.$fEqBSVType_$c==
                  LexerTypes.$fEqBSVType_$c/= -}
8e4fa46f3b3e0dfb841487fd74787a36
  $fEqBSVTypeDef :: GHC.Classes.Eq LexerTypes.BSVTypeDef
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.BSVTypeDef
                  LexerTypes.$fEqBSVTypeDef_$c==
                  LexerTypes.$fEqBSVTypeDef_$c/= -}
805cdf8b6211f37ef3140133feaba4f5
  $fEqBSVTypeDef1 ::
    GHC.Classes.Eq (LexerTypes.Name, LexerTypes.BSVType)
  {- Unfolding: (GHC.Classes.$fEq(,)
                   @ [GHC.Types.Char]
                   @ LexerTypes.BSVType
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   LexerTypes.$fEqBSVType) -}
8e4fa46f3b3e0dfb841487fd74787a36
  $fEqBSVTypeDef_$c/= ::
    LexerTypes.BSVTypeDef -> LexerTypes.BSVTypeDef -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.BSVTypeDef) (b :: LexerTypes.BSVTypeDef) ->
                 case LexerTypes.$fEqBSVTypeDef_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
8e4fa46f3b3e0dfb841487fd74787a36
  $fEqBSVTypeDef_$c== ::
    LexerTypes.BSVTypeDef -> LexerTypes.BSVTypeDef -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.BSVTypeDef)
                   (ds1 :: LexerTypes.BSVTypeDef) ->
                 case ds of wild {
                   LexerTypes.BSV_Synonym a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.BSV_Synonym b1 b2
                        -> case GHC.Base.eqString a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> LexerTypes.$fEqBSVType_$c== a2 b2 } }
                   LexerTypes.BSV_Enumeration a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.BSV_Enumeration b1 b2
                        -> case GHC.Base.eqString a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Classes.$fEq[]_$s$c==1 a2 b2 } }
                   LexerTypes.BSV_Struct a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.BSV_Struct b1 b2
                        -> case GHC.Base.eqString a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Classes.$fEq[]_$c==
                                  @ (LexerTypes.Name, LexerTypes.BSVType)
                                  LexerTypes.$fEqBSVTypeDef1
                                  a2
                                  b2 } } }) -}
4a6fa266ef9464fb93f2d34d394bedde
  $fEqBSVType_$c/= ::
    LexerTypes.BSVType -> LexerTypes.BSVType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.BSVType) (b :: LexerTypes.BSVType) ->
                 case LexerTypes.$fEqBSVType_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
4a6fa266ef9464fb93f2d34d394bedde
  $fEqBSVType_$c== ::
    LexerTypes.BSVType -> LexerTypes.BSVType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
8c52b7703dbf130a1d71c377ab4031f7
  $fEqBSVstateDec :: GHC.Classes.Eq LexerTypes.BSVstateDec
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.BSVstateDec
                  LexerTypes.$fEqBSVstateDec_$c==
                  LexerTypes.$fEqBSVstateDec_$c/= -}
8c52b7703dbf130a1d71c377ab4031f7
  $fEqBSVstateDec_$c/= ::
    LexerTypes.BSVstateDec -> LexerTypes.BSVstateDec -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.BSVstateDec) (b :: LexerTypes.BSVstateDec) ->
                 case LexerTypes.$fEqBSVstateDec_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
8c52b7703dbf130a1d71c377ab4031f7
  $fEqBSVstateDec_$c== ::
    LexerTypes.BSVstateDec -> LexerTypes.BSVstateDec -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fEqExpression :: GHC.Classes.Eq LexerTypes.Expression
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.Expression
                  LexerTypes.$fEqExpression_$c==
                  LexerTypes.$fEqExpression_$c/= -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fEqExpression_$c/= ::
    LexerTypes.Expression -> LexerTypes.Expression -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.Expression) (b :: LexerTypes.Expression) ->
                 case LexerTypes.$fEqExpression_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fEqExpression_$c== ::
    LexerTypes.Expression -> LexerTypes.Expression -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
62d32f60bf0117d657237a0b1409daa5
  $fEqFifoType :: GHC.Classes.Eq LexerTypes.FifoType
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.FifoType
                  LexerTypes.$fEqFifoType_$c==
                  LexerTypes.$fEqFifoType_$c/= -}
62d32f60bf0117d657237a0b1409daa5
  $fEqFifoType_$c/= ::
    LexerTypes.FifoType -> LexerTypes.FifoType -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.FifoType) (b :: LexerTypes.FifoType) ->
                 case LexerTypes.$fEqFifoType_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
62d32f60bf0117d657237a0b1409daa5
  $fEqFifoType_$c== ::
    LexerTypes.FifoType -> LexerTypes.FifoType -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (ds :: LexerTypes.FifoType)
                   (ds1 :: LexerTypes.FifoType) ->
                 case ds of wild {
                   DEFAULT
                   -> case GHC.Prim.dataToTag#
                             @ LexerTypes.FifoType
                             wild of a# { DEFAULT ->
                      case GHC.Prim.dataToTag#
                             @ LexerTypes.FifoType
                             ds1 of b# { DEFAULT ->
                      GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# a# b#) } }
                   LexerTypes.SizedFIFO a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag# @ LexerTypes.FifoType wild1 of b# {
                             DEFAULT -> GHC.Types.False 2# -> GHC.Types.True }
                        LexerTypes.SizedFIFO b1 -> LexerTypes.$fEqExpression_$c== a1 b1 }
                   LexerTypes.SizedFIFOF a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag# @ LexerTypes.FifoType wild1 of b# {
                             DEFAULT -> GHC.Types.False 3# -> GHC.Types.True }
                        LexerTypes.SizedFIFOF b1 -> LexerTypes.$fEqExpression_$c== a1 b1 }
                   LexerTypes.SizedBypassFIFOF a1
                   -> case ds1 of wild1 {
                        DEFAULT
                        -> case GHC.Prim.dataToTag# @ LexerTypes.FifoType wild1 of b# {
                             DEFAULT -> GHC.Types.False 13# -> GHC.Types.True }
                        LexerTypes.SizedBypassFIFOF b1
                        -> LexerTypes.$fEqExpression_$c== a1 b1 } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fEqID_Path :: GHC.Classes.Eq LexerTypes.ID_Path
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.ID_Path
                  LexerTypes.$fEqID_Path_$c==
                  LexerTypes.$fEqID_Path_$c/= -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fEqID_Path_$c/= ::
    LexerTypes.ID_Path -> LexerTypes.ID_Path -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.ID_Path) (b :: LexerTypes.ID_Path) ->
                 case LexerTypes.$fEqID_Path_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fEqID_Path_$c== ::
    LexerTypes.ID_Path -> LexerTypes.ID_Path -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
a509f8cd27c185b7680a841781f3b25f
  $fEqInterfaceAttribute ::
    GHC.Classes.Eq LexerTypes.InterfaceAttribute
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.InterfaceAttribute
                  LexerTypes.$fEqInterfaceAttribute_$c==
                  LexerTypes.$fEqInterfaceAttribute_$c/= -}
a509f8cd27c185b7680a841781f3b25f
  $fEqInterfaceAttribute_$c/= ::
    LexerTypes.InterfaceAttribute
    -> LexerTypes.InterfaceAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: LexerTypes.InterfaceAttribute)
                   (b :: LexerTypes.InterfaceAttribute) ->
                 case a of wild {
                   LexerTypes.Int_Always_Ready
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        LexerTypes.Int_Always_Ready -> GHC.Types.False }
                   LexerTypes.Int_Always_Enabled
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        LexerTypes.Int_Always_Enabled -> GHC.Types.False }
                   LexerTypes.Int_Doc a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        LexerTypes.Int_Doc b1
                        -> case GHC.Base.eqString a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } }) -}
a509f8cd27c185b7680a841781f3b25f
  $fEqInterfaceAttribute_$c== ::
    LexerTypes.InterfaceAttribute
    -> LexerTypes.InterfaceAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.InterfaceAttribute)
                   (ds1 :: LexerTypes.InterfaceAttribute) ->
                 case ds of wild {
                   LexerTypes.Int_Always_Ready
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Int_Always_Ready -> GHC.Types.True }
                   LexerTypes.Int_Always_Enabled
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Int_Always_Enabled -> GHC.Types.True }
                   LexerTypes.Int_Doc a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Int_Doc b1 -> GHC.Base.eqString a1 b1 } }) -}
3ae8634cce2ce6c491831d891f6327fe
  $fEqInvokationTree :: GHC.Classes.Eq LexerTypes.InvokationTree
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.InvokationTree
                  LexerTypes.$fEqInvokationTree_$c==
                  LexerTypes.$fEqInvokationTree_$c/= -}
3ae8634cce2ce6c491831d891f6327fe
  $fEqInvokationTree_$c/= ::
    LexerTypes.InvokationTree
    -> LexerTypes.InvokationTree -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.InvokationTree)
                   (b :: LexerTypes.InvokationTree) ->
                 case LexerTypes.$fEqInvokationTree_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
3ae8634cce2ce6c491831d891f6327fe
  $fEqInvokationTree_$c== ::
    LexerTypes.InvokationTree
    -> LexerTypes.InvokationTree -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
e03304d97e0d6aca513132b576af286a
  $fEqLit :: GHC.Classes.Eq LexerTypes.Lit
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.Lit LexerTypes.$fEqLit_$c== LexerTypes.$fEqLit_$c/= -}
e03304d97e0d6aca513132b576af286a
  $fEqLit_$c/= :: LexerTypes.Lit -> LexerTypes.Lit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.Lit) (b :: LexerTypes.Lit) ->
                 case LexerTypes.$fEqLit_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
e03304d97e0d6aca513132b576af286a
  $fEqLit_$c== :: LexerTypes.Lit -> LexerTypes.Lit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.Lit) (ds1 :: LexerTypes.Lit) ->
                 case ds of wild {
                   LexerTypes.LitString a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.LitString b1 -> GHC.Base.eqString a1 b1 }
                   LexerTypes.LitEnum a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.LitEnum b1 -> GHC.Base.eqString a1 b1 }
                   LexerTypes.LitInt a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.LitInt b1 -> GHC.Integer.Type.eqInteger a1 b1 }
                   LexerTypes.LitBool a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.LitBool b1 -> GHC.Classes.$fEqBool_$c== a1 b1 }
                   LexerTypes.LitReal a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.LitReal b1 -> GHC.Classes.eqFloat a1 b1 }
                   LexerTypes.LitChar a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.LitChar b1 -> GHC.Classes.eqChar a1 b1 }
                   LexerTypes.LitSizedInt a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.LitSizedInt b1 b2
                        -> case GHC.Integer.Type.eqInteger# a1 b1 of wild2 { DEFAULT ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Integer.Type.eqInteger a2 b2 } } }
                   LexerTypes.LitStructConstructor
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.LitStructConstructor -> GHC.Types.True }
                   LexerTypes.LitVoid
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.LitVoid -> GHC.Types.True } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fEqMaybeIDTag :: GHC.Classes.Eq LexerTypes.MaybeIDTag
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.MaybeIDTag
                  LexerTypes.$fEqMaybeIDTag_$c==
                  LexerTypes.$fEqMaybeIDTag_$c/= -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fEqMaybeIDTag_$c/= ::
    LexerTypes.MaybeIDTag -> LexerTypes.MaybeIDTag -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: LexerTypes.MaybeIDTag)
                   (b :: LexerTypes.MaybeIDTag) ->
                 case a of wild {
                   LexerTypes.ValidID a1
                   -> case b of wild1 {
                        LexerTypes.ValidID b1
                        -> case LexerTypes.$fEqID_Path_$c== a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False }
                        LexerTypes.InvalidID -> GHC.Types.True }
                   LexerTypes.InvalidID
                   -> case b of wild1 {
                        LexerTypes.ValidID ipv -> GHC.Types.True
                        LexerTypes.InvalidID -> GHC.Types.False } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fEqMaybeIDTag_$c== ::
    LexerTypes.MaybeIDTag -> LexerTypes.MaybeIDTag -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: LexerTypes.MaybeIDTag) (ds1 :: LexerTypes.MaybeIDTag) ->
                 case ds of wild {
                   LexerTypes.ValidID a1
                   -> case ds1 of wild1 {
                        LexerTypes.ValidID b1 -> LexerTypes.$fEqID_Path_$c== a1 b1
                        LexerTypes.InvalidID -> GHC.Types.False }
                   LexerTypes.InvalidID
                   -> case ds1 of wild1 {
                        LexerTypes.ValidID ipv -> GHC.Types.False
                        LexerTypes.InvalidID -> GHC.Types.True } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fEqMaybeTag :: GHC.Classes.Eq LexerTypes.MaybeTag
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.MaybeTag
                  LexerTypes.$fEqMaybeTag_$c==
                  LexerTypes.$fEqMaybeTag_$c/= -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fEqMaybeTag_$c/= ::
    LexerTypes.MaybeTag -> LexerTypes.MaybeTag -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: LexerTypes.MaybeTag)
                   (b :: LexerTypes.MaybeTag) ->
                 case a of wild {
                   LexerTypes.Valid a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        LexerTypes.Valid b1
                        -> case LexerTypes.$fEqExpression_$c== a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } }
                   LexerTypes.Invalid
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True LexerTypes.Invalid -> GHC.Types.False }
                   LexerTypes.MaybeContainer a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        LexerTypes.MaybeContainer b1
                        -> case LexerTypes.$fEqExpression_$c== a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fEqMaybeTag_$c== ::
    LexerTypes.MaybeTag -> LexerTypes.MaybeTag -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.MaybeTag)
                   (ds1 :: LexerTypes.MaybeTag) ->
                 case ds of wild {
                   LexerTypes.Valid a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Valid b1 -> LexerTypes.$fEqExpression_$c== a1 b1 }
                   LexerTypes.Invalid
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False LexerTypes.Invalid -> GHC.Types.True }
                   LexerTypes.MaybeContainer a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.MaybeContainer b1
                        -> LexerTypes.$fEqExpression_$c== a1 b1 } }) -}
b4aecb172444b05b089bf49557976776
  $fEqMethodBodyAttribute ::
    GHC.Classes.Eq LexerTypes.MethodBodyAttribute
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.MethodBodyAttribute
                  LexerTypes.$fEqMethodBodyAttribute_$c==
                  LexerTypes.$fEqMethodBodyAttribute_$c/= -}
b4aecb172444b05b089bf49557976776
  $fEqMethodBodyAttribute_$c/= ::
    LexerTypes.MethodBodyAttribute
    -> LexerTypes.MethodBodyAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.MethodBodyAttribute)
                   (b :: LexerTypes.MethodBodyAttribute) ->
                 case a of wild { LexerTypes.Met_Doc a1 ->
                 case b of wild1 { LexerTypes.Met_Doc b1 ->
                 case GHC.Base.eqString a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
b4aecb172444b05b089bf49557976776
  $fEqMethodBodyAttribute_$c== ::
    LexerTypes.MethodBodyAttribute
    -> LexerTypes.MethodBodyAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: LexerTypes.MethodBodyAttribute)
                   (ds1 :: LexerTypes.MethodBodyAttribute) ->
                 case ds of wild { LexerTypes.Met_Doc a1 ->
                 case ds1 of wild1 { LexerTypes.Met_Doc b1 ->
                 GHC.Base.eqString a1 b1 } }) -}
43646e54358077c291b127f0bcee7b7b
  $fEqMethodDecAttribute ::
    GHC.Classes.Eq LexerTypes.MethodDecAttribute
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.MethodDecAttribute
                  LexerTypes.$fEqMethodDecAttribute_$c==
                  LexerTypes.$fEqMethodDecAttribute_$c/= -}
43646e54358077c291b127f0bcee7b7b
  $fEqMethodDecAttribute_$c/= ::
    LexerTypes.MethodDecAttribute
    -> LexerTypes.MethodDecAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.MethodDecAttribute)
                   (b :: LexerTypes.MethodDecAttribute) ->
                 case LexerTypes.$fEqMethodDecAttribute_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
43646e54358077c291b127f0bcee7b7b
  $fEqMethodDecAttribute_$c== ::
    LexerTypes.MethodDecAttribute
    -> LexerTypes.MethodDecAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.MethodDecAttribute)
                   (ds1 :: LexerTypes.MethodDecAttribute) ->
                 case ds of wild {
                   LexerTypes.MDc_Ready a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.MDc_Ready b1 -> GHC.Base.eqString a1 b1 }
                   LexerTypes.MDc_Enable a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.MDc_Enable b1 -> GHC.Base.eqString a1 b1 }
                   LexerTypes.MDc_Result a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.MDc_Result b1 -> GHC.Base.eqString a1 b1 }
                   LexerTypes.MDc_Prefix a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.MDc_Prefix b1 -> GHC.Base.eqString a1 b1 }
                   LexerTypes.MDc_Port a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.MDc_Port b1 -> GHC.Base.eqString a1 b1 }
                   LexerTypes.MDc_Always_Ready
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.MDc_Always_Ready -> GHC.Types.True }
                   LexerTypes.MDc_Always_Enabled
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.MDc_Always_Enabled -> GHC.Types.True }
                   LexerTypes.MDc_Doc a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.MDc_Doc b1 -> GHC.Base.eqString a1 b1 } }) -}
2882a2cad63f6474f30d3fc20714ae61
  $fEqMode :: GHC.Classes.Eq LexerTypes.Mode
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.Mode
                  LexerTypes.$fEqMode_$c==
                  LexerTypes.$fEqMode_$c/= -}
2882a2cad63f6474f30d3fc20714ae61
  $fEqMode_$c/= ::
    LexerTypes.Mode -> LexerTypes.Mode -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: LexerTypes.Mode) (b :: LexerTypes.Mode) ->
                 case a of wild {
                   LexerTypes.B2P
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True LexerTypes.B2P -> GHC.Types.False }
                   LexerTypes.P2B
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True LexerTypes.P2B -> GHC.Types.False }
                   LexerTypes.B2B
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True LexerTypes.B2B -> GHC.Types.False }
                   LexerTypes.P2P
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True LexerTypes.P2P -> GHC.Types.False }
                   LexerTypes.T2B
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True LexerTypes.T2B -> GHC.Types.False }
                   LexerTypes.T2P
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True LexerTypes.T2P -> GHC.Types.False } }) -}
2882a2cad63f6474f30d3fc20714ae61
  $fEqMode_$c== ::
    LexerTypes.Mode -> LexerTypes.Mode -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.Mode) (ds1 :: LexerTypes.Mode) ->
                 case ds of wild {
                   LexerTypes.B2P
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False LexerTypes.B2P -> GHC.Types.True }
                   LexerTypes.P2B
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False LexerTypes.P2B -> GHC.Types.True }
                   LexerTypes.B2B
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False LexerTypes.B2B -> GHC.Types.True }
                   LexerTypes.P2P
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False LexerTypes.P2P -> GHC.Types.True }
                   LexerTypes.T2B
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False LexerTypes.T2B -> GHC.Types.True }
                   LexerTypes.T2P
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False LexerTypes.T2P -> GHC.Types.True } }) -}
38c8cfc922a8b6609d6630c27049fe7f
  $fEqModuleAttribute :: GHC.Classes.Eq LexerTypes.ModuleAttribute
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.ModuleAttribute
                  LexerTypes.$fEqModuleAttribute_$c==
                  LexerTypes.$fEqModuleAttribute_$c/= -}
38c8cfc922a8b6609d6630c27049fe7f
  $fEqModuleAttribute_$c/= ::
    LexerTypes.ModuleAttribute
    -> LexerTypes.ModuleAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.ModuleAttribute)
                   (b :: LexerTypes.ModuleAttribute) ->
                 case LexerTypes.$fEqModuleAttribute_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
38c8cfc922a8b6609d6630c27049fe7f
  $fEqModuleAttribute_$c== ::
    LexerTypes.ModuleAttribute
    -> LexerTypes.ModuleAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
5293579e9cbbf6986dcf46fee97434cb
  $fEqPVSType :: GHC.Classes.Eq LexerTypes.PVSType
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.PVSType
                  LexerTypes.$fEqPVSType_$c==
                  LexerTypes.$fEqPVSType_$c/= -}
263d5987ddec79fadf35563de5be9f0c
  $fEqPVSTypeDef :: GHC.Classes.Eq LexerTypes.PVSTypeDef
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.PVSTypeDef
                  LexerTypes.$fEqPVSTypeDef_$c==
                  LexerTypes.$fEqPVSTypeDef_$c/= -}
e55783fdaab5c7eefe84c1a7b56560a4
  $fEqPVSTypeDef1 ::
    GHC.Classes.Eq (GHC.Base.String, LexerTypes.PVSType)
  {- Unfolding: (GHC.Classes.$fEq(,)
                   @ [GHC.Types.Char]
                   @ LexerTypes.PVSType
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   LexerTypes.$fEqPVSType) -}
263d5987ddec79fadf35563de5be9f0c
  $fEqPVSTypeDef_$c/= ::
    LexerTypes.PVSTypeDef -> LexerTypes.PVSTypeDef -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.PVSTypeDef) (b :: LexerTypes.PVSTypeDef) ->
                 case LexerTypes.$fEqPVSTypeDef_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
263d5987ddec79fadf35563de5be9f0c
  $fEqPVSTypeDef_$c== ::
    LexerTypes.PVSTypeDef -> LexerTypes.PVSTypeDef -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.PVSTypeDef)
                   (ds1 :: LexerTypes.PVSTypeDef) ->
                 case ds of wild {
                   LexerTypes.PVS_Synonym a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.PVS_Synonym b1 b2
                        -> case GHC.Base.eqString a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> LexerTypes.$fEqPVSType_$c== a2 b2 } }
                   LexerTypes.PVS_Enumeration a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.PVS_Enumeration b1 b2
                        -> case GHC.Base.eqString a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Classes.$fEq[]_$s$c==1 a2 b2 } }
                   LexerTypes.PVS_Struct a1 a2
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.PVS_Struct b1 b2
                        -> case GHC.Base.eqString a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Classes.$fEq[]_$c==
                                  @ (LexerTypes.Name, LexerTypes.PVSType)
                                  LexerTypes.$fEqPVSTypeDef1
                                  a2
                                  b2 } } }) -}
5293579e9cbbf6986dcf46fee97434cb
  $fEqPVSType_$c/= ::
    LexerTypes.PVSType -> LexerTypes.PVSType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.PVSType) (b :: LexerTypes.PVSType) ->
                 case LexerTypes.$fEqPVSType_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
5293579e9cbbf6986dcf46fee97434cb
  $fEqPVSType_$c== ::
    LexerTypes.PVSType -> LexerTypes.PVSType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
27e7de08b1523caab97202618cf8bce6
  $fEqPVSstate :: GHC.Classes.Eq LexerTypes.PVSstate
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.PVSstate
                  LexerTypes.$fEqPVSstate_$c==
                  LexerTypes.$fEqPVSstate_$c/= -}
27e7de08b1523caab97202618cf8bce6
  $fEqPVSstate_$c/= ::
    LexerTypes.PVSstate -> LexerTypes.PVSstate -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.PVSstate) (b :: LexerTypes.PVSstate) ->
                 case LexerTypes.$fEqPVSstate_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
27e7de08b1523caab97202618cf8bce6
  $fEqPVSstate_$c== ::
    LexerTypes.PVSstate -> LexerTypes.PVSstate -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.PVSstate)
                   (ds1 :: LexerTypes.PVSstate) ->
                 case ds of wild {
                   LexerTypes.PVS_Reg a1 a2 a3
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.PVS_Reg b1 b2 b3
                        -> case LexerTypes.$fEqID_Path_$c== a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case LexerTypes.$fEqPVSType_$c== a2 b2 of wild3 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True -> LexerTypes.$fEqExpression_$c== a3 b3 } } }
                   LexerTypes.PVS_Fifo a1 a2 a3
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.PVS_Fifo b1 b2 b3
                        -> case LexerTypes.$fEqFifoType_$c== a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case LexerTypes.$fEqID_Path_$c== a2 b2 of wild3 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True -> LexerTypes.$fEqPVSType_$c== a3 b3 } } }
                   LexerTypes.PVS_Vector a1 a2 a3 a4
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.PVS_Vector b1 b2 b3 b4
                        -> case LexerTypes.$fEqID_Path_$c== a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case LexerTypes.$fEqPVSType_$c== a2 b2 of wild3 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case GHC.Integer.Type.eqInteger# a3 b3 of wild4 { DEFAULT ->
                                     case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild4 of wild5 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> LexerTypes.$fEqPVSstate_$c==1 a4 b4 } } } } }
                   LexerTypes.PVS_SubModuleDec a1 a2 a3
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.PVS_SubModuleDec b1 b2 b3
                        -> case GHC.Base.eqString a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case GHC.Base.eqString a2 b2 of wild3 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True -> GHC.Base.eqString a3 b3 } } }
                   LexerTypes.PVS_DWire a1 a2 a3
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.PVS_DWire b1 b2 b3
                        -> case LexerTypes.$fEqID_Path_$c== a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case LexerTypes.$fEqPVSType_$c== a2 b2 of wild3 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True -> LexerTypes.$fEqExpression_$c== a3 b3 } } } }) -}
c2b979719dd3c7dfe36e1834bf38f676
  $fEqPVSstate_$c==1 ::
    LexerTypes.VectorInit -> LexerTypes.VectorInit -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.VectorInit)
                   (ds1 :: LexerTypes.VectorInit) ->
                 case ds of wild {
                   LexerTypes.Replicate a1
                   -> case ds1 of wild1 {
                        LexerTypes.Replicate b1 -> LexerTypes.$fEqExpression_$c== a1 b1
                        LexerTypes.Explicit ipv -> GHC.Types.False }
                   LexerTypes.Explicit a1
                   -> case ds1 of wild1 {
                        LexerTypes.Replicate ipv -> GHC.Types.False
                        LexerTypes.Explicit b1
                        -> GHC.Classes.$fEq[]_$c==
                             @ LexerTypes.Expression
                             LexerTypes.$fEqExpression
                             a1
                             b1 } }) -}
24b25751d883836f2c08d627f196fc9d
  $fEqRegFileLoader :: GHC.Classes.Eq LexerTypes.RegFileLoader
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.RegFileLoader
                  LexerTypes.$fEqRegFileLoader_$c==
                  LexerTypes.$fEqRegFileLoader_$c/= -}
24b25751d883836f2c08d627f196fc9d
  $fEqRegFileLoader_$c/= ::
    LexerTypes.RegFileLoader
    -> LexerTypes.RegFileLoader -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.RegFileLoader)
                   (b :: LexerTypes.RegFileLoader) ->
                 case LexerTypes.$fEqRegFileLoader_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
24b25751d883836f2c08d627f196fc9d
  $fEqRegFileLoader_$c== ::
    LexerTypes.RegFileLoader
    -> LexerTypes.RegFileLoader -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: LexerTypes.RegFileLoader)
                   (w1 :: LexerTypes.RegFileLoader) ->
                 case w of ww { LexerTypes.RegFileLoad ww1 ww2 ww3 ->
                 case w1 of ww4 { LexerTypes.RegFileLoad ww5 ww6 ww7 ->
                 LexerTypes.$w$c== ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
edbdd3627cba53012a786daa322eb050
  $fEqReturnType :: GHC.Classes.Eq LexerTypes.ReturnType
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.ReturnType
                  LexerTypes.$fEqReturnType_$c==
                  LexerTypes.$fEqReturnType_$c/= -}
edbdd3627cba53012a786daa322eb050
  $fEqReturnType_$c/= ::
    LexerTypes.ReturnType -> LexerTypes.ReturnType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: LexerTypes.ReturnType)
                   (b :: LexerTypes.ReturnType) ->
                 case a of wild {
                   LexerTypes.Action
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True LexerTypes.Action -> GHC.Types.False }
                   LexerTypes.ActionValue a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        LexerTypes.ActionValue b1
                        -> case LexerTypes.$fEqBSVType_$c== a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } }
                   LexerTypes.Value a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        LexerTypes.Value b1
                        -> case LexerTypes.$fEqBSVType_$c== a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } }) -}
edbdd3627cba53012a786daa322eb050
  $fEqReturnType_$c== ::
    LexerTypes.ReturnType -> LexerTypes.ReturnType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.ReturnType)
                   (ds1 :: LexerTypes.ReturnType) ->
                 case ds of wild {
                   LexerTypes.Action
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False LexerTypes.Action -> GHC.Types.True }
                   LexerTypes.ActionValue a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.ActionValue b1 -> LexerTypes.$fEqBSVType_$c== a1 b1 }
                   LexerTypes.Value a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Value b1 -> LexerTypes.$fEqBSVType_$c== a1 b1 } }) -}
2bdb464ecda2ca4646f2cafd65165658
  $fEqRuleAttribute :: GHC.Classes.Eq LexerTypes.RuleAttribute
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.RuleAttribute
                  LexerTypes.$fEqRuleAttribute_$c==
                  LexerTypes.$fEqRuleAttribute_$c/= -}
2bdb464ecda2ca4646f2cafd65165658
  $fEqRuleAttribute_$c/= ::
    LexerTypes.RuleAttribute
    -> LexerTypes.RuleAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.RuleAttribute)
                   (b :: LexerTypes.RuleAttribute) ->
                 case LexerTypes.$fEqRuleAttribute_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
2bdb464ecda2ca4646f2cafd65165658
  $fEqRuleAttribute_$c== ::
    LexerTypes.RuleAttribute
    -> LexerTypes.RuleAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.RuleAttribute)
                   (ds1 :: LexerTypes.RuleAttribute) ->
                 case ds of wild {
                   LexerTypes.Fire_When_Enabled
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Fire_When_Enabled -> GHC.Types.True }
                   LexerTypes.No_Implicit_Conditions
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.No_Implicit_Conditions -> GHC.Types.True }
                   LexerTypes.Rul_Descending_Urgency a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Rul_Descending_Urgency b1
                        -> GHC.Classes.$fEq[]_$s$c==1 a1 b1 }
                   LexerTypes.Rul_Execution_Order a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Rul_Execution_Order b1
                        -> GHC.Classes.$fEq[]_$s$c==1 a1 b1 }
                   LexerTypes.Rul_Mutually_Exclusive a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Rul_Mutually_Exclusive b1
                        -> GHC.Classes.$fEq[]_$s$c==1 a1 b1 }
                   LexerTypes.Rul_Conflict_Free a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Rul_Conflict_Free b1
                        -> GHC.Classes.$fEq[]_$s$c==1 a1 b1 }
                   LexerTypes.Rul_Preempts a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Rul_Preempts b1 -> GHC.Classes.$fEq[]_$s$c==1 a1 b1 }
                   LexerTypes.Rul_Doc a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Rul_Doc b1 -> GHC.Base.eqString a1 b1 } }) -}
269d6e12c984e7a4de1bdae43d808778
  $fEqRuleHeap :: GHC.Classes.Eq LexerTypes.RuleHeap
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.RuleHeap
                  LexerTypes.$fEqRuleHeap_$c==
                  LexerTypes.$fEqRuleHeap_$c/= -}
269d6e12c984e7a4de1bdae43d808778
  $fEqRuleHeap_$c/= ::
    LexerTypes.RuleHeap -> LexerTypes.RuleHeap -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.RuleHeap) (b :: LexerTypes.RuleHeap) ->
                 case LexerTypes.$fEqRuleHeap_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
269d6e12c984e7a4de1bdae43d808778
  $fEqRuleHeap_$c== ::
    LexerTypes.RuleHeap -> LexerTypes.RuleHeap -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: LexerTypes.RuleHeap) (w1 :: LexerTypes.RuleHeap) ->
                 case w of ww { LexerTypes.RHeap ww1 ww2 ww3 ->
                 case w1 of ww4 { LexerTypes.RHeap ww5 ww6 ww7 ->
                 LexerTypes.$w$c==1 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
08b3b374ca9923e08b3d8f295257edb0
  $fEqRuleNode :: GHC.Classes.Eq LexerTypes.RuleNode
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.RuleNode
                  LexerTypes.$fEqRuleNode_$c==
                  LexerTypes.$fEqRuleNode_$c/= -}
08b3b374ca9923e08b3d8f295257edb0
  $fEqRuleNode_$c/= ::
    LexerTypes.RuleNode -> LexerTypes.RuleNode -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.RuleNode) (b :: LexerTypes.RuleNode) ->
                 case LexerTypes.$fEqRuleNode_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
08b3b374ca9923e08b3d8f295257edb0
  $fEqRuleNode_$c== ::
    LexerTypes.RuleNode -> LexerTypes.RuleNode -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: LexerTypes.RuleNode) (w1 :: LexerTypes.RuleNode) ->
                 case w of ww { LexerTypes.RuleNode ww1 ww2 ->
                 case w1 of ww3 { LexerTypes.RuleNode ww4 ww5 ->
                 LexerTypes.$w$c==2 ww1 ww2 ww4 ww5 } }) -}
7b3adb9e814c886706bb5c400eeb330c
  $fEqRuleSchedule :: GHC.Classes.Eq LexerTypes.RuleSchedule
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.RuleSchedule
                  LexerTypes.$fEqRuleSchedule_$c==
                  LexerTypes.$fEqRuleSchedule_$c/= -}
7b3adb9e814c886706bb5c400eeb330c
  $fEqRuleSchedule_$c/= ::
    LexerTypes.RuleSchedule
    -> LexerTypes.RuleSchedule -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLLLLLLLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLLLLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.RuleSchedule) (b :: LexerTypes.RuleSchedule) ->
                 case LexerTypes.$fEqRuleSchedule_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
7b3adb9e814c886706bb5c400eeb330c
  $fEqRuleSchedule_$c== ::
    LexerTypes.RuleSchedule
    -> LexerTypes.RuleSchedule -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLLLLLLLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLLLLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)> -}
0a707cbf9c25ca42c10c6035c89eda04
  $fEqRuleTree :: GHC.Classes.Eq LexerTypes.RuleTree
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.RuleTree
                  LexerTypes.$fEqRuleTree_$c==
                  LexerTypes.$fEqRuleTree_$c/= -}
0a707cbf9c25ca42c10c6035c89eda04
  $fEqRuleTree_$c/= ::
    LexerTypes.RuleTree -> LexerTypes.RuleTree -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.RuleTree) (b :: LexerTypes.RuleTree) ->
                 case LexerTypes.$fEqRuleTree_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
0a707cbf9c25ca42c10c6035c89eda04
  $fEqRuleTree_$c== ::
    LexerTypes.RuleTree -> LexerTypes.RuleTree -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
6a668caddf4b8e9677117e2028b195e2
  $fEqSpecificTree :: GHC.Classes.Eq LexerTypes.SpecificTree
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.SpecificTree
                  LexerTypes.$fEqSpecificTree_$c==
                  LexerTypes.$fEqSpecificTree_$c/= -}
6a668caddf4b8e9677117e2028b195e2
  $fEqSpecificTree_$c/= ::
    LexerTypes.SpecificTree
    -> LexerTypes.SpecificTree -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.SpecificTree) (b :: LexerTypes.SpecificTree) ->
                 case LexerTypes.$fEqSpecificTree_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
6a668caddf4b8e9677117e2028b195e2
  $fEqSpecificTree_$c== ::
    LexerTypes.SpecificTree
    -> LexerTypes.SpecificTree -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
cadc4dd88ae52d1939dfeb3e511aff3a
  $fEqStatement :: GHC.Classes.Eq LexerTypes.Statement
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.Statement
                  LexerTypes.$fEqStatement_$c==
                  LexerTypes.$fEqStatement_$c/= -}
5526f020d66208751c85b3afb1bd43de
  $fEqStatementAttribute ::
    GHC.Classes.Eq LexerTypes.StatementAttribute
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.StatementAttribute
                  LexerTypes.$fEqStatementAttribute_$c==
                  LexerTypes.$fEqStatementAttribute_$c/= -}
5526f020d66208751c85b3afb1bd43de
  $fEqStatementAttribute_$c/= ::
    LexerTypes.StatementAttribute
    -> LexerTypes.StatementAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.StatementAttribute)
                   (b :: LexerTypes.StatementAttribute) ->
                 case LexerTypes.$fEqStatementAttribute_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
5526f020d66208751c85b3afb1bd43de
  $fEqStatementAttribute_$c== ::
    LexerTypes.StatementAttribute
    -> LexerTypes.StatementAttribute -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.StatementAttribute)
                   (ds1 :: LexerTypes.StatementAttribute) ->
                 case ds of wild {
                   LexerTypes.Split
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False LexerTypes.Split -> GHC.Types.True }
                   LexerTypes.NoSplit
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False LexerTypes.NoSplit -> GHC.Types.True }
                   LexerTypes.Sta_Descending_Urgency a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Sta_Descending_Urgency b1
                        -> GHC.Classes.$fEq[]_$s$c==1 a1 b1 }
                   LexerTypes.Sta_Execution_Order a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Sta_Execution_Order b1
                        -> GHC.Classes.$fEq[]_$s$c==1 a1 b1 }
                   LexerTypes.Sta_Mutually_Exclusive a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Sta_Mutually_Exclusive b1
                        -> GHC.Classes.$fEq[]_$s$c==1 a1 b1 }
                   LexerTypes.Sta_Conflict_Free a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Sta_Conflict_Free b1
                        -> GHC.Classes.$fEq[]_$s$c==1 a1 b1 }
                   LexerTypes.Sta_Preempts a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Sta_Preempts b1 -> GHC.Classes.$fEq[]_$s$c==1 a1 b1 }
                   LexerTypes.Sta_Doc a1
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Sta_Doc b1 -> GHC.Base.eqString a1 b1 } }) -}
cadc4dd88ae52d1939dfeb3e511aff3a
  $fEqStatement_$c/= ::
    LexerTypes.Statement -> LexerTypes.Statement -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.Statement) (b :: LexerTypes.Statement) ->
                 case LexerTypes.$fEqStatement_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
cadc4dd88ae52d1939dfeb3e511aff3a
  $fEqStatement_$c== ::
    LexerTypes.Statement -> LexerTypes.Statement -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
c811cfd5a607fccc3baae6462b8eca1f
  $fEqTSPpackage :: GHC.Classes.Eq LexerTypes.TSPpackage
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.TSPpackage
                  LexerTypes.$fEqTSPpackage_$c==
                  LexerTypes.$fEqTSPpackage_$c/= -}
53f1b394df9651d4c6e3e4c734354270
  $fEqTSPpackage1 ::
    GHC.Classes.Eq
      (GHC.Base.String, LexerTypes.PVSType, LexerTypes.Literal)
  {- Unfolding: (GHC.Classes.$fEq(,,)
                   @ [GHC.Types.Char]
                   @ LexerTypes.PVSType
                   @ LexerTypes.Expression
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   LexerTypes.$fEqPVSType
                   LexerTypes.$fEqExpression) -}
706393dcde409d550748890571ad13e6
  $fEqTSPpackage2 ::
    GHC.Classes.Eq
      (GHC.Base.String, [LexerTypes.PVSArgument], LexerTypes.PVSType,
       LexerTypes.Expression)
  {- Unfolding: (GHC.Classes.$fEq(,,,)
                   @ [GHC.Types.Char]
                   @ [LexerTypes.PVSArgument]
                   @ LexerTypes.PVSType
                   @ LexerTypes.Expression
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   LexerTypes.$fEqTSPpackage3
                   LexerTypes.$fEqPVSType
                   LexerTypes.$fEqExpression) -}
58361140ea35e31e6734e942718749dd
  $fEqTSPpackage3 :: GHC.Classes.Eq [LexerTypes.PVSArgument]
  {- Unfolding: (GHC.Classes.$fEq[]
                   @ (GHC.Base.String, LexerTypes.PVSType)
                   LexerTypes.$fEqPVSTypeDef1) -}
c4c6e4fc425c5f08b884b30ef503f1af
  $fEqTSPpackage4 ::
    GHC.Classes.Eq
      (LexerTypes.TName, LexerTypes.TSPOutVar, LexerTypes.Expression,
       [LexerTypes.Replacement], [GHC.Base.String], [LexerTypes.TSPLine])
  {- Unfolding: (GHC.Classes.$fEq(,,,,,)
                   @ [GHC.Types.Char]
                   @ (LexerTypes.ID_Path, LexerTypes.Temporal)
                   @ LexerTypes.Expression
                   @ [LexerTypes.Replacement]
                   @ [GHC.Base.String]
                   @ [LexerTypes.TSPLine]
                   GHC.Classes.$fEq[]_$s$fEq[]1
                   LexerTypes.$fEqTSPpackage7
                   LexerTypes.$fEqExpression
                   LexerTypes.$fEqTSPpackage5
                   GHC.Classes.$fEq[]_$s$fEq[]2
                   LexerTypes.$fEqTSPpackage5) -}
48af0aff71f44fb913423a22889b3f8c
  $fEqTSPpackage5 :: GHC.Classes.Eq [LexerTypes.Replacement]
  {- Unfolding: (GHC.Classes.$fEq[]
                   @ (LexerTypes.Expression, LexerTypes.Expression)
                   LexerTypes.$fEqTSPpackage6) -}
638892b2f3c3834bb8aa6f532a8cee8b
  $fEqTSPpackage6 ::
    GHC.Classes.Eq (LexerTypes.Literal, LexerTypes.Expression)
  {- Unfolding: (GHC.Classes.$fEq(,)
                   @ LexerTypes.Expression
                   @ LexerTypes.Expression
                   LexerTypes.$fEqExpression
                   LexerTypes.$fEqExpression) -}
98d9cae6091b2c3af16029ad94318606
  $fEqTSPpackage7 ::
    GHC.Classes.Eq (LexerTypes.ID_Path, LexerTypes.Temporal)
  {- Unfolding: (GHC.Classes.$fEq(,)
                   @ LexerTypes.ID_Path
                   @ LexerTypes.Temporal
                   LexerTypes.$fEqID_Path
                   LexerTypes.$fEqTemporal) -}
738fdc7f5780caf8dd3fb403ad9c1b67
  $fEqTSPpackage8 ::
    GHC.Classes.Eq ([GHC.Base.String], LexerTypes.PVSType)
  {- Unfolding: (GHC.Classes.$fEq(,)
                   @ [GHC.Base.String]
                   @ LexerTypes.PVSType
                   GHC.Classes.$fEq[]_$s$fEq[]2
                   LexerTypes.$fEqPVSType) -}
c811cfd5a607fccc3baae6462b8eca1f
  $fEqTSPpackage_$c/= ::
    LexerTypes.TSPpackage -> LexerTypes.TSPpackage -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.TSPpackage) (b :: LexerTypes.TSPpackage) ->
                 case LexerTypes.$fEqTSPpackage_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
c811cfd5a607fccc3baae6462b8eca1f
  $fEqTSPpackage_$c== ::
    LexerTypes.TSPpackage -> LexerTypes.TSPpackage -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: (\ (ds :: LexerTypes.TSPpackage)
                   (ds1 :: LexerTypes.TSPpackage) ->
                 case ds of wild { LexerTypes.TSPpackage a1 a2 a3 a4 a5 a6 a7 ->
                 case ds1 of wild1 { LexerTypes.TSPpackage b1 b2 b3 b4 b5 b6 b7 ->
                 case GHC.Base.eqString a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Classes.$fEq[]_$c==
                             @ LexerTypes.PVSTypeDef
                             LexerTypes.$fEqPVSTypeDef
                             a2
                             b2 of wild3 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ (LexerTypes.Name, [(LexerTypes.Name, LexerTypes.Literal)])
                                  LexerTypes.$fEqBSVPackage7
                                  a3
                                  b3 of wild4 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> case GHC.Classes.$fEq[]_$c==
                                       @ ([GHC.Base.String], LexerTypes.PVSType)
                                       LexerTypes.$fEqTSPpackage8
                                       a4
                                       b4 of wild5 {
                                  GHC.Types.False -> GHC.Types.False
                                  GHC.Types.True
                                  -> case GHC.Classes.$fEq[]_$c==
                                            @ (LexerTypes.TName, LexerTypes.TSPOutVar,
                                               LexerTypes.Expression, [LexerTypes.Replacement],
                                               [GHC.Base.String], [LexerTypes.TSPLine])
                                            LexerTypes.$fEqTSPpackage4
                                            a5
                                            b5 of wild6 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> case GHC.Classes.$fEq[]_$c==
                                                 @ (GHC.Base.String, [LexerTypes.PVSArgument],
                                                    LexerTypes.PVSType, LexerTypes.Expression)
                                                 LexerTypes.$fEqTSPpackage2
                                                 a6
                                                 b6 of wild7 {
                                            GHC.Types.False -> GHC.Types.False
                                            GHC.Types.True
                                            -> GHC.Classes.$fEq[]_$c==
                                                 @ (GHC.Base.String, LexerTypes.PVSType,
                                                    LexerTypes.Literal)
                                                 LexerTypes.$fEqTSPpackage1
                                                 a7
                                                 b7 } } } } } } } }) -}
4df2e074d05690b7f852eb8a56267ac6
  $fEqTemporal :: GHC.Classes.Eq LexerTypes.Temporal
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.Temporal
                  LexerTypes.$fEqTemporal_$c==
                  LexerTypes.$fEqTemporal_$c/= -}
4df2e074d05690b7f852eb8a56267ac6
  $fEqTemporal_$c/= ::
    LexerTypes.Temporal -> LexerTypes.Temporal -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)),1*U(1*U(U))><S(S(S)),1*U(1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.Temporal) (b :: LexerTypes.Temporal) ->
                 case a of wild { LexerTypes.N_Time a1 ->
                 case b of wild1 { LexerTypes.N_Time b1 ->
                 case a1 of wild2 { GHC.Types.I# x ->
                 case b1 of wild3 { GHC.Types.I# y ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# x y) of wild4 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } } } }) -}
4df2e074d05690b7f852eb8a56267ac6
  $fEqTemporal_$c== ::
    LexerTypes.Temporal -> LexerTypes.Temporal -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)),1*U(1*U(U))><S(S(S)),1*U(1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: LexerTypes.Temporal) (ds1 :: LexerTypes.Temporal) ->
                 case ds of wild { LexerTypes.N_Time a1 ->
                 case ds1 of wild1 { LexerTypes.N_Time b1 ->
                 GHC.Classes.eqInt a1 b1 } }) -}
f37fc1f7f628e396311833bcccc3658f
  $fEqTotalTree :: GHC.Classes.Eq LexerTypes.TotalTree
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.TotalTree
                  LexerTypes.$fEqTotalTree_$c==
                  LexerTypes.$fEqTotalTree_$c/= -}
f37fc1f7f628e396311833bcccc3658f
  $fEqTotalTree_$c/= ::
    LexerTypes.TotalTree -> LexerTypes.TotalTree -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.TotalTree) (b :: LexerTypes.TotalTree) ->
                 case LexerTypes.$fEqTotalTree_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
f37fc1f7f628e396311833bcccc3658f
  $fEqTotalTree_$c== ::
    LexerTypes.TotalTree -> LexerTypes.TotalTree -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
321d4bb033873a046e1650695f529c57
  $fEqTransitionTable :: GHC.Classes.Eq LexerTypes.TransitionTable
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.TransitionTable
                  LexerTypes.$fEqTransitionTable_$c==
                  LexerTypes.$fEqTransitionTable_$c/= -}
321d4bb033873a046e1650695f529c57
  $fEqTransitionTable_$c/= ::
    LexerTypes.TransitionTable
    -> LexerTypes.TransitionTable -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.TransitionTable)
                   (b :: LexerTypes.TransitionTable) ->
                 case LexerTypes.$fEqTransitionTable_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
321d4bb033873a046e1650695f529c57
  $fEqTransitionTable_$c== ::
    LexerTypes.TransitionTable
    -> LexerTypes.TransitionTable -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
48110a9cdd317f7d31f7d5382813e9a4
  $fEqTreeHeap :: GHC.Classes.Eq LexerTypes.TreeHeap
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.TreeHeap
                  LexerTypes.$fEqTreeHeap_$c==
                  LexerTypes.$fEqTreeHeap_$c/= -}
48110a9cdd317f7d31f7d5382813e9a4
  $fEqTreeHeap_$c/= ::
    LexerTypes.TreeHeap -> LexerTypes.TreeHeap -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.TreeHeap) (b :: LexerTypes.TreeHeap) ->
                 case LexerTypes.$fEqTreeHeap_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
48110a9cdd317f7d31f7d5382813e9a4
  $fEqTreeHeap_$c== ::
    LexerTypes.TreeHeap -> LexerTypes.TreeHeap -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: LexerTypes.TreeHeap) (w1 :: LexerTypes.TreeHeap) ->
                 case w of ww { LexerTypes.THeap ww1 ww2 ww3 ->
                 case w1 of ww4 { LexerTypes.THeap ww5 ww6 ww7 ->
                 LexerTypes.$w$c==3 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
4d08ca0e73729c67fbd812bf662e0e37
  $fEqUStatement :: GHC.Classes.Eq LexerTypes.UStatement
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.UStatement
                  LexerTypes.$fEqUStatement_$c==
                  LexerTypes.$fEqUStatement_$c/= -}
4d08ca0e73729c67fbd812bf662e0e37
  $fEqUStatement_$c/= ::
    LexerTypes.UStatement -> LexerTypes.UStatement -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.UStatement) (b :: LexerTypes.UStatement) ->
                 case LexerTypes.$fEqUStatement_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
4d08ca0e73729c67fbd812bf662e0e37
  $fEqUStatement_$c== ::
    LexerTypes.UStatement -> LexerTypes.UStatement -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.UStatement)
                   (ds1 :: LexerTypes.UStatement) ->
                 case ds of wild {
                   LexerTypes.DeclAssign a1 a2 a3
                   -> case ds1 of wild1 {
                        LexerTypes.DeclAssign b1 b2 b3
                        -> let {
                             $j :: GHC.Types.Bool <join 0>
                             = case GHC.Base.eqString a2 b2 of wild2 {
                                 GHC.Types.False -> GHC.Types.False
                                 GHC.Types.True -> LexerTypes.$fEqExpression_$c== a3 b3 }
                           } in
                           case a1 of wild2 {
                             LexerTypes.U_Int
                             -> case b1 of wild3 {
                                  LexerTypes.U_Int -> $j LexerTypes.U_String -> GHC.Types.False }
                             LexerTypes.U_String
                             -> case b1 of wild3 {
                                  LexerTypes.U_Int -> GHC.Types.False LexerTypes.U_String -> $j } }
                        LexerTypes.UAssign ipv ipv1 -> GHC.Types.False }
                   LexerTypes.UAssign a1 a2
                   -> case ds1 of wild1 {
                        LexerTypes.DeclAssign ipv ipv1 ipv2 -> GHC.Types.False
                        LexerTypes.UAssign b1 b2
                        -> case GHC.Base.eqString a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> LexerTypes.$fEqExpression_$c== a2 b2 } } }) -}
e4f1694534b5add5fe23c9bcaf082473
  $fEqUType :: GHC.Classes.Eq LexerTypes.UType
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.UType
                  LexerTypes.$fEqUType_$c==
                  LexerTypes.$fEqUType_$c/= -}
e4f1694534b5add5fe23c9bcaf082473
  $fEqUType_$c/= ::
    LexerTypes.UType -> LexerTypes.UType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.UType) (b :: LexerTypes.UType) ->
                 case a of wild {
                   LexerTypes.U_Int
                   -> case b of wild1 {
                        LexerTypes.U_Int -> GHC.Types.False
                        LexerTypes.U_String -> GHC.Types.True }
                   LexerTypes.U_String
                   -> case b of wild1 {
                        LexerTypes.U_Int -> GHC.Types.True
                        LexerTypes.U_String -> GHC.Types.False } }) -}
e4f1694534b5add5fe23c9bcaf082473
  $fEqUType_$c== ::
    LexerTypes.UType -> LexerTypes.UType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: LexerTypes.UType) (ds1 :: LexerTypes.UType) ->
                 case ds of wild {
                   LexerTypes.U_Int
                   -> case ds1 of wild1 {
                        LexerTypes.U_Int -> GHC.Types.True
                        LexerTypes.U_String -> GHC.Types.False }
                   LexerTypes.U_String
                   -> case ds1 of wild1 {
                        LexerTypes.U_Int -> GHC.Types.False
                        LexerTypes.U_String -> GHC.Types.True } }) -}
c2b979719dd3c7dfe36e1834bf38f676
  $fEqVectorInit :: GHC.Classes.Eq LexerTypes.VectorInit
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.VectorInit
                  LexerTypes.$fEqPVSstate_$c==1
                  LexerTypes.$fEqVectorInit_$c/= -}
c2b979719dd3c7dfe36e1834bf38f676
  $fEqVectorInit_$c/= ::
    LexerTypes.VectorInit -> LexerTypes.VectorInit -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.VectorInit) (b :: LexerTypes.VectorInit) ->
                 case LexerTypes.$fEqPVSstate_$c==1 a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
4a6fa266ef9464fb93f2d34d394bedde
  $fOrdBSVType :: GHC.Classes.Ord LexerTypes.BSVType
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.BSVType
                  LexerTypes.$fEqBSVType
                  LexerTypes.$fOrdBSVType_$ccompare
                  LexerTypes.$fOrdBSVType_$c<
                  LexerTypes.$fOrdBSVType_$c<=
                  LexerTypes.$fOrdBSVType_$c>
                  LexerTypes.$fOrdBSVType_$c>=
                  LexerTypes.$fOrdBSVType_$cmax
                  LexerTypes.$fOrdBSVType_$cmin -}
4a6fa266ef9464fb93f2d34d394bedde
  $fOrdBSVType_$c< ::
    LexerTypes.BSVType -> LexerTypes.BSVType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.BSVType) (y :: LexerTypes.BSVType) ->
                 case LexerTypes.$fOrdBSVType_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
4a6fa266ef9464fb93f2d34d394bedde
  $fOrdBSVType_$c<= ::
    LexerTypes.BSVType -> LexerTypes.BSVType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.BSVType) (y :: LexerTypes.BSVType) ->
                 case LexerTypes.$fOrdBSVType_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
4a6fa266ef9464fb93f2d34d394bedde
  $fOrdBSVType_$c> ::
    LexerTypes.BSVType -> LexerTypes.BSVType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.BSVType) (y :: LexerTypes.BSVType) ->
                 case LexerTypes.$fOrdBSVType_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
4a6fa266ef9464fb93f2d34d394bedde
  $fOrdBSVType_$c>= ::
    LexerTypes.BSVType -> LexerTypes.BSVType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.BSVType) (y :: LexerTypes.BSVType) ->
                 case LexerTypes.$fOrdBSVType_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
4a6fa266ef9464fb93f2d34d394bedde
  $fOrdBSVType_$ccompare ::
    LexerTypes.BSVType -> LexerTypes.BSVType -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
4a6fa266ef9464fb93f2d34d394bedde
  $fOrdBSVType_$cmax ::
    LexerTypes.BSVType -> LexerTypes.BSVType -> LexerTypes.BSVType
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.BSVType) (y :: LexerTypes.BSVType) ->
                 case LexerTypes.$fOrdBSVType_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
4a6fa266ef9464fb93f2d34d394bedde
  $fOrdBSVType_$cmin ::
    LexerTypes.BSVType -> LexerTypes.BSVType -> LexerTypes.BSVType
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.BSVType) (y :: LexerTypes.BSVType) ->
                 case LexerTypes.$fOrdBSVType_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdExpression :: GHC.Classes.Ord LexerTypes.Expression
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.Expression
                  LexerTypes.$fEqExpression
                  LexerTypes.$fOrdExpression_$ccompare
                  LexerTypes.$fOrdExpression_$c<
                  LexerTypes.$fOrdExpression_$c<=
                  LexerTypes.$fOrdExpression_$c>
                  LexerTypes.$fOrdExpression_$c>=
                  LexerTypes.$fOrdExpression_$cmax
                  LexerTypes.$fOrdExpression_$cmin -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdExpression_$c< ::
    LexerTypes.Expression -> LexerTypes.Expression -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.Expression) (y :: LexerTypes.Expression) ->
                 case LexerTypes.$fOrdExpression_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdExpression_$c<= ::
    LexerTypes.Expression -> LexerTypes.Expression -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.Expression) (y :: LexerTypes.Expression) ->
                 case LexerTypes.$fOrdExpression_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdExpression_$c> ::
    LexerTypes.Expression -> LexerTypes.Expression -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.Expression) (y :: LexerTypes.Expression) ->
                 case LexerTypes.$fOrdExpression_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdExpression_$c>= ::
    LexerTypes.Expression -> LexerTypes.Expression -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.Expression) (y :: LexerTypes.Expression) ->
                 case LexerTypes.$fOrdExpression_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdExpression_$ccompare ::
    LexerTypes.Expression
    -> LexerTypes.Expression -> GHC.Types.Ordering
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdExpression_$cmax ::
    LexerTypes.Expression
    -> LexerTypes.Expression -> LexerTypes.Expression
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.Expression) (y :: LexerTypes.Expression) ->
                 case LexerTypes.$fOrdExpression_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdExpression_$cmin ::
    LexerTypes.Expression
    -> LexerTypes.Expression -> LexerTypes.Expression
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.Expression) (y :: LexerTypes.Expression) ->
                 case LexerTypes.$fOrdExpression_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdID_Path :: GHC.Classes.Ord LexerTypes.ID_Path
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.ID_Path
                  LexerTypes.$fEqID_Path
                  LexerTypes.$fOrdID_Path_$ccompare
                  LexerTypes.$fOrdID_Path_$c<
                  LexerTypes.$fOrdID_Path_$c<=
                  LexerTypes.$fOrdID_Path_$c>
                  LexerTypes.$fOrdID_Path_$c>=
                  LexerTypes.$fOrdID_Path_$cmax
                  LexerTypes.$fOrdID_Path_$cmin -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdID_Path_$c< ::
    LexerTypes.ID_Path -> LexerTypes.ID_Path -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdID_Path_$c<= ::
    LexerTypes.ID_Path -> LexerTypes.ID_Path -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.ID_Path) (b :: LexerTypes.ID_Path) ->
                 case LexerTypes.$fOrdID_Path_$c< b a of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdID_Path_$c> ::
    LexerTypes.ID_Path -> LexerTypes.ID_Path -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: LexerTypes.ID_Path) (b :: LexerTypes.ID_Path) ->
                 LexerTypes.$fOrdID_Path_$c< b a) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdID_Path_$c>= ::
    LexerTypes.ID_Path -> LexerTypes.ID_Path -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.ID_Path) (b :: LexerTypes.ID_Path) ->
                 case LexerTypes.$fOrdID_Path_$c< a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdID_Path_$ccompare ::
    LexerTypes.ID_Path -> LexerTypes.ID_Path -> GHC.Types.Ordering
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdID_Path_$cmax ::
    LexerTypes.ID_Path -> LexerTypes.ID_Path -> LexerTypes.ID_Path
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.ID_Path) (y :: LexerTypes.ID_Path) ->
                 case LexerTypes.$fOrdID_Path_$c< y x of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdID_Path_$cmin ::
    LexerTypes.ID_Path -> LexerTypes.ID_Path -> LexerTypes.ID_Path
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.ID_Path) (y :: LexerTypes.ID_Path) ->
                 case LexerTypes.$fOrdID_Path_$c< y x of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
e03304d97e0d6aca513132b576af286a
  $fOrdLit :: GHC.Classes.Ord LexerTypes.Lit
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.Lit
                  LexerTypes.$fEqLit
                  LexerTypes.$fOrdLit_$ccompare
                  LexerTypes.$fOrdLit_$c<
                  LexerTypes.$fOrdLit_$c<=
                  LexerTypes.$fOrdLit_$c>
                  LexerTypes.$fOrdLit_$c>=
                  LexerTypes.$fOrdLit_$cmax
                  LexerTypes.$fOrdLit_$cmin -}
e03304d97e0d6aca513132b576af286a
  $fOrdLit_$c< :: LexerTypes.Lit -> LexerTypes.Lit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.Lit) (y :: LexerTypes.Lit) ->
                 case LexerTypes.$fOrdLit_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
e03304d97e0d6aca513132b576af286a
  $fOrdLit_$c<= :: LexerTypes.Lit -> LexerTypes.Lit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.Lit) (y :: LexerTypes.Lit) ->
                 case LexerTypes.$fOrdLit_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
e03304d97e0d6aca513132b576af286a
  $fOrdLit_$c> :: LexerTypes.Lit -> LexerTypes.Lit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.Lit) (y :: LexerTypes.Lit) ->
                 case LexerTypes.$fOrdLit_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
e03304d97e0d6aca513132b576af286a
  $fOrdLit_$c>= :: LexerTypes.Lit -> LexerTypes.Lit -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.Lit) (y :: LexerTypes.Lit) ->
                 case LexerTypes.$fOrdLit_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
e03304d97e0d6aca513132b576af286a
  $fOrdLit_$ccompare ::
    LexerTypes.Lit -> LexerTypes.Lit -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (a :: LexerTypes.Lit) (b :: LexerTypes.Lit) ->
                 case a of wild {
                   LexerTypes.LitString a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        LexerTypes.LitString b1 -> GHC.Classes.$fOrd[]_$s$ccompare1 a1 b1 }
                   LexerTypes.LitEnum a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        LexerTypes.LitString ds -> GHC.Types.GT
                        LexerTypes.LitEnum b1 -> GHC.Classes.$fOrd[]_$s$ccompare1 a1 b1 }
                   LexerTypes.LitInt a1
                   -> case GHC.Prim.dataToTag# @ LexerTypes.Lit b of b# { DEFAULT ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.># b# 2#) of wild1 {
                        GHC.Types.False
                        -> case b of wild2 {
                             DEFAULT -> GHC.Types.GT
                             LexerTypes.LitInt b1 -> GHC.Integer.Type.compareInteger a1 b1 }
                        GHC.Types.True -> GHC.Types.LT } }
                   LexerTypes.LitBool a1
                   -> case GHC.Prim.dataToTag# @ LexerTypes.Lit b of b# { DEFAULT ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.># b# 3#) of wild1 {
                        GHC.Types.False
                        -> case b of wild2 {
                             DEFAULT -> GHC.Types.GT
                             LexerTypes.LitBool b1 -> GHC.Classes.$fOrdBool_$ccompare a1 b1 }
                        GHC.Types.True -> GHC.Types.LT } }
                   LexerTypes.LitReal a1
                   -> case GHC.Prim.dataToTag# @ LexerTypes.Lit b of b# { DEFAULT ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.># b# 4#) of wild1 {
                        GHC.Types.False
                        -> case b of wild2 {
                             DEFAULT -> GHC.Types.GT
                             LexerTypes.LitReal b1 -> GHC.Classes.$fOrdFloat_$ccompare a1 b1 }
                        GHC.Types.True -> GHC.Types.LT } }
                   LexerTypes.LitChar a1
                   -> case GHC.Prim.dataToTag# @ LexerTypes.Lit b of b# { DEFAULT ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# b# 5#) of wild1 {
                        GHC.Types.False
                        -> case b of wild2 {
                             DEFAULT -> GHC.Types.LT
                             LexerTypes.LitChar b1 -> GHC.Classes.$fOrdChar_$ccompare a1 b1 }
                        GHC.Types.True -> GHC.Types.GT } }
                   LexerTypes.LitSizedInt a1 a2
                   -> case GHC.Prim.dataToTag# @ LexerTypes.Lit b of b# { DEFAULT ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<# b# 6#) of wild1 {
                        GHC.Types.False
                        -> case b of wild2 {
                             DEFAULT -> GHC.Types.LT
                             LexerTypes.LitSizedInt b1 b2
                             -> case GHC.Integer.Type.compareInteger a1 b1 of wild3 {
                                  GHC.Types.LT -> GHC.Types.LT
                                  GHC.Types.EQ -> GHC.Integer.Type.compareInteger a2 b2
                                  GHC.Types.GT -> GHC.Types.GT } }
                        GHC.Types.True -> GHC.Types.GT } }
                   LexerTypes.LitStructConstructor
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        LexerTypes.LitStructConstructor -> GHC.Types.EQ
                        LexerTypes.LitVoid -> GHC.Types.LT }
                   LexerTypes.LitVoid
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT LexerTypes.LitVoid -> GHC.Types.EQ } }) -}
e03304d97e0d6aca513132b576af286a
  $fOrdLit_$cmax ::
    LexerTypes.Lit -> LexerTypes.Lit -> LexerTypes.Lit
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.Lit) (y :: LexerTypes.Lit) ->
                 case LexerTypes.$fOrdLit_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
e03304d97e0d6aca513132b576af286a
  $fOrdLit_$cmin ::
    LexerTypes.Lit -> LexerTypes.Lit -> LexerTypes.Lit
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.Lit) (y :: LexerTypes.Lit) ->
                 case LexerTypes.$fOrdLit_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeIDTag :: GHC.Classes.Ord LexerTypes.MaybeIDTag
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.MaybeIDTag
                  LexerTypes.$fEqMaybeIDTag
                  LexerTypes.$fOrdMaybeIDTag_$ccompare
                  LexerTypes.$fOrdMaybeIDTag_$c<
                  LexerTypes.$fOrdMaybeIDTag_$c<=
                  LexerTypes.$fOrdMaybeIDTag_$c>
                  LexerTypes.$fOrdMaybeIDTag_$c>=
                  LexerTypes.$fOrdMaybeIDTag_$cmax
                  LexerTypes.$fOrdMaybeIDTag_$cmin -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeIDTag_$c< ::
    LexerTypes.MaybeIDTag -> LexerTypes.MaybeIDTag -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.MaybeIDTag) (b :: LexerTypes.MaybeIDTag) ->
                 case a of wild {
                   LexerTypes.ValidID a1
                   -> case b of wild1 {
                        LexerTypes.ValidID b1 -> LexerTypes.$fOrdID_Path_$c< a1 b1
                        LexerTypes.InvalidID -> GHC.Types.True }
                   LexerTypes.InvalidID
                   -> case b of wild1 { DEFAULT -> GHC.Types.False } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeIDTag_$c<= ::
    LexerTypes.MaybeIDTag -> LexerTypes.MaybeIDTag -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: LexerTypes.MaybeIDTag)
                   (b :: LexerTypes.MaybeIDTag) ->
                 case b of wild {
                   LexerTypes.ValidID a1
                   -> case a of wild1 {
                        LexerTypes.ValidID b1
                        -> case LexerTypes.$fOrdID_Path_$c< a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False }
                        LexerTypes.InvalidID -> GHC.Types.False }
                   LexerTypes.InvalidID
                   -> case a of wild1 { DEFAULT -> GHC.Types.True } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeIDTag_$c> ::
    LexerTypes.MaybeIDTag -> LexerTypes.MaybeIDTag -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: LexerTypes.MaybeIDTag) (b :: LexerTypes.MaybeIDTag) ->
                 LexerTypes.$fOrdMaybeIDTag_$c< b a) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeIDTag_$c>= ::
    LexerTypes.MaybeIDTag -> LexerTypes.MaybeIDTag -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: LexerTypes.MaybeIDTag)
                   (b :: LexerTypes.MaybeIDTag) ->
                 case a of wild {
                   LexerTypes.ValidID a1
                   -> case b of wild1 {
                        LexerTypes.ValidID b1
                        -> case LexerTypes.$fOrdID_Path_$c< a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False }
                        LexerTypes.InvalidID -> GHC.Types.False }
                   LexerTypes.InvalidID
                   -> case b of wild1 { DEFAULT -> GHC.Types.True } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeIDTag_$ccompare ::
    LexerTypes.MaybeIDTag
    -> LexerTypes.MaybeIDTag -> GHC.Types.Ordering
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: LexerTypes.MaybeIDTag) (b :: LexerTypes.MaybeIDTag) ->
                 case a of wild {
                   LexerTypes.ValidID a1
                   -> case b of wild1 {
                        LexerTypes.ValidID b1 -> LexerTypes.$fOrdID_Path_$ccompare a1 b1
                        LexerTypes.InvalidID -> GHC.Types.LT }
                   LexerTypes.InvalidID
                   -> case b of wild1 {
                        LexerTypes.ValidID ipv -> GHC.Types.GT
                        LexerTypes.InvalidID -> GHC.Types.EQ } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeIDTag_$cmax ::
    LexerTypes.MaybeIDTag
    -> LexerTypes.MaybeIDTag -> LexerTypes.MaybeIDTag
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: LexerTypes.MaybeIDTag)
                   (y :: LexerTypes.MaybeIDTag) ->
                 case y of wild {
                   LexerTypes.ValidID a1
                   -> case x of wild1 {
                        LexerTypes.ValidID b1
                        -> case LexerTypes.$fOrdID_Path_$c< a1 b1 of wild2 {
                             GHC.Types.False -> wild GHC.Types.True -> wild1 }
                        LexerTypes.InvalidID -> LexerTypes.InvalidID }
                   LexerTypes.InvalidID
                   -> case x of wild1 { DEFAULT -> LexerTypes.InvalidID } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeIDTag_$cmin ::
    LexerTypes.MaybeIDTag
    -> LexerTypes.MaybeIDTag -> LexerTypes.MaybeIDTag
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.MaybeIDTag) (y :: LexerTypes.MaybeIDTag) ->
                 case y of wild {
                   LexerTypes.ValidID a1
                   -> case x of wild1 {
                        LexerTypes.ValidID b1
                        -> case LexerTypes.$fOrdID_Path_$c< a1 b1 of wild2 {
                             GHC.Types.False -> wild1 GHC.Types.True -> wild }
                        LexerTypes.InvalidID -> wild }
                   LexerTypes.InvalidID -> x }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeTag :: GHC.Classes.Ord LexerTypes.MaybeTag
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.MaybeTag
                  LexerTypes.$fEqMaybeTag
                  LexerTypes.$fOrdMaybeTag_$ccompare
                  LexerTypes.$fOrdMaybeTag_$c<
                  LexerTypes.$fOrdMaybeTag_$c<=
                  LexerTypes.$fOrdMaybeTag_$c>
                  LexerTypes.$fOrdMaybeTag_$c>=
                  LexerTypes.$fOrdMaybeTag_$cmax
                  LexerTypes.$fOrdMaybeTag_$cmin -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeTag_$c< ::
    LexerTypes.MaybeTag -> LexerTypes.MaybeTag -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: LexerTypes.MaybeTag)
                   (b :: LexerTypes.MaybeTag) ->
                 case a of wild {
                   LexerTypes.Valid a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        LexerTypes.Valid b1 -> LexerTypes.$fOrdExpression_$c< a1 b1 }
                   LexerTypes.Invalid
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.MaybeContainer ipv -> GHC.Types.True }
                   LexerTypes.MaybeContainer a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.MaybeContainer b1
                        -> LexerTypes.$fOrdExpression_$c< a1 b1 } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeTag_$c<= ::
    LexerTypes.MaybeTag -> LexerTypes.MaybeTag -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: LexerTypes.MaybeTag)
                   (b :: LexerTypes.MaybeTag) ->
                 case b of wild {
                   LexerTypes.Valid a1
                   -> case a of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Valid b1
                        -> case LexerTypes.$fOrdExpression_$ccompare a1 b1 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } }
                   LexerTypes.Invalid
                   -> case a of wild1 {
                        DEFAULT -> GHC.Types.True
                        LexerTypes.MaybeContainer ipv -> GHC.Types.False }
                   LexerTypes.MaybeContainer a1
                   -> case a of wild1 {
                        DEFAULT -> GHC.Types.True
                        LexerTypes.MaybeContainer b1
                        -> case LexerTypes.$fOrdExpression_$ccompare a1 b1 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeTag_$c> ::
    LexerTypes.MaybeTag -> LexerTypes.MaybeTag -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, True)
                (\ (a :: LexerTypes.MaybeTag) (b :: LexerTypes.MaybeTag) ->
                 LexerTypes.$fOrdMaybeTag_$c< b a) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeTag_$c>= ::
    LexerTypes.MaybeTag -> LexerTypes.MaybeTag -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: LexerTypes.MaybeTag)
                   (b :: LexerTypes.MaybeTag) ->
                 case a of wild {
                   LexerTypes.Valid a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Valid b1
                        -> case LexerTypes.$fOrdExpression_$ccompare a1 b1 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } }
                   LexerTypes.Invalid
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        LexerTypes.MaybeContainer ipv -> GHC.Types.False }
                   LexerTypes.MaybeContainer a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        LexerTypes.MaybeContainer b1
                        -> case LexerTypes.$fOrdExpression_$ccompare a1 b1 of wild2 {
                             DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False } } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeTag_$ccompare ::
    LexerTypes.MaybeTag -> LexerTypes.MaybeTag -> GHC.Types.Ordering
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: LexerTypes.MaybeTag)
                   (b :: LexerTypes.MaybeTag) ->
                 case a of wild {
                   LexerTypes.Valid a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.LT
                        LexerTypes.Valid b1 -> LexerTypes.$fOrdExpression_$ccompare a1 b1 }
                   LexerTypes.Invalid
                   -> case b of wild1 {
                        LexerTypes.Valid ds -> GHC.Types.GT
                        LexerTypes.Invalid -> GHC.Types.EQ
                        LexerTypes.MaybeContainer ipv -> GHC.Types.LT }
                   LexerTypes.MaybeContainer a1
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.GT
                        LexerTypes.MaybeContainer b1
                        -> LexerTypes.$fOrdExpression_$ccompare a1 b1 } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeTag_$cmax ::
    LexerTypes.MaybeTag -> LexerTypes.MaybeTag -> LexerTypes.MaybeTag
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: LexerTypes.MaybeTag)
                   (y :: LexerTypes.MaybeTag) ->
                 case y of wild {
                   LexerTypes.Valid a1
                   -> case x of wild1 {
                        DEFAULT -> wild1
                        LexerTypes.Valid b1
                        -> case LexerTypes.$fOrdExpression_$ccompare a1 b1 of wild2 {
                             DEFAULT -> wild GHC.Types.LT -> wild1 } }
                   LexerTypes.Invalid
                   -> case x of wild1 {
                        DEFAULT -> LexerTypes.Invalid
                        LexerTypes.MaybeContainer ipv -> wild1 }
                   LexerTypes.MaybeContainer a1
                   -> case x of wild1 {
                        DEFAULT -> wild
                        LexerTypes.MaybeContainer b1
                        -> case LexerTypes.$fOrdExpression_$ccompare a1 b1 of wild2 {
                             DEFAULT -> wild GHC.Types.LT -> wild1 } } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fOrdMaybeTag_$cmin ::
    LexerTypes.MaybeTag -> LexerTypes.MaybeTag -> LexerTypes.MaybeTag
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: LexerTypes.MaybeTag)
                   (y :: LexerTypes.MaybeTag) ->
                 case y of wild {
                   LexerTypes.Valid a1
                   -> case x of wild1 {
                        DEFAULT -> wild
                        LexerTypes.Valid b1
                        -> case LexerTypes.$fOrdExpression_$ccompare a1 b1 of wild2 {
                             DEFAULT -> wild1 GHC.Types.LT -> wild } }
                   LexerTypes.Invalid
                   -> case x of wild1 {
                        DEFAULT -> wild1
                        LexerTypes.MaybeContainer ipv -> LexerTypes.Invalid }
                   LexerTypes.MaybeContainer a1
                   -> case x of wild1 {
                        DEFAULT -> wild1
                        LexerTypes.MaybeContainer b1
                        -> case LexerTypes.$fOrdExpression_$ccompare a1 b1 of wild2 {
                             DEFAULT -> wild1 GHC.Types.LT -> wild } } }) -}
5293579e9cbbf6986dcf46fee97434cb
  $fOrdPVSType :: GHC.Classes.Ord LexerTypes.PVSType
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.PVSType
                  LexerTypes.$fEqPVSType
                  LexerTypes.$fOrdPVSType_$ccompare
                  LexerTypes.$fOrdPVSType_$c<
                  LexerTypes.$fOrdPVSType_$c<=
                  LexerTypes.$fOrdPVSType_$c>
                  LexerTypes.$fOrdPVSType_$c>=
                  LexerTypes.$fOrdPVSType_$cmax
                  LexerTypes.$fOrdPVSType_$cmin -}
5293579e9cbbf6986dcf46fee97434cb
  $fOrdPVSType_$c< ::
    LexerTypes.PVSType -> LexerTypes.PVSType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.PVSType) (y :: LexerTypes.PVSType) ->
                 case LexerTypes.$fOrdPVSType_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
5293579e9cbbf6986dcf46fee97434cb
  $fOrdPVSType_$c<= ::
    LexerTypes.PVSType -> LexerTypes.PVSType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.PVSType) (y :: LexerTypes.PVSType) ->
                 case LexerTypes.$fOrdPVSType_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
5293579e9cbbf6986dcf46fee97434cb
  $fOrdPVSType_$c> ::
    LexerTypes.PVSType -> LexerTypes.PVSType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.PVSType) (y :: LexerTypes.PVSType) ->
                 case LexerTypes.$fOrdPVSType_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
5293579e9cbbf6986dcf46fee97434cb
  $fOrdPVSType_$c>= ::
    LexerTypes.PVSType -> LexerTypes.PVSType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.PVSType) (y :: LexerTypes.PVSType) ->
                 case LexerTypes.$fOrdPVSType_$ccompare x y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
5293579e9cbbf6986dcf46fee97434cb
  $fOrdPVSType_$ccompare ::
    LexerTypes.PVSType -> LexerTypes.PVSType -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
5293579e9cbbf6986dcf46fee97434cb
  $fOrdPVSType_$cmax ::
    LexerTypes.PVSType -> LexerTypes.PVSType -> LexerTypes.PVSType
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.PVSType) (y :: LexerTypes.PVSType) ->
                 case LexerTypes.$fOrdPVSType_$ccompare x y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
5293579e9cbbf6986dcf46fee97434cb
  $fOrdPVSType_$cmin ::
    LexerTypes.PVSType -> LexerTypes.PVSType -> LexerTypes.PVSType
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.PVSType) (y :: LexerTypes.PVSType) ->
                 case LexerTypes.$fOrdPVSType_$ccompare x y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
826bf9b3273fb2f15950fa50da194ba0
  $fShowActionAttribute :: GHC.Show.Show LexerTypes.ActionAttribute
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.ActionAttribute
                  LexerTypes.$fShowActionAttribute_$cshowsPrec
                  LexerTypes.$fShowActionAttribute_$cshow
                  LexerTypes.$fShowActionAttribute_$cshowList -}
826bf9b3273fb2f15950fa50da194ba0
  $fShowActionAttribute1 ::
    LexerTypes.ActionAttribute -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U)><L,U>,
     Unfolding: (\ (w :: LexerTypes.ActionAttribute)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { LexerTypes.Act_Doc ww1 ->
                 LexerTypes.$w$cshowsPrec 0# ww1 w1 }) -}
3db52753abcc7d2973dcac05897d8a46
  $fShowActionAttribute2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Act_Doc "#) -}
7df5cdc4f805b03e1c989c04ffc41a9f
  $fShowActionAttribute3 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   (GHC.Types.[] @ GHC.Types.Char)) -}
826bf9b3273fb2f15950fa50da194ba0
  $fShowActionAttribute_$cshow ::
    LexerTypes.ActionAttribute -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: LexerTypes.ActionAttribute) ->
                 case w of ww { LexerTypes.Act_Doc ww1 ->
                 LexerTypes.$w$cshow ww1 }) -}
826bf9b3273fb2f15950fa50da194ba0
  $fShowActionAttribute_$cshowList ::
    [LexerTypes.ActionAttribute] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.ActionAttribute
                   LexerTypes.$fShowActionAttribute1) -}
826bf9b3273fb2f15950fa50da194ba0
  $fShowActionAttribute_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.ActionAttribute -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LexerTypes.ActionAttribute)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { LexerTypes.Act_Doc ww3 ->
                 LexerTypes.$w$cshowsPrec ww1 ww3 w2 } }) -}
75d03845d9b5153ed1f38098fefa25af
  $fShowActionPath :: GHC.Show.Show LexerTypes.ActionPath
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.ActionPath
                  LexerTypes.$fShowActionPath_$cshowsPrec
                  LexerTypes.$fShowActionPath_$cshow
                  LexerTypes.$fShowActionPath_$cshowList -}
75d03845d9b5153ed1f38098fefa25af
  $fShowActionPath1 ::
    LexerTypes.ActionPath -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.ActionPath) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowActionPath_$cshow x))
                   s) -}
75d03845d9b5153ed1f38098fefa25af
  $fShowActionPath_$cshow :: LexerTypes.ActionPath -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
75d03845d9b5153ed1f38098fefa25af
  $fShowActionPath_$cshowList ::
    [LexerTypes.ActionPath] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [LexerTypes.ActionPath]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ LexerTypes.ActionPath
                   LexerTypes.$fShowActionPath1
                   ls
                   s) -}
75d03845d9b5153ed1f38098fefa25af
  $fShowActionPath_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.ActionPath -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: LexerTypes.ActionPath)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowActionPath_$cshow x))
                   s) -}
9843a91dd1e7fc3f97d724b817ded62a
  $fShowArgumentAttribute ::
    GHC.Show.Show LexerTypes.ArgumentAttribute
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.ArgumentAttribute
                  LexerTypes.$fShowArgumentAttribute_$cshowsPrec
                  LexerTypes.$fShowArgumentAttribute_$cshow
                  LexerTypes.$fShowArgumentAttribute_$cshowList -}
9843a91dd1e7fc3f97d724b817ded62a
  $fShowArgumentAttribute1 ::
    LexerTypes.ArgumentAttribute -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (LexerTypes.$fShowArgumentAttribute_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2) -}
289d33f260884c67e321e961265282cf
  $fShowArgumentAttribute10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Arg_Result "#) -}
fd566a4fdf053261f6012a8da44a4498
  $fShowArgumentAttribute11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Arg_Enable "#) -}
c1d79a7ef36300791c4ca0f5461ddbe6
  $fShowArgumentAttribute12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Arg_Ready "#) -}
444dc2ff4cef12e26f6de437323eba22
  $fShowArgumentAttribute2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
5fe483665b3f963bbee2063e83afec62
  $fShowArgumentAttribute3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Arg_Doc "#) -}
5c6eda0f5b50369472001bfc8ededbb4
  $fShowArgumentAttribute4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowArgumentAttribute5) -}
04ee8b7608e1bbc59f926128a2d3dfc8
  $fShowArgumentAttribute5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Arg_Always_Enabled"#) -}
ede70375f341c346b7f2a267ff863621
  $fShowArgumentAttribute6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowArgumentAttribute7) -}
909f843b268d9f0363859a7182533afa
  $fShowArgumentAttribute7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Arg_Always_Ready"#) -}
20ebe4fa41772f36a884b654b90e9793
  $fShowArgumentAttribute8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Arg_Port "#) -}
fba13ff01dadaaf172a4f6575b5e2e9b
  $fShowArgumentAttribute9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Arg_Prefix "#) -}
9843a91dd1e7fc3f97d724b817ded62a
  $fShowArgumentAttribute_$cshow ::
    LexerTypes.ArgumentAttribute -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: LexerTypes.ArgumentAttribute) ->
                 case x of wild {
                   LexerTypes.Arg_Ready b1
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowArgumentAttribute12
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString b1 LexerTypes.$fShowActionAttribute3))
                   LexerTypes.Arg_Enable b1
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowArgumentAttribute11
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString b1 LexerTypes.$fShowActionAttribute3))
                   LexerTypes.Arg_Result b1
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowArgumentAttribute10
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString b1 LexerTypes.$fShowActionAttribute3))
                   LexerTypes.Arg_Prefix b1
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowArgumentAttribute9
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString b1 LexerTypes.$fShowActionAttribute3))
                   LexerTypes.Arg_Port b1
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowArgumentAttribute8
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString b1 LexerTypes.$fShowActionAttribute3))
                   LexerTypes.Arg_Always_Ready -> LexerTypes.$fShowArgumentAttribute6
                   LexerTypes.Arg_Always_Enabled
                   -> LexerTypes.$fShowArgumentAttribute4
                   LexerTypes.Arg_Doc b1
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowArgumentAttribute3
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString
                              b1
                              LexerTypes.$fShowActionAttribute3)) }) -}
9843a91dd1e7fc3f97d724b817ded62a
  $fShowArgumentAttribute_$cshowList ::
    [LexerTypes.ArgumentAttribute] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.ArgumentAttribute
                   LexerTypes.$fShowArgumentAttribute1) -}
9843a91dd1e7fc3f97d724b817ded62a
  $fShowArgumentAttribute_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.ArgumentAttribute -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
150b9413fc0ca585963b402f9a2b8cb8
  $fShowBSVMacro :: GHC.Show.Show LexerTypes.BSVMacro
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.BSVMacro
                  LexerTypes.$fShowBSVMacro_$cshowsPrec
                  LexerTypes.$fShowBSVMacro_$cshow
                  LexerTypes.$fShowBSVMacro_$cshowList -}
150b9413fc0ca585963b402f9a2b8cb8
  $fShowBSVMacro1 :: LexerTypes.BSVMacro -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: LexerTypes.BSVMacro) (w1 :: GHC.Base.String) ->
                 LexerTypes.$w$cshowsPrec1 0# w w1) -}
150b9413fc0ca585963b402f9a2b8cb8
  $fShowBSVMacro_$cshow :: LexerTypes.BSVMacro -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.BSVMacro) ->
                 LexerTypes.$fShowBSVMacro_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
150b9413fc0ca585963b402f9a2b8cb8
  $fShowBSVMacro_$cshowList ::
    [LexerTypes.BSVMacro] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.BSVMacro
                   LexerTypes.$fShowBSVMacro1) -}
150b9413fc0ca585963b402f9a2b8cb8
  $fShowBSVMacro_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.BSVMacro -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LexerTypes.BSVMacro)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 LexerTypes.$w$cshowsPrec1 ww1 w1 w2 }) -}
6a9e148802acadaa54114400a09553a4
  $fShowBSVModuleDec :: GHC.Show.Show LexerTypes.BSVModuleDec
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.BSVModuleDec
                  LexerTypes.$fShowBSVModuleDec_$cshowsPrec
                  LexerTypes.$fShowBSVModuleDec_$cshow
                  LexerTypes.$fShowBSVModuleDec_$cshowList -}
6a9e148802acadaa54114400a09553a4
  $fShowBSVModuleDec1 ::
    LexerTypes.BSVModuleDec -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <L,U(U,U,U,U,A,A,A,U,U,U)><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.BSVModuleDec)
                   (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowBSVModuleDec_$cshow x))
                   s) -}
6a9e148802acadaa54114400a09553a4
  $fShowBSVModuleDec_$cshow ::
    LexerTypes.BSVModuleDec -> GHC.Base.String
  {- Arity: 1,
     Strictness: <L,U(1*U,1*U,1*U,1*U,A,A,A,1*U,1*U,1*U)> -}
6a9e148802acadaa54114400a09553a4
  $fShowBSVModuleDec_$cshowList ::
    [LexerTypes.BSVModuleDec] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [LexerTypes.BSVModuleDec]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ LexerTypes.BSVModuleDec
                   LexerTypes.$fShowBSVModuleDec1
                   ls
                   s) -}
6a9e148802acadaa54114400a09553a4
  $fShowBSVModuleDec_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.BSVModuleDec -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><L,U(U,U,U,U,A,A,A,U,U,U)><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: LexerTypes.BSVModuleDec)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowBSVModuleDec_$cshow x))
                   s) -}
dca7bfb1a37746d89b662b651361e667
  $fShowBSVPackage :: GHC.Show.Show LexerTypes.BSVPackage
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.BSVPackage
                  LexerTypes.$fShowBSVPackage_$cshowsPrec
                  LexerTypes.$fShowBSVPackage_$cshow
                  LexerTypes.$fShowBSVPackage_$cshowList -}
dca7bfb1a37746d89b662b651361e667
  $fShowBSVPackage1 :: LexerTypes.BSVPackage -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (LexerTypes.$fShowBSVPackage_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2) -}
dca7bfb1a37746d89b662b651361e667
  $fShowBSVPackage_$cshow :: LexerTypes.BSVPackage -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.BSVPackage) ->
                 LexerTypes.$fShowBSVPackage_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
dca7bfb1a37746d89b662b651361e667
  $fShowBSVPackage_$cshowList ::
    [LexerTypes.BSVPackage] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.BSVPackage
                   LexerTypes.$fShowBSVPackage1) -}
dca7bfb1a37746d89b662b651361e667
  $fShowBSVPackage_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.BSVPackage -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)><L,U> -}
4a6fa266ef9464fb93f2d34d394bedde
  $fShowBSVType :: GHC.Show.Show LexerTypes.BSVType
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.BSVType
                  LexerTypes.$fShowBSVType_$cshowsPrec
                  LexerTypes.$fShowBSVType_$cshow
                  LexerTypes.$fShowBSVType_$cshowList -}
4a6fa266ef9464fb93f2d34d394bedde
  $fShowBSVType1 :: LexerTypes.BSVType -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (LexerTypes.$fShowBSVType_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2) -}
8e4fa46f3b3e0dfb841487fd74787a36
  $fShowBSVTypeDef :: GHC.Show.Show LexerTypes.BSVTypeDef
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.BSVTypeDef
                  LexerTypes.$fShowBSVTypeDef_$cshowsPrec
                  LexerTypes.$fShowBSVTypeDef_$cshow
                  LexerTypes.$fShowBSVTypeDef_$cshowList -}
8e4fa46f3b3e0dfb841487fd74787a36
  $fShowBSVTypeDef1 :: LexerTypes.BSVTypeDef -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: LexerTypes.BSVTypeDef)
                   (w1 :: GHC.Base.String) ->
                 LexerTypes.$w$cshowsPrec2 0# w w1) -}
8e4fa46f3b3e0dfb841487fd74787a36
  $fShowBSVTypeDef_$cshow :: LexerTypes.BSVTypeDef -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.BSVTypeDef) ->
                 LexerTypes.$fShowBSVTypeDef_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8e4fa46f3b3e0dfb841487fd74787a36
  $fShowBSVTypeDef_$cshowList ::
    [LexerTypes.BSVTypeDef] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.BSVTypeDef
                   LexerTypes.$fShowBSVTypeDef1) -}
8e4fa46f3b3e0dfb841487fd74787a36
  $fShowBSVTypeDef_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.BSVTypeDef -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LexerTypes.BSVTypeDef)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 LexerTypes.$w$cshowsPrec2 ww1 w1 w2 }) -}
4a6fa266ef9464fb93f2d34d394bedde
  $fShowBSVType_$cshow :: LexerTypes.BSVType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.BSVType) ->
                 LexerTypes.$fShowBSVType_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4a6fa266ef9464fb93f2d34d394bedde
  $fShowBSVType_$cshowList :: [LexerTypes.BSVType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.BSVType
                   LexerTypes.$fShowBSVType1) -}
4a6fa266ef9464fb93f2d34d394bedde
  $fShowBSVType_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.BSVType -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
8c52b7703dbf130a1d71c377ab4031f7
  $fShowBSVstateDec :: GHC.Show.Show LexerTypes.BSVstateDec
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.BSVstateDec
                  LexerTypes.$fShowBSVstateDec_$cshowsPrec
                  LexerTypes.$fShowBSVstateDec_$cshow
                  LexerTypes.$fShowBSVstateDec_$cshowList -}
8c52b7703dbf130a1d71c377ab4031f7
  $fShowBSVstateDec1 :: LexerTypes.BSVstateDec -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (w :: LexerTypes.BSVstateDec) ->
                 LexerTypes.$w$cshowsPrec3 0# w) -}
8c52b7703dbf130a1d71c377ab4031f7
  $fShowBSVstateDec_$cshow ::
    LexerTypes.BSVstateDec -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.BSVstateDec) ->
                 LexerTypes.$fShowBSVstateDec_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8c52b7703dbf130a1d71c377ab4031f7
  $fShowBSVstateDec_$cshowList ::
    [LexerTypes.BSVstateDec] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.BSVstateDec
                   LexerTypes.$fShowBSVstateDec1) -}
8c52b7703dbf130a1d71c377ab4031f7
  $fShowBSVstateDec_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.BSVstateDec -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: LexerTypes.BSVstateDec) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 LexerTypes.$w$cshowsPrec3 ww1 w1 }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowExpression :: GHC.Show.Show LexerTypes.Expression
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.Expression
                  LexerTypes.$fShowExpression_$cshowsPrec
                  LexerTypes.$fShowExpression_$cshow
                  LexerTypes.$fShowExpression_$cshowList -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowExpression1 :: LexerTypes.Expression -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (LexerTypes.$fShowExpression_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowExpression_$cshow :: LexerTypes.Expression -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.Expression) ->
                 LexerTypes.$fShowExpression_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowExpression_$cshowList ::
    [LexerTypes.Expression] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.Expression
                   LexerTypes.$fShowExpression1) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowExpression_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.Expression -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U> -}
62d32f60bf0117d657237a0b1409daa5
  $fShowFifoType :: GHC.Show.Show LexerTypes.FifoType
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.FifoType
                  LexerTypes.$fShowFifoType_$cshowsPrec
                  LexerTypes.$fShowFifoType_$cshow
                  LexerTypes.$fShowFifoType_$cshowList -}
62d32f60bf0117d657237a0b1409daa5
  $fShowFifoType1 :: LexerTypes.FifoType -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (LexerTypes.$fShowFifoType_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2) -}
15de87f3d537f99931e216cdd5bbcbae
  $fShowFifoType10 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   LexerTypes.$fShowFifoType11) -}
6a1108ba4e46ded95d700a7c96b1d55c
  $fShowFifoType11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowFifoType12) -}
5c9dd71856ed248de7c5881d913061c6
  $fShowFifoType12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PipelineFIFOF"#) -}
80e1434917e8a6cb32669e018a553688
  $fShowFifoType13 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   LexerTypes.$fShowFifoType14) -}
ba1a76af4289e7437ca18854f970b197
  $fShowFifoType14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowFifoType15) -}
e0237e222aee9d6c783f3aac419d0e35
  $fShowFifoType15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PipelineFIFO"#) -}
f2973305a5f1938029a69f3a7e70f508
  $fShowFifoType16 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   LexerTypes.$fShowFifoType17) -}
c4eb88370b735426373ed9d14954c92e
  $fShowFifoType17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowFifoType18) -}
6a8ca5ff6e6c92be4e3e2c8bf5d6bfa2
  $fShowFifoType18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LFIFOF"#) -}
c8478fa6dcb63934da5ac66f64147d21
  $fShowFifoType19 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   LexerTypes.$fShowFifoType20) -}
8baee3233c09a10ba57faaca6164422e
  $fShowFifoType2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowFifoType3) -}
66d0dbe02eb50a4207e116f9b8a550e3
  $fShowFifoType20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowFifoType21) -}
54d8d9b100a9a954e232e4288df4845e
  $fShowFifoType21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LFIFO"#) -}
02bdeb1aad0725c9701df5a8d90c72a9
  $fShowFifoType22 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   LexerTypes.$fShowFifoType23) -}
a78e250045835542b729b5400e5bdee8
  $fShowFifoType23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowFifoType24) -}
5f775ba62b2629d51dd71fa64749172c
  $fShowFifoType24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FIFOF1"#) -}
97ad97e4c99859b7e8cfcf05c1b716b7
  $fShowFifoType25 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   LexerTypes.$fShowFifoType26) -}
00c8e1a86c214bac77e260b3cca19e8f
  $fShowFifoType26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowFifoType27) -}
2d4baf19b2d040d7f1f4e874bd50a149
  $fShowFifoType27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FIFO1"#) -}
3ce550ef7e432c54e2c3d12f50e8a75d
  $fShowFifoType28 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   LexerTypes.$fShowFifoType29) -}
7aba2ac216992b52397783bf8cc2eab8
  $fShowFifoType29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowFifoType30) -}
d12c3a48b4c74fa4091151df8e4017e6
  $fShowFifoType3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SizedBypassFIFOF "#) -}
4920ade06b76bc5eb8371237a28148ae
  $fShowFifoType30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DepthParamFIFO"#) -}
4692babf524ccd3295a19ab1759987a6
  $fShowFifoType31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowFifoType32) -}
09b10809851814193d994844bdaa6d0a
  $fShowFifoType32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SizedFIFOF "#) -}
8c1c8df92755373d43e95040c2f6574a
  $fShowFifoType33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowFifoType34) -}
2a2d5dfaaf402d041cb374346df16dba
  $fShowFifoType34 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SizedFIFO "#) -}
3064467c42ca9070d2cabc8aabee9263
  $fShowFifoType35 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
f0a15471046deef3714e5e2092b6406c
  $fShowFifoType36 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   LexerTypes.$fShowFifoType37) -}
f33f6e0ccce9836054a36053975f3015
  $fShowFifoType37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowFifoType38) -}
6f3550ce8f0e3593b47543315e5c935e
  $fShowFifoType38 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FIFOF"#) -}
7ad0cbc507f89de4b0672c320c6bf7f7
  $fShowFifoType39 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   LexerTypes.$fShowFifoType40) -}
b40f2a939ced893ab0b24b8bc2f0205f
  $fShowFifoType4 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   LexerTypes.$fShowFifoType5) -}
a0463e49bf326365cc332d5b7456bb0d
  $fShowFifoType40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowFifoType41) -}
5c700d690c1786176e709c9a0b751699
  $fShowFifoType41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FIFO"#) -}
99dc8149c23c8160576a00b1b9727e39
  $fShowFifoType5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowFifoType6) -}
93bbb979a8a3bf484d316b2872036164
  $fShowFifoType6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BypassFIFOF"#) -}
fc169e2e90553f7f01cee9bd1f22a1c0
  $fShowFifoType7 :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   LexerTypes.$fShowFifoType8) -}
a0c48418bf82e34fc08d31cccd1908d8
  $fShowFifoType8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowFifoType9) -}
259c5ab4d2460afaae83836fd0c21223
  $fShowFifoType9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BypassFIFO"#) -}
62d32f60bf0117d657237a0b1409daa5
  $fShowFifoType_$cshow :: LexerTypes.FifoType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: LexerTypes.FifoType) ->
                 case x of wild {
                   LexerTypes.FIFO -> LexerTypes.$fShowFifoType40
                   LexerTypes.FIFOF -> LexerTypes.$fShowFifoType37
                   LexerTypes.SizedFIFO b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        LexerTypes.$fShowFifoType33
                        (LexerTypes.$fShowExpression_$cshowsPrec
                           LexerTypes.$fShowFifoType35
                           b1
                           (GHC.Types.[] @ GHC.Types.Char))
                   LexerTypes.SizedFIFOF b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        LexerTypes.$fShowFifoType31
                        (LexerTypes.$fShowExpression_$cshowsPrec
                           LexerTypes.$fShowFifoType35
                           b1
                           (GHC.Types.[] @ GHC.Types.Char))
                   LexerTypes.DepthParamFIFO -> LexerTypes.$fShowFifoType29
                   LexerTypes.FIFO1 -> LexerTypes.$fShowFifoType26
                   LexerTypes.FIFOF1 -> LexerTypes.$fShowFifoType23
                   LexerTypes.LFIFO -> LexerTypes.$fShowFifoType20
                   LexerTypes.LFIFOF -> LexerTypes.$fShowFifoType17
                   LexerTypes.PipelineFIFO -> LexerTypes.$fShowFifoType14
                   LexerTypes.PipelineFIFOF -> LexerTypes.$fShowFifoType11
                   LexerTypes.BypassFIFO -> LexerTypes.$fShowFifoType8
                   LexerTypes.BypassFIFOF -> LexerTypes.$fShowFifoType5
                   LexerTypes.SizedBypassFIFOF b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        LexerTypes.$fShowFifoType2
                        (LexerTypes.$fShowExpression_$cshowsPrec
                           LexerTypes.$fShowFifoType35
                           b1
                           (GHC.Types.[] @ GHC.Types.Char)) }) -}
62d32f60bf0117d657237a0b1409daa5
  $fShowFifoType_$cshowList ::
    [LexerTypes.FifoType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.FifoType
                   LexerTypes.$fShowFifoType1) -}
62d32f60bf0117d657237a0b1409daa5
  $fShowFifoType_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.FifoType -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>,
     Unfolding: (\ (ds :: GHC.Types.Int) (ds1 :: LexerTypes.FifoType) ->
                 case ds1 of wild {
                   LexerTypes.FIFO -> LexerTypes.$fShowFifoType39
                   LexerTypes.FIFOF -> LexerTypes.$fShowFifoType36
                   LexerTypes.SizedFIFO b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = LexerTypes.$fShowExpression_$cshowsPrec
                            LexerTypes.$fShowFifoType35
                            b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char LexerTypes.$fShowFifoType33 (g x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                LexerTypes.$fShowFifoType33
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1))) } }
                   LexerTypes.SizedFIFOF b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = LexerTypes.$fShowExpression_$cshowsPrec
                            LexerTypes.$fShowFifoType35
                            b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char LexerTypes.$fShowFifoType31 (g x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                LexerTypes.$fShowFifoType31
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x1))) } }
                   LexerTypes.DepthParamFIFO -> LexerTypes.$fShowFifoType28
                   LexerTypes.FIFO1 -> LexerTypes.$fShowFifoType25
                   LexerTypes.FIFOF1 -> LexerTypes.$fShowFifoType22
                   LexerTypes.LFIFO -> LexerTypes.$fShowFifoType19
                   LexerTypes.LFIFOF -> LexerTypes.$fShowFifoType16
                   LexerTypes.PipelineFIFO -> LexerTypes.$fShowFifoType13
                   LexerTypes.PipelineFIFOF -> LexerTypes.$fShowFifoType10
                   LexerTypes.BypassFIFO -> LexerTypes.$fShowFifoType7
                   LexerTypes.BypassFIFOF -> LexerTypes.$fShowFifoType4
                   LexerTypes.SizedBypassFIFOF b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = LexerTypes.$fShowExpression_$cshowsPrec
                            LexerTypes.$fShowFifoType35
                            b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char LexerTypes.$fShowFifoType2 (g x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                LexerTypes.$fShowFifoType2
                                (g (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.$fShow(,)2
                                      x1))) } } }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowID_Path :: GHC.Show.Show LexerTypes.ID_Path
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.ID_Path
                  LexerTypes.$fShowID_Path_$cshowsPrec
                  LexerTypes.$fShowID_Path_$cshow
                  LexerTypes.$fShowID_Path_$cshowList -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowID_Path1 ::
    LexerTypes.ID_Path -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.ID_Path) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowID_Path_$cshow x))
                   s) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowID_Path_$cshow :: LexerTypes.ID_Path -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowID_Path_$cshowList :: [LexerTypes.ID_Path] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [LexerTypes.ID_Path]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ LexerTypes.ID_Path
                   LexerTypes.$fShowID_Path1
                   ls
                   s) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowID_Path_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.ID_Path -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: LexerTypes.ID_Path)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowID_Path_$cshow x))
                   s) -}
a509f8cd27c185b7680a841781f3b25f
  $fShowInterfaceAttribute ::
    GHC.Show.Show LexerTypes.InterfaceAttribute
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.InterfaceAttribute
                  LexerTypes.$fShowInterfaceAttribute_$cshowsPrec
                  LexerTypes.$fShowInterfaceAttribute_$cshow
                  LexerTypes.$fShowInterfaceAttribute_$cshowList -}
a509f8cd27c185b7680a841781f3b25f
  $fShowInterfaceAttribute1 ::
    LexerTypes.InterfaceAttribute -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (LexerTypes.$fShowInterfaceAttribute_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2) -}
1bce502f7878157864a31ebb205b0752
  $fShowInterfaceAttribute2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Int_Doc "#) -}
7f2051ad49f0f228485b1c1801cf672e
  $fShowInterfaceAttribute3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowInterfaceAttribute4) -}
5820bcf8b8b31c49151a437d1d6eb31d
  $fShowInterfaceAttribute4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Int_Always_Enabled"#) -}
dfc0c5a54388fe7d5b59a2b121c16d4a
  $fShowInterfaceAttribute5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowInterfaceAttribute6) -}
49d5101cc592cb94b896b28325ed8146
  $fShowInterfaceAttribute6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Int_Always_Ready"#) -}
a509f8cd27c185b7680a841781f3b25f
  $fShowInterfaceAttribute_$cshow ::
    LexerTypes.InterfaceAttribute -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: LexerTypes.InterfaceAttribute) ->
                 case x of wild {
                   LexerTypes.Int_Always_Ready -> LexerTypes.$fShowInterfaceAttribute5
                   LexerTypes.Int_Always_Enabled
                   -> LexerTypes.$fShowInterfaceAttribute3
                   LexerTypes.Int_Doc b1
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowInterfaceAttribute2
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString
                              b1
                              LexerTypes.$fShowActionAttribute3)) }) -}
a509f8cd27c185b7680a841781f3b25f
  $fShowInterfaceAttribute_$cshowList ::
    [LexerTypes.InterfaceAttribute] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.InterfaceAttribute
                   LexerTypes.$fShowInterfaceAttribute1) -}
a509f8cd27c185b7680a841781f3b25f
  $fShowInterfaceAttribute_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.InterfaceAttribute -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ (ds :: GHC.Types.Int)
                   (ds1 :: LexerTypes.InterfaceAttribute)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   LexerTypes.Int_Always_Ready
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        LexerTypes.$fShowInterfaceAttribute5
                        eta
                   LexerTypes.Int_Always_Enabled
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        LexerTypes.$fShowInterfaceAttribute3
                        eta
                   LexerTypes.Int_Doc b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> GHC.CString.unpackAppendCString#
                             LexerTypes.$fShowInterfaceAttribute2
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.$fShow(,)3
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 eta)))
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                LexerTypes.$fShowInterfaceAttribute2
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.$fShow(,)3
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.$fShow(,)3
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.$fShow(,)2
                                            eta))))) } } }) -}
3ae8634cce2ce6c491831d891f6327fe
  $fShowInvokationTree :: GHC.Show.Show LexerTypes.InvokationTree
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.InvokationTree
                  LexerTypes.$fShowInvokationTree_$cshowsPrec
                  LexerTypes.$fShowInvokationTree_$cshow
                  LexerTypes.$fShowInvokationTree_$cshowList -}
3ae8634cce2ce6c491831d891f6327fe
  $fShowInvokationTree1 ::
    LexerTypes.InvokationTree -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: LexerTypes.InvokationTree)
                   (w1 :: GHC.Base.String) ->
                 LexerTypes.$w$cshowsPrec4 0# w w1) -}
3ae8634cce2ce6c491831d891f6327fe
  $fShowInvokationTree_$cshow ::
    LexerTypes.InvokationTree -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.InvokationTree) ->
                 LexerTypes.$fShowInvokationTree_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3ae8634cce2ce6c491831d891f6327fe
  $fShowInvokationTree_$cshowList ::
    [LexerTypes.InvokationTree] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.InvokationTree
                   LexerTypes.$fShowInvokationTree1) -}
3ae8634cce2ce6c491831d891f6327fe
  $fShowInvokationTree_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.InvokationTree -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LexerTypes.InvokationTree)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 LexerTypes.$w$cshowsPrec4 ww1 w1 w2 }) -}
e03304d97e0d6aca513132b576af286a
  $fShowLit :: GHC.Show.Show LexerTypes.Lit
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.Lit
                  LexerTypes.$fShowLit_$cshowsPrec
                  LexerTypes.$fShowLit_$cshow
                  LexerTypes.$fShowLit_$cshowList -}
e03304d97e0d6aca513132b576af286a
  $fShowLit1 :: LexerTypes.Lit -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.Lit) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowLit_$cshow x))
                   s) -}
303387af28a51cb759b011f47953e7b2
  $fShowLit2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# LexerTypes.$fShowLit3) -}
909bdbdb913884ddf77110efeb44c33a
  $fShowLit3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("--Void Literal--"#) -}
e0d0739e60ea56acc1161f2b249c6d7f
  $fShowLit4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# LexerTypes.$fShowLit5) -}
1218bc0eb5c5bc75e7568332d965fe44
  $fShowLit5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("--Struct Constructor--"#) -}
f7ba44a455ca8d27a58c894ee19d0577
  $fShowLit6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("`"#) -}
d5b215022661b7118b28f7197dea0f28
  $fShowLit7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# LexerTypes.$fShowLit8) -}
48342ee5d8f3c333cc375f9aebd4582c
  $fShowLit8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (":"#) -}
e03304d97e0d6aca513132b576af286a
  $fShowLit_$cshow :: LexerTypes.Lit -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.Lit) ->
                 case ds of wild {
                   LexerTypes.LitString x -> GHC.Show.$fShow[]_$s$cshow1 x
                   LexerTypes.LitEnum x
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowLit8
                        (GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.$fShow(,)3
                              (GHC.Show.showLitString x GHC.Show.$fShow[]1))
                           LexerTypes.$fShowLit7)
                   LexerTypes.LitInt x -> GHC.Show.$fShowInteger_$cshow x
                   LexerTypes.LitBool x -> GHC.Show.$fShowBool_$cshow x
                   LexerTypes.LitReal x -> GHC.Float.$fShowFloat_$cshow x
                   LexerTypes.LitChar x
                   -> GHC.Types.: @ GHC.Types.Char x (GHC.Types.[] @ GHC.Types.Char)
                   LexerTypes.LitSizedInt x y
                   -> case GHC.Show.$w$cshowsPrec4
                             0#
                             x
                             (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                      GHC.Base.++
                        @ GHC.Types.Char
                        (GHC.Types.: @ GHC.Types.Char ww3 ww4)
                        (GHC.CString.unpackAppendCString#
                           LexerTypes.$fShowLit6
                           (case GHC.Show.$w$cshowsPrec4
                                   0#
                                   y
                                   (GHC.Types.[] @ GHC.Types.Char) of ww1 { (#,#) ww5 ww6 ->
                            GHC.Types.: @ GHC.Types.Char ww5 ww6 })) }
                   LexerTypes.LitStructConstructor -> LexerTypes.$fShowLit4
                   LexerTypes.LitVoid -> LexerTypes.$fShowLit2 }) -}
e03304d97e0d6aca513132b576af286a
  $fShowLit_$cshowList :: [LexerTypes.Lit] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [LexerTypes.Lit]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__ @ LexerTypes.Lit LexerTypes.$fShowLit1 ls s) -}
e03304d97e0d6aca513132b576af286a
  $fShowLit_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.Lit -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: LexerTypes.Lit)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowLit_$cshow x))
                   s) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowMaybeIDTag :: GHC.Show.Show LexerTypes.MaybeIDTag
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.MaybeIDTag
                  LexerTypes.$fShowMaybeIDTag_$cshowsPrec
                  LexerTypes.$fShowMaybeIDTag_$cshow
                  LexerTypes.$fShowMaybeIDTag_$cshowList -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowMaybeIDTag1 ::
    LexerTypes.MaybeIDTag -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.MaybeIDTag) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowMaybeIDTag_$cshow x))
                   s) -}
4ff13d4bbb5eef8779ab3eca1507c006
  $fShowMaybeIDTag2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowMaybeIDTag3) -}
909ec924ec480e3183b913b3804bda65
  $fShowMaybeIDTag3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Nothing"#) -}
f5f5c1f1e9d641004e41bca4f8b2b122
  $fShowMaybeIDTag4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowMaybeIDTag5) -}
19a6b71c1afb65061b6b2f2943e94c80
  $fShowMaybeIDTag5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (")"#) -}
6baa72cf9764e190d5fddfd8b0f11219
  $fShowMaybeIDTag6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Just("#) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowMaybeIDTag_$cshow :: LexerTypes.MaybeIDTag -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.MaybeIDTag) ->
                 case ds of wild {
                   LexerTypes.ValidID x
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowMaybeIDTag6
                        (GHC.Base.++
                           @ GHC.Types.Char
                           (LexerTypes.$fShowID_Path_$cshow x)
                           LexerTypes.$fShowMaybeIDTag4)
                   LexerTypes.InvalidID -> LexerTypes.$fShowMaybeIDTag2 }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowMaybeIDTag_$cshowList ::
    [LexerTypes.MaybeIDTag] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [LexerTypes.MaybeIDTag]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ LexerTypes.MaybeIDTag
                   LexerTypes.$fShowMaybeIDTag1
                   ls
                   s) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowMaybeIDTag_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.MaybeIDTag -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: LexerTypes.MaybeIDTag)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowMaybeIDTag_$cshow x))
                   s) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowMaybeTag :: GHC.Show.Show LexerTypes.MaybeTag
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.MaybeTag
                  LexerTypes.$fShowMaybeTag_$cshowsPrec
                  LexerTypes.$fShowMaybeTag_$cshow
                  LexerTypes.$fShowMaybeTag_$cshowList -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowMaybeTag1 ::
    LexerTypes.MaybeTag -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.MaybeTag) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowMaybeTag_$cshow x))
                   s) -}
5aceaf3f9413ac2d999391a706403469
  $fShowMaybeTag2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MaybeContainer("#) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowMaybeTag_$cshow :: LexerTypes.MaybeTag -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: LexerTypes.MaybeTag) ->
                 case ds of wild {
                   LexerTypes.Valid x
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowMaybeIDTag6
                        (GHC.Base.++
                           @ GHC.Types.Char
                           (LexerTypes.$fShowExpression_$cshowsPrec
                              LexerTypes.$fShowArgumentAttribute2
                              x
                              (GHC.Types.[] @ GHC.Types.Char))
                           LexerTypes.$fShowMaybeIDTag4)
                   LexerTypes.Invalid -> LexerTypes.$fShowMaybeIDTag2
                   LexerTypes.MaybeContainer x
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowMaybeTag2
                        (GHC.Base.++
                           @ GHC.Types.Char
                           (LexerTypes.$fShowExpression_$cshowsPrec
                              LexerTypes.$fShowArgumentAttribute2
                              x
                              (GHC.Types.[] @ GHC.Types.Char))
                           LexerTypes.$fShowMaybeIDTag4) }) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowMaybeTag_$cshowList ::
    [LexerTypes.MaybeTag] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [LexerTypes.MaybeTag]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ LexerTypes.MaybeTag
                   LexerTypes.$fShowMaybeTag1
                   ls
                   s) -}
6b58178d3226f5dcfa379df74cd7f6b5
  $fShowMaybeTag_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.MaybeTag -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: LexerTypes.MaybeTag)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowMaybeTag_$cshow x))
                   s) -}
b4aecb172444b05b089bf49557976776
  $fShowMethodBodyAttribute ::
    GHC.Show.Show LexerTypes.MethodBodyAttribute
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.MethodBodyAttribute
                  LexerTypes.$fShowMethodBodyAttribute_$cshowsPrec
                  LexerTypes.$fShowMethodBodyAttribute_$cshow
                  LexerTypes.$fShowMethodBodyAttribute_$cshowList -}
b4aecb172444b05b089bf49557976776
  $fShowMethodBodyAttribute1 ::
    LexerTypes.MethodBodyAttribute -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U)><L,U>,
     Unfolding: (\ (w :: LexerTypes.MethodBodyAttribute)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { LexerTypes.Met_Doc ww1 ->
                 LexerTypes.$w$cshowsPrec5 0# ww1 w1 }) -}
c9cded7ee4f10ad040798e6d5da0dd73
  $fShowMethodBodyAttribute2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Met_Doc "#) -}
b4aecb172444b05b089bf49557976776
  $fShowMethodBodyAttribute_$cshow ::
    LexerTypes.MethodBodyAttribute -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: LexerTypes.MethodBodyAttribute) ->
                 case w of ww { LexerTypes.Met_Doc ww1 ->
                 LexerTypes.$w$cshow1 ww1 }) -}
b4aecb172444b05b089bf49557976776
  $fShowMethodBodyAttribute_$cshowList ::
    [LexerTypes.MethodBodyAttribute] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.MethodBodyAttribute
                   LexerTypes.$fShowMethodBodyAttribute1) -}
b4aecb172444b05b089bf49557976776
  $fShowMethodBodyAttribute_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.MethodBodyAttribute -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LexerTypes.MethodBodyAttribute)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { LexerTypes.Met_Doc ww3 ->
                 LexerTypes.$w$cshowsPrec5 ww1 ww3 w2 } }) -}
43646e54358077c291b127f0bcee7b7b
  $fShowMethodDecAttribute ::
    GHC.Show.Show LexerTypes.MethodDecAttribute
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.MethodDecAttribute
                  LexerTypes.$fShowMethodDecAttribute_$cshowsPrec
                  LexerTypes.$fShowMethodDecAttribute_$cshow
                  LexerTypes.$fShowMethodDecAttribute_$cshowList -}
43646e54358077c291b127f0bcee7b7b
  $fShowMethodDecAttribute1 ::
    LexerTypes.MethodDecAttribute -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (LexerTypes.$fShowMethodDecAttribute_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2) -}
604b7200302d803ae273b6c536d02ba6
  $fShowMethodDecAttribute10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MDc_Enable "#) -}
34afdb4c920bdd2b4b6214a6ac74656e
  $fShowMethodDecAttribute11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MDc_Ready "#) -}
9453bc9996d901e7f86da78729c4f6ab
  $fShowMethodDecAttribute2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MDc_Doc "#) -}
4bcd2a42cc7ae8eb49377e7b67b3e201
  $fShowMethodDecAttribute3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowMethodDecAttribute4) -}
1c3aa146cd246cb66ae1fe76c1ef559a
  $fShowMethodDecAttribute4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MDc_Always_Enabled"#) -}
d8c074fb58ec18ec2ca32b23b1596175
  $fShowMethodDecAttribute5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowMethodDecAttribute6) -}
5b6c522105ce66f9c3cea42a39d5ada4
  $fShowMethodDecAttribute6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MDc_Always_Ready"#) -}
b900fd8dee97a2759ae5273d0430601f
  $fShowMethodDecAttribute7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MDc_Port "#) -}
4f62697acb0ec5abf3f2c8bf08744134
  $fShowMethodDecAttribute8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MDc_Prefix "#) -}
8355e84d601dc7f6b14d13654b4e2404
  $fShowMethodDecAttribute9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MDc_Result "#) -}
43646e54358077c291b127f0bcee7b7b
  $fShowMethodDecAttribute_$cshow ::
    LexerTypes.MethodDecAttribute -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: LexerTypes.MethodDecAttribute) ->
                 case x of wild {
                   LexerTypes.MDc_Ready b1
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowMethodDecAttribute11
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString b1 LexerTypes.$fShowActionAttribute3))
                   LexerTypes.MDc_Enable b1
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowMethodDecAttribute10
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString b1 LexerTypes.$fShowActionAttribute3))
                   LexerTypes.MDc_Result b1
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowMethodDecAttribute9
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString b1 LexerTypes.$fShowActionAttribute3))
                   LexerTypes.MDc_Prefix b1
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowMethodDecAttribute8
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString b1 LexerTypes.$fShowActionAttribute3))
                   LexerTypes.MDc_Port b1
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowMethodDecAttribute7
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString b1 LexerTypes.$fShowActionAttribute3))
                   LexerTypes.MDc_Always_Ready -> LexerTypes.$fShowMethodDecAttribute5
                   LexerTypes.MDc_Always_Enabled
                   -> LexerTypes.$fShowMethodDecAttribute3
                   LexerTypes.MDc_Doc b1
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowMethodDecAttribute2
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString
                              b1
                              LexerTypes.$fShowActionAttribute3)) }) -}
43646e54358077c291b127f0bcee7b7b
  $fShowMethodDecAttribute_$cshowList ::
    [LexerTypes.MethodDecAttribute] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.MethodDecAttribute
                   LexerTypes.$fShowMethodDecAttribute1) -}
43646e54358077c291b127f0bcee7b7b
  $fShowMethodDecAttribute_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.MethodDecAttribute -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
2882a2cad63f6474f30d3fc20714ae61
  $fShowMode :: GHC.Show.Show LexerTypes.Mode
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.Mode
                  LexerTypes.$fShowMode_$cshowsPrec
                  LexerTypes.$fShowMode_$cshow
                  LexerTypes.$fShowMode_$cshowList -}
78454df37dfd5eb6444444792b9ab8f3
  $fShowMode1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowMode2) -}
a924d18783fca9fc8ce572a486a984c1
  $fShowMode10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("P2B"#) -}
4d04d0c78ef1f707fbd75e2ef1a565b3
  $fShowMode11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowMode12) -}
dbab3959b474d38babb8e278ba46a94c
  $fShowMode12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("B2P"#) -}
c08e1574fd2b059a954842b98b3e57aa
  $fShowMode2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("T2P"#) -}
382544a595cd2a06b0ddaecb1c6d0bba
  $fShowMode3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowMode4) -}
990805645243aa96cfb995e5bcb1ed91
  $fShowMode4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("T2B"#) -}
9e575da417ccbf4646400b5262820079
  $fShowMode5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowMode6) -}
eb236b80cc433dd1c3a86b3f0528e89a
  $fShowMode6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("P2P"#) -}
74067ba15b83f86b2a4fedada634176a
  $fShowMode7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowMode8) -}
5b22d6fc99fdbf2bed9eea1c6abfc1ae
  $fShowMode8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("B2B"#) -}
4bec2f228d50f0a3ce241555720c3dc0
  $fShowMode9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowMode10) -}
2882a2cad63f6474f30d3fc20714ae61
  $fShowMode_$cshow :: LexerTypes.Mode -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.Mode) ->
                 case x of wild {
                   LexerTypes.B2P -> LexerTypes.$fShowMode11
                   LexerTypes.P2B -> LexerTypes.$fShowMode9
                   LexerTypes.B2B -> LexerTypes.$fShowMode7
                   LexerTypes.P2P -> LexerTypes.$fShowMode5
                   LexerTypes.T2B -> LexerTypes.$fShowMode3
                   LexerTypes.T2P -> LexerTypes.$fShowMode1 }) -}
2882a2cad63f6474f30d3fc20714ae61
  $fShowMode_$cshowList :: [LexerTypes.Mode] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.Mode
                   LexerTypes.$w$cshowsPrec6) -}
2882a2cad63f6474f30d3fc20714ae61
  $fShowMode_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.Mode -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LexerTypes.Mode)
                   (w2 :: GHC.Base.String) ->
                 LexerTypes.$w$cshowsPrec6 w1 w2) -}
38c8cfc922a8b6609d6630c27049fe7f
  $fShowModuleAttribute :: GHC.Show.Show LexerTypes.ModuleAttribute
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.ModuleAttribute
                  LexerTypes.$fShowModuleAttribute_$cshowsPrec
                  LexerTypes.$fShowModuleAttribute_$cshow
                  LexerTypes.$fShowModuleAttribute_$cshowList -}
38c8cfc922a8b6609d6630c27049fe7f
  $fShowModuleAttribute1 ::
    LexerTypes.ModuleAttribute -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (LexerTypes.$fShowModuleAttribute_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2) -}
38c8cfc922a8b6609d6630c27049fe7f
  $fShowModuleAttribute_$cshow ::
    LexerTypes.ModuleAttribute -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.ModuleAttribute) ->
                 LexerTypes.$fShowModuleAttribute_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
38c8cfc922a8b6609d6630c27049fe7f
  $fShowModuleAttribute_$cshowList ::
    [LexerTypes.ModuleAttribute] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.ModuleAttribute
                   LexerTypes.$fShowModuleAttribute1) -}
38c8cfc922a8b6609d6630c27049fe7f
  $fShowModuleAttribute_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.ModuleAttribute -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
2ebe3fda021fa922603a337269985adf
  $fShowPVSPackage :: GHC.Show.Show LexerTypes.PVSPackage
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.PVSPackage
                  LexerTypes.$fShowPVSPackage_$cshowsPrec
                  LexerTypes.$fShowPVSPackage_$cshow
                  LexerTypes.$fShowPVSPackage_$cshowList -}
2ebe3fda021fa922603a337269985adf
  $fShowPVSPackage1 :: LexerTypes.PVSPackage -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: LexerTypes.PVSPackage)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { LexerTypes.PVSPackage ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 LexerTypes.$w$cshowsPrec7 0# ww1 ww2 ww3 ww4 ww5 ww6 ww7 w1 }) -}
2ebe3fda021fa922603a337269985adf
  $fShowPVSPackage_$cshow :: LexerTypes.PVSPackage -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.PVSPackage) ->
                 LexerTypes.$fShowPVSPackage_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
2ebe3fda021fa922603a337269985adf
  $fShowPVSPackage_$cshowList ::
    [LexerTypes.PVSPackage] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.PVSPackage
                   LexerTypes.$fShowPVSPackage1) -}
2ebe3fda021fa922603a337269985adf
  $fShowPVSPackage_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.PVSPackage -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LexerTypes.PVSPackage)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { LexerTypes.PVSPackage ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 LexerTypes.$w$cshowsPrec7
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   w2 } }) -}
5293579e9cbbf6986dcf46fee97434cb
  $fShowPVSType :: GHC.Show.Show LexerTypes.PVSType
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.PVSType
                  LexerTypes.$fShowPVSType_$cshowsPrec
                  LexerTypes.$fShowPVSType_$cshow
                  LexerTypes.$fShowPVSType_$cshowList -}
5293579e9cbbf6986dcf46fee97434cb
  $fShowPVSType1 :: LexerTypes.PVSType -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (LexerTypes.$fShowPVSType_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2) -}
263d5987ddec79fadf35563de5be9f0c
  $fShowPVSTypeDef :: GHC.Show.Show LexerTypes.PVSTypeDef
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.PVSTypeDef
                  LexerTypes.$fShowPVSTypeDef_$cshowsPrec
                  LexerTypes.$fShowPVSTypeDef_$cshow
                  LexerTypes.$fShowPVSTypeDef_$cshowList -}
263d5987ddec79fadf35563de5be9f0c
  $fShowPVSTypeDef1 :: LexerTypes.PVSTypeDef -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (w :: LexerTypes.PVSTypeDef)
                   (w1 :: GHC.Base.String) ->
                 LexerTypes.$w$cshowsPrec8 0# w w1) -}
263d5987ddec79fadf35563de5be9f0c
  $fShowPVSTypeDef_$cshow :: LexerTypes.PVSTypeDef -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.PVSTypeDef) ->
                 LexerTypes.$fShowPVSTypeDef_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
263d5987ddec79fadf35563de5be9f0c
  $fShowPVSTypeDef_$cshowList ::
    [LexerTypes.PVSTypeDef] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.PVSTypeDef
                   LexerTypes.$fShowPVSTypeDef1) -}
263d5987ddec79fadf35563de5be9f0c
  $fShowPVSTypeDef_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.PVSTypeDef -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LexerTypes.PVSTypeDef)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 LexerTypes.$w$cshowsPrec8 ww1 w1 w2 }) -}
5293579e9cbbf6986dcf46fee97434cb
  $fShowPVSType_$cshow :: LexerTypes.PVSType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.PVSType) ->
                 LexerTypes.$fShowPVSType_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5293579e9cbbf6986dcf46fee97434cb
  $fShowPVSType_$cshowList :: [LexerTypes.PVSType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.PVSType
                   LexerTypes.$fShowPVSType1) -}
5293579e9cbbf6986dcf46fee97434cb
  $fShowPVSType_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.PVSType -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
27e7de08b1523caab97202618cf8bce6
  $fShowPVSstate :: GHC.Show.Show LexerTypes.PVSstate
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.PVSstate
                  LexerTypes.$fShowPVSstate_$cshowsPrec
                  LexerTypes.$fShowPVSstate_$cshow
                  LexerTypes.$fShowPVSstate_$cshowList -}
27e7de08b1523caab97202618cf8bce6
  $fShowPVSstate1 :: LexerTypes.PVSstate -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (w :: LexerTypes.PVSstate) ->
                 LexerTypes.$w$cshowsPrec9 0# w) -}
27e7de08b1523caab97202618cf8bce6
  $fShowPVSstate_$cshow :: LexerTypes.PVSstate -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.PVSstate) ->
                 LexerTypes.$fShowPVSstate_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
27e7de08b1523caab97202618cf8bce6
  $fShowPVSstate_$cshowList ::
    [LexerTypes.PVSstate] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.PVSstate
                   LexerTypes.$fShowPVSstate1) -}
27e7de08b1523caab97202618cf8bce6
  $fShowPVSstate_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.PVSstate -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: LexerTypes.PVSstate) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 LexerTypes.$w$cshowsPrec9 ww1 w1 }) -}
9d775b0245d04dbf7fab29450b78d2d7
  $fShowPermMod :: GHC.Show.Show LexerTypes.PermMod
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.PermMod
                  LexerTypes.$fShowPermMod_$cshowsPrec
                  LexerTypes.$fShowPermMod_$cshow
                  LexerTypes.$fShowPermMod_$cshowList -}
9d775b0245d04dbf7fab29450b78d2d7
  $fShowPermMod1 :: LexerTypes.PermMod -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: LexerTypes.PermMod) (w1 :: GHC.Base.String) ->
                 case w of ww { LexerTypes.PermMod ww1 ww2 ww3 ww4 ww5 ->
                 LexerTypes.$w$cshowsPrec10 0# ww1 ww2 ww3 ww4 ww5 w1 }) -}
9d775b0245d04dbf7fab29450b78d2d7
  $fShowPermMod_$cshow :: LexerTypes.PermMod -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.PermMod) ->
                 LexerTypes.$fShowPermMod_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9d775b0245d04dbf7fab29450b78d2d7
  $fShowPermMod_$cshowList :: [LexerTypes.PermMod] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.PermMod
                   LexerTypes.$fShowPermMod1) -}
9d775b0245d04dbf7fab29450b78d2d7
  $fShowPermMod_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.PermMod -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LexerTypes.PermMod)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { LexerTypes.PermMod ww3 ww4 ww5 ww6 ww7 ->
                 LexerTypes.$w$cshowsPrec10 ww1 ww3 ww4 ww5 ww6 ww7 w2 } }) -}
24b25751d883836f2c08d627f196fc9d
  $fShowRegFileLoader :: GHC.Show.Show LexerTypes.RegFileLoader
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.RegFileLoader
                  LexerTypes.$fShowRegFileLoader_$cshowsPrec
                  LexerTypes.$fShowRegFileLoader_$cshow
                  LexerTypes.$fShowRegFileLoader_$cshowList -}
24b25751d883836f2c08d627f196fc9d
  $fShowRegFileLoader1 :: LexerTypes.RegFileLoader -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,1*U,1*U)>,
     Unfolding: (\ (w :: LexerTypes.RegFileLoader) ->
                 case w of ww { LexerTypes.RegFileLoad ww1 ww2 ww3 ->
                 LexerTypes.$w$cshowsPrec11 0# ww1 ww2 ww3 }) -}
947e3cc74f2b7f972a0de2ea3fcd175d
  $fShowRegFileLoader2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RegFileLoad "#) -}
24b25751d883836f2c08d627f196fc9d
  $fShowRegFileLoader_$cshow ::
    LexerTypes.RegFileLoader -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.RegFileLoader) ->
                 LexerTypes.$fShowRegFileLoader_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
24b25751d883836f2c08d627f196fc9d
  $fShowRegFileLoader_$cshowList ::
    [LexerTypes.RegFileLoader] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.RegFileLoader
                   LexerTypes.$fShowRegFileLoader1) -}
24b25751d883836f2c08d627f196fc9d
  $fShowRegFileLoader_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.RegFileLoader -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(U,1*U,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: LexerTypes.RegFileLoader) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { LexerTypes.RegFileLoad ww3 ww4 ww5 ->
                 LexerTypes.$w$cshowsPrec11 ww1 ww3 ww4 ww5 } }) -}
edbdd3627cba53012a786daa322eb050
  $fShowReturnType :: GHC.Show.Show LexerTypes.ReturnType
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.ReturnType
                  LexerTypes.$fShowReturnType_$cshowsPrec
                  LexerTypes.$fShowReturnType_$cshow
                  LexerTypes.$fShowReturnType_$cshowList -}
edbdd3627cba53012a786daa322eb050
  $fShowReturnType1 :: LexerTypes.ReturnType -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (LexerTypes.$fShowReturnType_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2) -}
3eb9dedc475b18114c29d9660ae91a20
  $fShowReturnType2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowReturnType3) -}
571576a4a5bd9fbcc12c5cd6d18b1fe7
  $fShowReturnType3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Value "#) -}
1ba513ce60230433f4f7940a9eabe1ae
  $fShowReturnType4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowReturnType5) -}
ca2122a3893fec514c541ce95a676faa
  $fShowReturnType5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ActionValue "#) -}
b58480eb3858529bd8c1a37bb6e4cb4c
  $fShowReturnType6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowReturnType7) -}
705a8defbfa52b450b6940a116d32c97
  $fShowReturnType7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Action"#) -}
edbdd3627cba53012a786daa322eb050
  $fShowReturnType_$cshow :: LexerTypes.ReturnType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: LexerTypes.ReturnType) ->
                 case x of wild {
                   LexerTypes.Action -> LexerTypes.$fShowReturnType6
                   LexerTypes.ActionValue b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        LexerTypes.$fShowReturnType4
                        (LexerTypes.$fShowBSVType_$cshowsPrec
                           LexerTypes.$fShowFifoType35
                           b1
                           (GHC.Types.[] @ GHC.Types.Char))
                   LexerTypes.Value b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        LexerTypes.$fShowReturnType2
                        (LexerTypes.$fShowBSVType_$cshowsPrec
                           LexerTypes.$fShowFifoType35
                           b1
                           (GHC.Types.[] @ GHC.Types.Char)) }) -}
edbdd3627cba53012a786daa322eb050
  $fShowReturnType_$cshowList ::
    [LexerTypes.ReturnType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.ReturnType
                   LexerTypes.$fShowReturnType1) -}
edbdd3627cba53012a786daa322eb050
  $fShowReturnType_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.ReturnType -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ (ds :: GHC.Types.Int)
                   (ds1 :: LexerTypes.ReturnType)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   LexerTypes.Action
                   -> GHC.Base.++ @ GHC.Types.Char LexerTypes.$fShowReturnType6 eta
                   LexerTypes.ActionValue b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             LexerTypes.$fShowReturnType4
                             (LexerTypes.$fShowBSVType_$cshowsPrec
                                LexerTypes.$fShowFifoType35
                                b1
                                eta)
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                LexerTypes.$fShowReturnType4
                                (LexerTypes.$fShowBSVType_$cshowsPrec
                                   LexerTypes.$fShowFifoType35
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 eta))) } }
                   LexerTypes.Value b1
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             LexerTypes.$fShowReturnType2
                             (LexerTypes.$fShowBSVType_$cshowsPrec
                                LexerTypes.$fShowFifoType35
                                b1
                                eta)
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                LexerTypes.$fShowReturnType2
                                (LexerTypes.$fShowBSVType_$cshowsPrec
                                   LexerTypes.$fShowFifoType35
                                   b1
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.$fShow(,)2
                                      eta))) } } }) -}
2bdb464ecda2ca4646f2cafd65165658
  $fShowRuleAttribute :: GHC.Show.Show LexerTypes.RuleAttribute
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.RuleAttribute
                  LexerTypes.$fShowRuleAttribute_$cshowsPrec
                  LexerTypes.$fShowRuleAttribute_$cshow
                  LexerTypes.$fShowRuleAttribute_$cshowList -}
2bdb464ecda2ca4646f2cafd65165658
  $fShowRuleAttribute1 :: LexerTypes.RuleAttribute -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (LexerTypes.$fShowRuleAttribute_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2) -}
2bdb464ecda2ca4646f2cafd65165658
  $fShowRuleAttribute_$cshow ::
    LexerTypes.RuleAttribute -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.RuleAttribute) ->
                 LexerTypes.$fShowRuleAttribute_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
2bdb464ecda2ca4646f2cafd65165658
  $fShowRuleAttribute_$cshowList ::
    [LexerTypes.RuleAttribute] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.RuleAttribute
                   LexerTypes.$fShowRuleAttribute1) -}
2bdb464ecda2ca4646f2cafd65165658
  $fShowRuleAttribute_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.RuleAttribute -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
269d6e12c984e7a4de1bdae43d808778
  $fShowRuleHeap :: GHC.Show.Show LexerTypes.RuleHeap
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.RuleHeap
                  LexerTypes.$fShowRuleHeap_$cshowsPrec
                  LexerTypes.$fShowRuleHeap_$cshow
                  LexerTypes.$fShowRuleHeap_$cshowList -}
269d6e12c984e7a4de1bdae43d808778
  $fShowRuleHeap1 ::
    LexerTypes.RuleHeap -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U)><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.RuleHeap) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.showRuleHeap LexerTypes.$fShowRuleHeap2 x))
                   s) -}
eda823412162cc836e753fa43cc47de6
  $fShowRuleHeap2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowRuleHeap3) -}
29385c79d5b381f3e23abd7e63bcf7b4
  $fShowRuleHeap3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\n"#) -}
269d6e12c984e7a4de1bdae43d808778
  $fShowRuleHeap_$cshow :: LexerTypes.RuleHeap -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.RuleHeap) ->
                 LexerTypes.showRuleHeap LexerTypes.$fShowRuleHeap2 x) -}
269d6e12c984e7a4de1bdae43d808778
  $fShowRuleHeap_$cshowList ::
    [LexerTypes.RuleHeap] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [LexerTypes.RuleHeap]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ LexerTypes.RuleHeap
                   LexerTypes.$fShowRuleHeap1
                   ls
                   s) -}
269d6e12c984e7a4de1bdae43d808778
  $fShowRuleHeap_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.RuleHeap -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U(1*U,1*U,1*U)><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: LexerTypes.RuleHeap)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.showRuleHeap LexerTypes.$fShowRuleHeap2 x))
                   s) -}
08b3b374ca9923e08b3d8f295257edb0
  $fShowRuleNode :: GHC.Show.Show LexerTypes.RuleNode
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.RuleNode
                  LexerTypes.$fShowRuleNode_$cshowsPrec
                  LexerTypes.$fShowRuleNode_$cshow
                  LexerTypes.$fShowRuleNode_$cshowList -}
08b3b374ca9923e08b3d8f295257edb0
  $fShowRuleNode1 :: LexerTypes.RuleNode -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U)><L,U>,
     Unfolding: (\ (w :: LexerTypes.RuleNode) (w1 :: GHC.Base.String) ->
                 case w of ww { LexerTypes.RuleNode ww1 ww2 ->
                 LexerTypes.$w$cshowsPrec12 0# ww1 ww2 w1 }) -}
3679675bcbf644233d42c6fc825db4be
  $fShowRuleNode2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowRuleNode3) -}
e8b9235c10c0e86961684648662aad04
  $fShowRuleNode3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RuleNode {"#) -}
3ec1359dd8017d45f440059dcad32736
  $fShowRuleNode4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
9567efb7da22029fb1cf6d1a273647d4
  $fShowRuleNode5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("rnPreempts = "#) -}
7a48e4583d8d4be86b51d52bc942ba36
  $fShowRuleNode6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("rnName = "#) -}
08b3b374ca9923e08b3d8f295257edb0
  $fShowRuleNode_$cshow :: LexerTypes.RuleNode -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.RuleNode) ->
                 LexerTypes.$fShowRuleNode_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
08b3b374ca9923e08b3d8f295257edb0
  $fShowRuleNode_$cshowList ::
    [LexerTypes.RuleNode] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.RuleNode
                   LexerTypes.$fShowRuleNode1) -}
08b3b374ca9923e08b3d8f295257edb0
  $fShowRuleNode_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.RuleNode -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LexerTypes.RuleNode)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { LexerTypes.RuleNode ww3 ww4 ->
                 LexerTypes.$w$cshowsPrec12 ww1 ww3 ww4 w2 } }) -}
7b3adb9e814c886706bb5c400eeb330c
  $fShowRuleSchedule :: GHC.Show.Show LexerTypes.RuleSchedule
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.RuleSchedule
                  LexerTypes.$fShowRuleSchedule_$cshowsPrec
                  LexerTypes.$fShowRuleSchedule_$cshow
                  LexerTypes.$fShowRuleSchedule_$cshowList -}
7b3adb9e814c886706bb5c400eeb330c
  $fShowRuleSchedule1 ::
    LexerTypes.RuleSchedule -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Strictness: <L,1*U(1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,1*U,1*U,1*U)><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.RuleSchedule)
                   (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowRuleSchedule_$cshow x))
                   s) -}
114a6f6268bb4d93d53ca6ac76c45d85
  $fShowRuleSchedule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Executes After : "#) -}
46f2a91d35b3402ec1337a2d890bc29e
  $fShowRuleSchedule3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Executes Before : "#) -}
39108fb0cabf01aa331f0094b8b7c211
  $fShowRuleSchedule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Is Preempted By : "#) -}
e46ce620b34ea88ea3395eaf032b6519
  $fShowRuleSchedule5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowRuleSchedule6) -}
cd28244c1d8e7ad1ee5c817e34ab10b9
  $fShowRuleSchedule6 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\n\
                 \\t"#) -}
fe9edfe5fda869357da2dbcc7565cf4c
  $fShowRuleSchedule7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   GHC.Show.showList__4
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3fced75892dd72dae4fa4c3782f35f56
  $fShowRuleSchedule8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Preempts : "#) -}
6ff0c3aaace84a9712f05c1bdc22ed94
  $fShowRuleSchedule9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Rule Schedule for "#) -}
7b3adb9e814c886706bb5c400eeb330c
  $fShowRuleSchedule_$cshow ::
    LexerTypes.RuleSchedule -> GHC.Base.String
  {- Arity: 1,
     Strictness: <L,1*U(1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,1*U,1*U,1*U)>,
     Unfolding: (\ (x :: LexerTypes.RuleSchedule) ->
                 GHC.CString.unpackAppendCString#
                   LexerTypes.$fShowRuleSchedule9
                   (case x of wild { LexerTypes.RuleSchedule ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                    GHC.Base.++
                      @ GHC.Types.Char
                      (LexerTypes.$fShowActionPath_$cshow ds)
                      (GHC.CString.unpackAppendCString#
                         LexerTypes.$fShowRuleSchedule6
                         (Data.OldList.intercalate_$spoly_go
                            @ GHC.Types.Char
                            (GHC.CString.unpackAppendCString#
                               LexerTypes.$fShowRuleSchedule8
                               (case ds14 of wild1 {
                                  [] -> LexerTypes.$fShowRuleSchedule7
                                  : x1 xs
                                  -> GHC.Types.:
                                       @ GHC.Types.Char
                                       GHC.Show.showList__3
                                       (GHC.Base.++
                                          @ GHC.Types.Char
                                          (LexerTypes.$fShowActionPath_$cshow x1)
                                          (LexerTypes.$fShowRuleSchedule_showl xs)) }))
                            (Data.OldList.prependToAll
                               @ [GHC.Types.Char]
                               LexerTypes.$fShowRuleSchedule5
                               (GHC.Types.:
                                  @ [GHC.Types.Char]
                                  (GHC.CString.unpackAppendCString#
                                     LexerTypes.$fShowRuleSchedule4
                                     (case ds15 of wild1 {
                                        [] -> LexerTypes.$fShowRuleSchedule7
                                        : x1 xs
                                        -> GHC.Types.:
                                             @ GHC.Types.Char
                                             GHC.Show.showList__3
                                             (GHC.Base.++
                                                @ GHC.Types.Char
                                                (LexerTypes.$fShowActionPath_$cshow x1)
                                                (LexerTypes.$fShowRuleSchedule_showl xs)) }))
                                  (GHC.Types.:
                                     @ [GHC.Types.Char]
                                     (GHC.CString.unpackAppendCString#
                                        LexerTypes.$fShowRuleSchedule3
                                        (case ds17 of wild1 {
                                           [] -> LexerTypes.$fShowRuleSchedule7
                                           : x1 xs
                                           -> GHC.Types.:
                                                @ GHC.Types.Char
                                                GHC.Show.showList__3
                                                (GHC.Base.++
                                                   @ GHC.Types.Char
                                                   (LexerTypes.$fShowActionPath_$cshow x1)
                                                   (LexerTypes.$fShowRuleSchedule_showl xs)) }))
                                     (GHC.Types.:
                                        @ [GHC.Types.Char]
                                        (GHC.CString.unpackAppendCString#
                                           LexerTypes.$fShowRuleSchedule2
                                           (case ds16 of wild1 {
                                              [] -> LexerTypes.$fShowRuleSchedule7
                                              : x1 xs
                                              -> GHC.Types.:
                                                   @ GHC.Types.Char
                                                   GHC.Show.showList__3
                                                   (GHC.Base.++
                                                      @ GHC.Types.Char
                                                      (LexerTypes.$fShowActionPath_$cshow x1)
                                                      (LexerTypes.$fShowRuleSchedule_showl xs)) }))
                                        (GHC.Types.[] @ [GHC.Types.Char]))))))) })) -}
7b3adb9e814c886706bb5c400eeb330c
  $fShowRuleSchedule_$cshowList ::
    [LexerTypes.RuleSchedule] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [LexerTypes.RuleSchedule]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ LexerTypes.RuleSchedule
                   LexerTypes.$fShowRuleSchedule1
                   ls
                   s) -}
7b3adb9e814c886706bb5c400eeb330c
  $fShowRuleSchedule_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.RuleSchedule -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <L,A><L,1*U(1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,1*U,1*U,1*U)><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: LexerTypes.RuleSchedule)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowRuleSchedule_$cshow x))
                   s) -}
0370daa0fc0cb014d5982a4522f36f7a
  $fShowRuleSchedule_showl ::
    [LexerTypes.ActionPath] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>m2 -}
0a707cbf9c25ca42c10c6035c89eda04
  $fShowRuleTree :: GHC.Show.Show LexerTypes.RuleTree
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.RuleTree
                  LexerTypes.$fShowRuleTree_$cshowsPrec
                  LexerTypes.$fShowRuleTree_$cshow
                  LexerTypes.$fShowRuleTree_$cshowList -}
0a707cbf9c25ca42c10c6035c89eda04
  $fShowRuleTree1 :: LexerTypes.RuleTree -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (LexerTypes.$fShowRuleTree_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2) -}
0a707cbf9c25ca42c10c6035c89eda04
  $fShowRuleTree_$cshow :: LexerTypes.RuleTree -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.RuleTree) ->
                 LexerTypes.$fShowRuleTree_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
0a707cbf9c25ca42c10c6035c89eda04
  $fShowRuleTree_$cshowList ::
    [LexerTypes.RuleTree] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.RuleTree
                   LexerTypes.$fShowRuleTree1) -}
0a707cbf9c25ca42c10c6035c89eda04
  $fShowRuleTree_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.RuleTree -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U> -}
ebcfeb3f65d1ad8ce6721b3836e86fd6
  $fShowRuleUrgParams :: GHC.Show.Show LexerTypes.RuleUrgParams
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.RuleUrgParams
                  LexerTypes.$fShowRuleUrgParams_$cshowsPrec
                  LexerTypes.$fShowRuleUrgParams_$cshow
                  LexerTypes.$fShowRuleUrgParams_$cshowList -}
ebcfeb3f65d1ad8ce6721b3836e86fd6
  $fShowRuleUrgParams1 :: LexerTypes.RuleUrgParams -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(U,1*U,U,U,U,U,U)>,
     Unfolding: (\ (w :: LexerTypes.RuleUrgParams) ->
                 case w of ww { LexerTypes.RuleUrgParams ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 LexerTypes.$w$cshowsPrec13 0# ww1 ww2 ww3 ww4 ww5 ww6 ww7 }) -}
ebcfeb3f65d1ad8ce6721b3836e86fd6
  $fShowRuleUrgParams_$cshow ::
    LexerTypes.RuleUrgParams -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,1*U,U,U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.RuleUrgParams) ->
                 LexerTypes.$fShowRuleUrgParams_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ebcfeb3f65d1ad8ce6721b3836e86fd6
  $fShowRuleUrgParams_$cshowList ::
    [LexerTypes.RuleUrgParams] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.RuleUrgParams
                   LexerTypes.$fShowRuleUrgParams1) -}
ebcfeb3f65d1ad8ce6721b3836e86fd6
  $fShowRuleUrgParams_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.RuleUrgParams -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(U,1*U,U,U,U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: LexerTypes.RuleUrgParams) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { LexerTypes.RuleUrgParams ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 LexerTypes.$w$cshowsPrec13 ww1 ww3 ww4 ww5 ww6 ww7 ww8 ww9 } }) -}
6a668caddf4b8e9677117e2028b195e2
  $fShowSpecificTree :: GHC.Show.Show LexerTypes.SpecificTree
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.SpecificTree
                  LexerTypes.$fShowSpecificTree_$cshowsPrec
                  LexerTypes.$fShowSpecificTree_$cshow
                  LexerTypes.$fShowSpecificTree_$cshowList -}
6a668caddf4b8e9677117e2028b195e2
  $fShowSpecificTree1 ::
    LexerTypes.SpecificTree -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.SpecificTree)
                   (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.showST x (GHC.Types.[] @ GHC.Types.Char)))
                   s) -}
6a668caddf4b8e9677117e2028b195e2
  $fShowSpecificTree_$cshow ::
    LexerTypes.SpecificTree -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.SpecificTree) ->
                 LexerTypes.showST x (GHC.Types.[] @ GHC.Types.Char)) -}
6a668caddf4b8e9677117e2028b195e2
  $fShowSpecificTree_$cshowList ::
    [LexerTypes.SpecificTree] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [LexerTypes.SpecificTree]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ LexerTypes.SpecificTree
                   LexerTypes.$fShowSpecificTree1
                   ls
                   s) -}
6a668caddf4b8e9677117e2028b195e2
  $fShowSpecificTree_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.SpecificTree -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: LexerTypes.SpecificTree)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.showST x (GHC.Types.[] @ GHC.Types.Char)))
                   s) -}
cadc4dd88ae52d1939dfeb3e511aff3a
  $fShowStatement :: GHC.Show.Show LexerTypes.Statement
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.Statement
                  LexerTypes.$fShowStatement_$cshowsPrec
                  LexerTypes.$fShowStatement_$cshow
                  LexerTypes.$fShowStatement_$cshowList -}
cadc4dd88ae52d1939dfeb3e511aff3a
  $fShowStatement1 ::
    LexerTypes.Statement -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.Statement) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowStatement_$cshow x))
                   s) -}
5526f020d66208751c85b3afb1bd43de
  $fShowStatementAttribute ::
    GHC.Show.Show LexerTypes.StatementAttribute
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.StatementAttribute
                  LexerTypes.$fShowStatementAttribute_$cshowsPrec
                  LexerTypes.$fShowStatementAttribute_$cshow
                  LexerTypes.$fShowStatementAttribute_$cshowList -}
5526f020d66208751c85b3afb1bd43de
  $fShowStatementAttribute1 ::
    LexerTypes.StatementAttribute -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (LexerTypes.$fShowStatementAttribute_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2) -}
5526f020d66208751c85b3afb1bd43de
  $fShowStatementAttribute_$cshow ::
    LexerTypes.StatementAttribute -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.StatementAttribute) ->
                 LexerTypes.$fShowStatementAttribute_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5526f020d66208751c85b3afb1bd43de
  $fShowStatementAttribute_$cshowList ::
    [LexerTypes.StatementAttribute] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.StatementAttribute
                   LexerTypes.$fShowStatementAttribute1) -}
5526f020d66208751c85b3afb1bd43de
  $fShowStatementAttribute_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.StatementAttribute -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
cadc4dd88ae52d1939dfeb3e511aff3a
  $fShowStatement_$cshow :: LexerTypes.Statement -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
cadc4dd88ae52d1939dfeb3e511aff3a
  $fShowStatement_$cshowList ::
    [LexerTypes.Statement] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [LexerTypes.Statement]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ LexerTypes.Statement
                   LexerTypes.$fShowStatement1
                   ls
                   s) -}
cadc4dd88ae52d1939dfeb3e511aff3a
  $fShowStatement_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.Statement -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: LexerTypes.Statement)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.$fShowStatement_$cshow x))
                   s) -}
c811cfd5a607fccc3baae6462b8eca1f
  $fShowTSPpackage :: GHC.Show.Show LexerTypes.TSPpackage
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.TSPpackage
                  LexerTypes.$fShowTSPpackage_$cshowsPrec
                  LexerTypes.$fShowTSPpackage_$cshow
                  LexerTypes.$fShowTSPpackage_$cshowList -}
c811cfd5a607fccc3baae6462b8eca1f
  $fShowTSPpackage1 :: LexerTypes.TSPpackage -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: LexerTypes.TSPpackage)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { LexerTypes.TSPpackage ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                 LexerTypes.$w$cshowsPrec14 0# ww1 ww2 ww3 ww4 ww5 ww6 ww7 w1 }) -}
c811cfd5a607fccc3baae6462b8eca1f
  $fShowTSPpackage_$cshow :: LexerTypes.TSPpackage -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.TSPpackage) ->
                 LexerTypes.$fShowTSPpackage_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c811cfd5a607fccc3baae6462b8eca1f
  $fShowTSPpackage_$cshowList ::
    [LexerTypes.TSPpackage] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.TSPpackage
                   LexerTypes.$fShowTSPpackage1) -}
c811cfd5a607fccc3baae6462b8eca1f
  $fShowTSPpackage_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.TSPpackage -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LexerTypes.TSPpackage)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { LexerTypes.TSPpackage ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                 LexerTypes.$w$cshowsPrec14
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   w2 } }) -}
4df2e074d05690b7f852eb8a56267ac6
  $fShowTemporal :: GHC.Show.Show LexerTypes.Temporal
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.Temporal
                  LexerTypes.$fShowTemporal_$cshowsPrec
                  LexerTypes.$fShowTemporal_$cshow
                  LexerTypes.$fShowTemporal_$cshowList -}
4df2e074d05690b7f852eb8a56267ac6
  $fShowTemporal1 :: LexerTypes.Temporal -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(1*U(U))><L,U>,
     Unfolding: (\ (w :: LexerTypes.Temporal) (w1 :: GHC.Base.String) ->
                 case w of ww { LexerTypes.N_Time ww1 ->
                 LexerTypes.$w$cshowsPrec15 0# ww1 w1 }) -}
e8840580e47a11b5bc49cc914004af68
  $fShowTemporal2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("N_Time "#) -}
4df2e074d05690b7f852eb8a56267ac6
  $fShowTemporal_$cshow :: LexerTypes.Temporal -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: LexerTypes.Temporal) ->
                 case w of ww { LexerTypes.N_Time ww1 ->
                 LexerTypes.$w$cshow2 ww1 }) -}
4df2e074d05690b7f852eb8a56267ac6
  $fShowTemporal_$cshowList ::
    [LexerTypes.Temporal] -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.Temporal
                   LexerTypes.$fShowTemporal1) -}
4df2e074d05690b7f852eb8a56267ac6
  $fShowTemporal_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.Temporal -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U))><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LexerTypes.Temporal)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { LexerTypes.N_Time ww3 ->
                 LexerTypes.$w$cshowsPrec15 ww1 ww3 w2 } }) -}
f37fc1f7f628e396311833bcccc3658f
  $fShowTotalTree :: GHC.Show.Show LexerTypes.TotalTree
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.TotalTree
                  LexerTypes.$fShowTotalTree_$cshowsPrec
                  LexerTypes.$fShowTotalTree_$cshow
                  LexerTypes.$fShowTotalTree_$cshowList -}
f37fc1f7f628e396311833bcccc3658f
  $fShowTotalTree1 ::
    LexerTypes.TotalTree -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: LexerTypes.TotalTree) (s :: GHC.Base.String)[OneShot] ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.showTT x (GHC.Types.[] @ GHC.Types.Char)))
                   s) -}
f37fc1f7f628e396311833bcccc3658f
  $fShowTotalTree_$cshow :: LexerTypes.TotalTree -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.TotalTree) ->
                 LexerTypes.showTT x (GHC.Types.[] @ GHC.Types.Char)) -}
f37fc1f7f628e396311833bcccc3658f
  $fShowTotalTree_$cshowList ::
    [LexerTypes.TotalTree] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [LexerTypes.TotalTree]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ LexerTypes.TotalTree
                   LexerTypes.$fShowTotalTree1
                   ls
                   s) -}
f37fc1f7f628e396311833bcccc3658f
  $fShowTotalTree_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.TotalTree -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (x :: LexerTypes.TotalTree)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b
                      c
                      n
                      (LexerTypes.showTT x (GHC.Types.[] @ GHC.Types.Char)))
                   s) -}
321d4bb033873a046e1650695f529c57
  $fShowTransitionTable :: GHC.Show.Show LexerTypes.TransitionTable
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.TransitionTable
                  LexerTypes.$fShowTransitionTable_$cshowsPrec
                  LexerTypes.$fShowTransitionTable_$cshow
                  LexerTypes.$fShowTransitionTable_$cshowList -}
321d4bb033873a046e1650695f529c57
  $fShowTransitionTable1 ::
    LexerTypes.TransitionTable -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (w :: LexerTypes.TransitionTable) ->
                 LexerTypes.$w$cshowsPrec16 0# w) -}
c72f515f9be6c428ecd9817f6213f6d2
  $fShowTransitionTableMethods ::
    GHC.Show.Show LexerTypes.TransitionTableMethods
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.TransitionTableMethods
                  LexerTypes.$fShowTransitionTableMethods_$cshowsPrec
                  LexerTypes.$fShowTransitionTableMethods_$cshow
                  LexerTypes.$fShowTransitionTableMethods_$cshowList -}
c72f515f9be6c428ecd9817f6213f6d2
  $fShowTransitionTableMethods1 ::
    LexerTypes.TransitionTableMethods -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: LexerTypes.TransitionTableMethods)
                   (w1 :: GHC.Base.String) ->
                 case w of ww { LexerTypes.TransModMethods ww1 ww2 ww3 ->
                 LexerTypes.$w$cshowsPrec17 0# ww1 ww2 ww3 w1 }) -}
c72f515f9be6c428ecd9817f6213f6d2
  $fShowTransitionTableMethods_$cshow ::
    LexerTypes.TransitionTableMethods -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.TransitionTableMethods) ->
                 LexerTypes.$fShowTransitionTableMethods_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c72f515f9be6c428ecd9817f6213f6d2
  $fShowTransitionTableMethods_$cshowList ::
    [LexerTypes.TransitionTableMethods] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.TransitionTableMethods
                   LexerTypes.$fShowTransitionTableMethods1) -}
c72f515f9be6c428ecd9817f6213f6d2
  $fShowTransitionTableMethods_$cshowsPrec ::
    GHC.Types.Int
    -> LexerTypes.TransitionTableMethods -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LexerTypes.TransitionTableMethods)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { LexerTypes.TransModMethods ww3 ww4 ww5 ->
                 LexerTypes.$w$cshowsPrec17 ww1 ww3 ww4 ww5 w2 } }) -}
321d4bb033873a046e1650695f529c57
  $fShowTransitionTable_$cshow ::
    LexerTypes.TransitionTable -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.TransitionTable) ->
                 LexerTypes.$fShowTransitionTable_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
321d4bb033873a046e1650695f529c57
  $fShowTransitionTable_$cshowList ::
    [LexerTypes.TransitionTable] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.TransitionTable
                   LexerTypes.$fShowTransitionTable1) -}
321d4bb033873a046e1650695f529c57
  $fShowTransitionTable_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.TransitionTable -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: LexerTypes.TransitionTable) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 LexerTypes.$w$cshowsPrec16 ww1 w1 }) -}
48110a9cdd317f7d31f7d5382813e9a4
  $fShowTreeHeap :: GHC.Show.Show LexerTypes.TreeHeap
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.TreeHeap
                  LexerTypes.$fShowTreeHeap_$cshowsPrec
                  LexerTypes.$fShowTreeHeap_$cshow
                  LexerTypes.$fShowTreeHeap_$cshowList -}
48110a9cdd317f7d31f7d5382813e9a4
  $fShowTreeHeap1 :: LexerTypes.TreeHeap -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: LexerTypes.TreeHeap) (w1 :: GHC.Base.String) ->
                 case w of ww { LexerTypes.THeap ww1 ww2 ww3 ->
                 LexerTypes.$w$cshowsPrec18 0# ww1 ww2 ww3 w1 }) -}
48110a9cdd317f7d31f7d5382813e9a4
  $fShowTreeHeap_$cshow :: LexerTypes.TreeHeap -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.TreeHeap) ->
                 LexerTypes.$fShowTreeHeap_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
48110a9cdd317f7d31f7d5382813e9a4
  $fShowTreeHeap_$cshowList ::
    [LexerTypes.TreeHeap] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.TreeHeap
                   LexerTypes.$fShowTreeHeap1) -}
48110a9cdd317f7d31f7d5382813e9a4
  $fShowTreeHeap_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.TreeHeap -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: LexerTypes.TreeHeap)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { LexerTypes.THeap ww3 ww4 ww5 ->
                 LexerTypes.$w$cshowsPrec18 ww1 ww3 ww4 ww5 w2 } }) -}
4d08ca0e73729c67fbd812bf662e0e37
  $fShowUStatement :: GHC.Show.Show LexerTypes.UStatement
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.UStatement
                  LexerTypes.$fShowUStatement_$cshowsPrec
                  LexerTypes.$fShowUStatement_$cshow
                  LexerTypes.$fShowUStatement_$cshowList -}
4d08ca0e73729c67fbd812bf662e0e37
  $fShowUStatement1 :: LexerTypes.UStatement -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (w :: LexerTypes.UStatement) ->
                 LexerTypes.$w$cshowsPrec19 0# w) -}
e8ac8f8091e8af2d2f8ecbd08f55b0f6
  $fShowUStatement2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UAssign "#) -}
7004be45f81fa3b9030669662d6e5a6d
  $fShowUStatement3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowUStatement4) -}
3e7107e07f689c3028a4439220776f16
  $fShowUStatement4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("U_String"#) -}
5784392320a4da08f6f9e418855a73b4
  $fShowUStatement5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowUStatement6) -}
3e783451a01ed94c93bcde5ea571c676
  $fShowUStatement6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("U_Int"#) -}
d4ac7bbf8e4a5d92c0553d2a56459424
  $fShowUStatement7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DeclAssign "#) -}
4d08ca0e73729c67fbd812bf662e0e37
  $fShowUStatement_$cshow :: LexerTypes.UStatement -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.UStatement) ->
                 LexerTypes.$fShowUStatement_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4d08ca0e73729c67fbd812bf662e0e37
  $fShowUStatement_$cshowList ::
    [LexerTypes.UStatement] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.UStatement
                   LexerTypes.$fShowUStatement1) -}
4d08ca0e73729c67fbd812bf662e0e37
  $fShowUStatement_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.UStatement -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: LexerTypes.UStatement) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 LexerTypes.$w$cshowsPrec19 ww1 w1 }) -}
e4f1694534b5add5fe23c9bcaf082473
  $fShowUType :: GHC.Show.Show LexerTypes.UType
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.UType
                  LexerTypes.$fShowUType_$cshowsPrec
                  LexerTypes.$fShowUType_$cshow
                  LexerTypes.$fShowUType_$cshowList -}
e4f1694534b5add5fe23c9bcaf082473
  $fShowUType1 :: LexerTypes.UType -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: LexerTypes.UType) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   LexerTypes.U_Int
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           LexerTypes.$fShowUStatement5)
                        eta
                   LexerTypes.U_String
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           LexerTypes.$fShowUStatement3)
                        eta }) -}
e4f1694534b5add5fe23c9bcaf082473
  $fShowUType_$cshow :: LexerTypes.UType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.UType) ->
                 case x of wild {
                   LexerTypes.U_Int -> LexerTypes.$fShowUStatement5
                   LexerTypes.U_String -> LexerTypes.$fShowUStatement3 }) -}
e4f1694534b5add5fe23c9bcaf082473
  $fShowUType_$cshowList :: [LexerTypes.UType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.UType
                   LexerTypes.$fShowUType1) -}
e4f1694534b5add5fe23c9bcaf082473
  $fShowUType_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.UType -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: LexerTypes.UType)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   LexerTypes.U_Int
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           LexerTypes.$fShowUStatement5)
                        eta
                   LexerTypes.U_String
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           LexerTypes.$fShowUStatement3)
                        eta }) -}
c2b979719dd3c7dfe36e1834bf38f676
  $fShowVectorInit :: GHC.Show.Show LexerTypes.VectorInit
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ LexerTypes.VectorInit
                  LexerTypes.$fShowVectorInit_$cshowsPrec
                  LexerTypes.$fShowVectorInit_$cshow
                  LexerTypes.$fShowVectorInit_$cshowList -}
c2b979719dd3c7dfe36e1834bf38f676
  $fShowVectorInit1 :: LexerTypes.VectorInit -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (w :: LexerTypes.VectorInit) ->
                 LexerTypes.$w$cshowsPrec20 0# w) -}
1827635dced58c0fd05b7e579b50ba8b
  $fShowVectorInit2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Explicit "#) -}
cf3aa13d7677fdce17102393482bd154
  $fShowVectorInit3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   LexerTypes.$fShowVectorInit4) -}
dc3403fbb1b14ec3e75874419c0459a8
  $fShowVectorInit4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Replicate "#) -}
c2b979719dd3c7dfe36e1834bf38f676
  $fShowVectorInit_$cshow :: LexerTypes.VectorInit -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: LexerTypes.VectorInit) ->
                 LexerTypes.$fShowVectorInit_$cshowsPrec
                   LexerTypes.$fShowArgumentAttribute2
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c2b979719dd3c7dfe36e1834bf38f676
  $fShowVectorInit_$cshowList ::
    [LexerTypes.VectorInit] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ LexerTypes.VectorInit
                   LexerTypes.$fShowVectorInit1) -}
c2b979719dd3c7dfe36e1834bf38f676
  $fShowVectorInit_$cshowsPrec ::
    GHC.Types.Int -> LexerTypes.VectorInit -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: LexerTypes.VectorInit) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 LexerTypes.$w$cshowsPrec20 ww1 w1 }) -}
27678d66a503a15001478b79a4cbf4dc
  $s$fEq[] :: GHC.Classes.Eq [LexerTypes.ActionAttribute]
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [LexerTypes.ActionAttribute]
                  (GHC.Classes.$fEq[]_$c==
                     @ LexerTypes.ActionAttribute
                     LexerTypes.$fEqActionAttribute)
                  LexerTypes.$s$fEq[]_$s$fEq[]_$c/= -}
1fc21c016df7df2acaac879e487ccc2b
  $s$fEq[]1 :: GHC.Classes.Eq [LexerTypes.RuleAttribute]
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [LexerTypes.RuleAttribute]
                  (GHC.Classes.$fEq[]_$c==
                     @ LexerTypes.RuleAttribute
                     LexerTypes.$fEqRuleAttribute)
                  LexerTypes.$s$fEq[]_$s$fEq[]_$c/=1 -}
5fe48c0aee3d8182600d8d457fcabf9d
  $s$fEq[]2 :: GHC.Classes.Eq [LexerTypes.MethodBodyAttribute]
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [LexerTypes.MethodBodyAttribute]
                  (GHC.Classes.$fEq[]_$c==
                     @ LexerTypes.MethodBodyAttribute
                     LexerTypes.$fEqMethodBodyAttribute)
                  LexerTypes.$s$fEq[]_$s$fEq[]_$c/=2 -}
91c12886700a1a5de4a78fabf4d2465f
  $s$fEq[]_$s$fEq[]_$c/= ::
    [LexerTypes.ActionAttribute]
    -> [LexerTypes.ActionAttribute] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [LexerTypes.ActionAttribute])
                   (y :: [LexerTypes.ActionAttribute]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ LexerTypes.ActionAttribute
                        LexerTypes.$fEqActionAttribute
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
f0268ffe887b8cc1efec47f5991ee439
  $s$fEq[]_$s$fEq[]_$c/=1 ::
    [LexerTypes.RuleAttribute]
    -> [LexerTypes.RuleAttribute] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [LexerTypes.RuleAttribute])
                   (y :: [LexerTypes.RuleAttribute]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ LexerTypes.RuleAttribute
                        LexerTypes.$fEqRuleAttribute
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
35d45fbef4a2ef35c3233a3e17e3c9d0
  $s$fEq[]_$s$fEq[]_$c/=2 ::
    [LexerTypes.MethodBodyAttribute]
    -> [LexerTypes.MethodBodyAttribute] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: [LexerTypes.MethodBodyAttribute])
                   (y :: [LexerTypes.MethodBodyAttribute]) ->
                 case GHC.Classes.$fEq[]_$c==
                        @ LexerTypes.MethodBodyAttribute
                        LexerTypes.$fEqMethodBodyAttribute
                        x
                        y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
7e5a459b3269bcbd91f7c3470ae6402f
  $s$fShow(,,)_$cshowsPrec1 ::
    GHC.Show.Show (GHC.Base.Maybe LexerTypes.BSVType)
  {- Unfolding: (GHC.Show.$fShowMaybe
                   @ LexerTypes.BSVType
                   LexerTypes.$fShowBSVType) -}
2332ab72dfdd4ccc6d37b2265f828ff6
  $s$fShow(,,)_$cshowsPrec2 ::
    GHC.Show.Show (GHC.Base.Maybe LexerTypes.PVSType)
  {- Unfolding: (GHC.Show.$fShowMaybe
                   @ LexerTypes.PVSType
                   LexerTypes.$fShowPVSType) -}
cc1469c24716bacba28c486ae7422b71
  $tc'Act_Doc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14532616847503454382##
                   1742879195082258687##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Act_Doc2
                   0#
                   LexerTypes.$tc'Act_Doc1) -}
5e9bbc36dd478fd7ce70af773a0b97f9
  $tc'Act_Doc1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0485e92fff47f433479d65dcf7c0947e
  $tc'Act_Doc2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Act_Doc3) -}
42140cf7169cb72b16fcfe73c9488d28
  $tc'Act_Doc3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Act_Doc"#) -}
02b32392c0704ff446ee333e19c2a148
  $tc'Action :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13077432473807014433##
                   15249714824546549527##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Action2
                   0#
                   LexerTypes.$tc'Action1) -}
d8a5636b1517dd433cf1bba5725aef2c
  $tc'Action1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
4e193058f8e9d1967295e8b9c19e28ac
  $tc'Action2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Action3) -}
3717d23b964b1a6d50a1de63375111b1
  $tc'Action3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Action"#) -}
6ec66b59e4bf99d88dd0deb31b2c6c53
  $tc'ActionCall :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4430974859566728834##
                   7344946898980053232##
                   LexerTypes.$trModule
                   LexerTypes.$tc'ActionCall2
                   0#
                   LexerTypes.$tc'ActionCall1) -}
f7142344486a1499f21b3a3e2133e2df
  $tc'ActionCall1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6590d8cb2a2b05436ea35037020166c5
  $tc'ActionCall2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'ActionCall3) -}
32f59808d86573d5bcd2f533d39273f2
  $tc'ActionCall3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ActionCall"#) -}
f88a4ab47292c9086ce8098fa4f5abd3
  $tc'ActionNameAP :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8041410221739884058##
                   16389628091772529741##
                   LexerTypes.$trModule
                   LexerTypes.$tc'ActionNameAP2
                   0#
                   LexerTypes.$tc'ActionNameAP1) -}
fbd8aa0487bdb4c7a090b961afdc135d
  $tc'ActionNameAP1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
5e7a150cd1df9da11f6ddca5fc89e693
  $tc'ActionNameAP2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'ActionNameAP3) -}
0a6cd26bab91e3e5dc010819578f53db
  $tc'ActionNameAP3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ActionNameAP"#) -}
429239354bed87d69c1a587974757588
  $tc'ActionValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16365580290215884342##
                   4172901003692956760##
                   LexerTypes.$trModule
                   LexerTypes.$tc'ActionValue2
                   0#
                   LexerTypes.$tc'ActionValue1) -}
06547ada83dd5c644d2ef2a48892fdeb
  $tc'ActionValue1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
18c4872e84c4ddbbfed30a63d3db2840
  $tc'ActionValue2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'ActionValue3) -}
1736f97cc052dd0d7a425ad480917280
  $tc'ActionValue3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ActionValue"#) -}
e2c395715ec03a445f95814eb347dcba
  $tc'Add :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1728446852378051657##
                   6142964190753988204##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Add2
                   0#
                   LexerTypes.$tc'Add1) -}
95cff6154ac7fa5ef9968603a9e6bef6
  $tc'Add1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
33afed2d82c05144bbb51dc80ec3e1a0
  $tc'Add2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Add3) -}
db365be6706494aa9fb29f2db348f2bf
  $tc'Add3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Add"#) -}
6291ee5c052d30636420d2f4528a6574
  $tc'And :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16870348381346119810##
                   11454511683695839395##
                   LexerTypes.$trModule
                   LexerTypes.$tc'And1
                   0#
                   LexerTypes.$tc'Add1) -}
3a008ce9da5332adae6a275160cf301b
  $tc'And1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'And2) -}
6f6b4a91ee3ae3aa295174d71707e1ec
  $tc'And2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'And"#) -}
150e81308a5e4189eb99b9878bdbc5c3
  $tc'Arg_Always_Enabled :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10924286614285378109##
                   5715175559391932200##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Arg_Always_Enabled2
                   0#
                   LexerTypes.$tc'Arg_Always_Enabled1) -}
656105ef647d735e473ff1a3c6c23777
  $tc'Arg_Always_Enabled1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
64bc121933048b4c4698bf2a229a47b9
  $tc'Arg_Always_Enabled2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'Arg_Always_Enabled3) -}
abe9d6d14fd382f99bc5c72d97962b7b
  $tc'Arg_Always_Enabled3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Arg_Always_Enabled"#) -}
8cccfaa54448e62318df82ff2151b580
  $tc'Arg_Always_Ready :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12031907128843172264##
                   7700738077764212701##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Arg_Always_Ready1
                   0#
                   LexerTypes.$tc'Arg_Always_Enabled1) -}
3d51e397bd483d57e35710362732287e
  $tc'Arg_Always_Ready1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Arg_Always_Ready2) -}
23e61fb94e39053bbec838443a0ddf47
  $tc'Arg_Always_Ready2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Arg_Always_Ready"#) -}
169c9e5ff4cc64947529f3cb6866685e
  $tc'Arg_Doc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10130301038300916742##
                   6356091599146740137##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Arg_Doc2
                   0#
                   LexerTypes.$tc'Arg_Doc1) -}
001eb5796fb9c90348e1013ac3774185
  $tc'Arg_Doc1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
52ea41eb1c2f61d431275a8c6d42611a
  $tc'Arg_Doc2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Arg_Doc3) -}
b32c9fccdfc61b79005b53aed1bac0c8
  $tc'Arg_Doc3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Arg_Doc"#) -}
2d3809f89658c6655b04754078b5b2f0
  $tc'Arg_Enable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17352331446500311143##
                   8779576246387431382##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Arg_Enable1
                   0#
                   LexerTypes.$tc'Arg_Doc1) -}
5027a9d060f1d66930e97e81f26c1bbf
  $tc'Arg_Enable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Arg_Enable2) -}
aef1d869a5c74ce1f66d99fc73674033
  $tc'Arg_Enable2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Arg_Enable"#) -}
55013b70b008edfe2c392d6f4083380b
  $tc'Arg_Port :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9675453475789660732##
                   14956077020969241409##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Arg_Port1
                   0#
                   LexerTypes.$tc'Arg_Doc1) -}
83b2f588508a8673d16bfa6696ac70d6
  $tc'Arg_Port1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Arg_Port2) -}
0cb397c72a897f6cb54e91169644fc25
  $tc'Arg_Port2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Arg_Port"#) -}
55b97d0bf2815dce7decd56311d7bdb4
  $tc'Arg_Prefix :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1951368755643063987##
                   4494473163253131621##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Arg_Prefix1
                   0#
                   LexerTypes.$tc'Arg_Doc1) -}
73c742c5461b1ad35e63f99de146ab8f
  $tc'Arg_Prefix1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Arg_Prefix2) -}
441e9aca258dc78b72f57c789681591c
  $tc'Arg_Prefix2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Arg_Prefix"#) -}
8bbb553249716df52f4bd48add1482a4
  $tc'Arg_Ready :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3479341974891591005##
                   13369943326801289821##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Arg_Ready1
                   0#
                   LexerTypes.$tc'Arg_Doc1) -}
67a629295ece07b10509408ba23e5c0f
  $tc'Arg_Ready1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Arg_Ready2) -}
824effcddf826ced77f74cfa82290bfd
  $tc'Arg_Ready2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Arg_Ready"#) -}
b5a930f00f99aee8c1aa95e099fd5751
  $tc'Arg_Result :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12918286624660220648##
                   9426847709037830117##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Arg_Result1
                   0#
                   LexerTypes.$tc'Arg_Doc1) -}
0fa480e0701ec7c792a39cc4cac052d9
  $tc'Arg_Result1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Arg_Result2) -}
8f57097e71cda89cc0f64b099267daa4
  $tc'Arg_Result2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Arg_Result"#) -}
505b4f2e09fe4964329e7c64128822fe
  $tc'B2B :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11280047004625236406##
                   12790587805843438288##
                   LexerTypes.$trModule
                   LexerTypes.$tc'B2B2
                   0#
                   LexerTypes.$tc'B2B1) -}
1d36f0d298d836038d771b57de88bc3d
  $tc'B2B1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
7995aa44c84587c0cb61730482cef240
  $tc'B2B2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'B2B3) -}
5ad510ec25228f7b99e278eabb5c66f0
  $tc'B2B3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'B2B"#) -}
6530fd60e3c5acb3ce0ceebefabea526
  $tc'B2P :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14171854989220569922##
                   13026340079600831242##
                   LexerTypes.$trModule
                   LexerTypes.$tc'B2P1
                   0#
                   LexerTypes.$tc'B2B1) -}
a6be93753ca7d1e103bfd8ab51fd5b30
  $tc'B2P1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'B2P2) -}
46bacbf10d5c343bc04e625b6f1bec94
  $tc'B2P2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'B2P"#) -}
3554a903d6cb70c52305b63364beecd6
  $tc'BSVModuleDec :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4029560981382040311##
                   10359739059335881873##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSVModuleDec2
                   0#
                   LexerTypes.$tc'BSVModuleDec1) -}
3baed7dd1e5241c37ac73f735cbd2417
  $tc'BSVModuleDec1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
cf32dc19424d22697fed1101a2960427
  $tc'BSVModuleDec2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSVModuleDec3) -}
d00aec9d08ac166192d908d9837c2a60
  $tc'BSVModuleDec3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSVModuleDec"#) -}
b83d6f5473db06838afcf185f45aad12
  $tc'BSVPackage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18186538021313237869##
                   15485881418065383672##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSVPackage2
                   0#
                   LexerTypes.$tc'BSVPackage1) -}
265ac0d5160a51a2c5e0f3254be1af0e
  $tc'BSVPackage1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
48217c28e2ef1344ad5b9fd6f210ab75
  $tc'BSVPackage2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSVPackage3) -}
0ea2ca3a397f090c20a647453b0f34f9
  $tc'BSVPackage3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSVPackage"#) -}
2279b5504e100a41e22f0400f00b78d6
  $tc'BSV_Bit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12122241752410307373##
                   2243152284271048523##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSV_Bit2
                   0#
                   LexerTypes.$tc'BSV_Bit1) -}
012cce1b3824294ae3aecbabbe73cf1c
  $tc'BSV_Bit1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
89a347f7c2b25b639120fc0445dd4324
  $tc'BSV_Bit2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSV_Bit3) -}
c0b3496438708fb7e9ff6fef12194530
  $tc'BSV_Bit3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSV_Bit"#) -}
b4136f4433b0bb8ba1a3d0427ddb6afa
  $tc'BSV_Bool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18375482554719949618##
                   6022533747560064527##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSV_Bool2
                   0#
                   LexerTypes.$tc'BSV_Bool1) -}
2fc191e1c6d014628e3bc734321699a3
  $tc'BSV_Bool1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
77a8c030eae00ab4dcc361f886dfb0fc
  $tc'BSV_Bool2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSV_Bool3) -}
188ed0a205e860674f0f01d5d644d117
  $tc'BSV_Bool3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSV_Bool"#) -}
4a9cf795183d39e05a601240acbf0930
  $tc'BSV_Custom :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5197121086591487639##
                   8683726766313257199##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSV_Custom2
                   0#
                   LexerTypes.$tc'BSV_Custom1) -}
6ee16916fa723bd222f9ad38d1da7b78
  $tc'BSV_Custom1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
95e6d16670020545f113280144ff46bf
  $tc'BSV_Custom2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSV_Custom3) -}
19ef77aa3a69ec21146e2ce0f0988814
  $tc'BSV_Custom3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSV_Custom"#) -}
db71a9b6b8ace04c0a9fac4591965bc4
  $tc'BSV_Enumeration :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16672058957888819807##
                   12140673559074564585##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSV_Enumeration2
                   0#
                   LexerTypes.$tc'BSV_Enumeration1) -}
b511bb3a82f72006de78669b1fa6247a
  $tc'BSV_Enumeration1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
04ed57942f8879ee6ab48c33826a7714
  $tc'BSV_Enumeration2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSV_Enumeration3) -}
243f0c72ed79e3bafbfe252aa195b622
  $tc'BSV_Enumeration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSV_Enumeration"#) -}
b765b0e5c853bb05ea4a605a51b83ec9
  $tc'BSV_Fifo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5526910697212643388##
                   1331196688599088802##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSV_Fifo2
                   0#
                   LexerTypes.$tc'BSV_Fifo1) -}
cd96e42f42ab531be639e252f2194560
  $tc'BSV_Fifo1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d0ad13c52b72056a2ef3bf30f10bd148
  $tc'BSV_Fifo2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSV_Fifo3) -}
ab6d8b2e0cb8a10f794455b22a86adad
  $tc'BSV_Fifo3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSV_Fifo"#) -}
ee52d9ac43b7fd5b07f241df12dd60f8
  $tc'BSV_Int :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5788545915998305304##
                   2229720077568996694##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSV_Int1
                   0#
                   LexerTypes.$tc'BSV_Bit1) -}
c821038cfa4ab62036d816e94676af94
  $tc'BSV_Int1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSV_Int2) -}
628c7f0d9a126ca79fc84d505a5f9635
  $tc'BSV_Int2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSV_Int"#) -}
e21d8c3c91cf30ad951504c93d82ae4d
  $tc'BSV_Maybe :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1269221831747443934##
                   18218200597014939148##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSV_Maybe2
                   0#
                   LexerTypes.$tc'BSV_Maybe1) -}
0d4b7de362478e0cccfcc8aa2903edca
  $tc'BSV_Maybe1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3199294b805169451f11fdb6c207b68e
  $tc'BSV_Maybe2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSV_Maybe3) -}
5123a9007dd733df5be26eaf8efa8307
  $tc'BSV_Maybe3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSV_Maybe"#) -}
736b846e1db9a3e6581b5acd4fe268a4
  $tc'BSV_Real :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2227536441864842991##
                   8379920535640459203##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSV_Real1
                   0#
                   LexerTypes.$tc'BSV_Bool1) -}
e6ed3a69f729bbc845db801fada9f56d
  $tc'BSV_Real1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSV_Real2) -}
d77f6f85fc4dee1e3bb778a6e11bdf72
  $tc'BSV_Real2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSV_Real"#) -}
e726db17428ae2bf42147f90d3f9708e
  $tc'BSV_Reg :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12409771550469118735##
                   14613707904347419924##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSV_Reg2
                   0#
                   LexerTypes.$tc'BSV_Reg1) -}
0396ce7f1e01b02819b31dfe18e8286d
  $tc'BSV_Reg1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
5a628dcf650b7c5e15afb1678f927a15
  $tc'BSV_Reg2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSV_Reg3) -}
10f3422212b67e229f3113a2d7e54e05
  $tc'BSV_Reg3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSV_Reg"#) -}
30ef7c10dd347deefbd206d10c2e9ad2
  $tc'BSV_RegFile :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4562041245903708202##
                   706739543014934231##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSV_RegFile2
                   0#
                   LexerTypes.$tc'BSV_RegFile1) -}
4c09164ecab3d1f91e0e1c61954e95cb
  $tc'BSV_RegFile1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ddb280a9eb986bec9302cca7a97a9fc1
  $tc'BSV_RegFile2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSV_RegFile3) -}
2c7a1be0612789d5c30edae12535e836
  $tc'BSV_RegFile3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSV_RegFile"#) -}
5c54d62f1d9df89ccb5e6b679f60e9b7
  $tc'BSV_Struct :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13178315699615164791##
                   7319567847373523913##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSV_Struct2
                   0#
                   LexerTypes.$tc'BSV_Struct1) -}
2c8f66b4d949270ef5b9b88d554a785d
  $tc'BSV_Struct1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
140553f93be80adf1bdaf4df5954e201
  $tc'BSV_Struct2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSV_Struct3) -}
d87dc3b33edc1342f78945e2e41bc249
  $tc'BSV_Struct3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSV_Struct"#) -}
8f7b4da85573a4cd3dff7aeadafede3e
  $tc'BSV_SubModuleDec :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12684647115404737607##
                   5356956134470925185##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSV_SubModuleDec2
                   0#
                   LexerTypes.$tc'BSV_SubModuleDec1) -}
8f778299207ec636bd96eee4473e93e4
  $tc'BSV_SubModuleDec1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
55adca2cb7b4f1e97886b6fabb345f3a
  $tc'BSV_SubModuleDec2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSV_SubModuleDec3) -}
d5ca3849479800323c1f943116f681a2
  $tc'BSV_SubModuleDec3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSV_SubModuleDec"#) -}
d2c04948f90f84ba997eecff6b1ab3df
  $tc'BSV_Synonym :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6935452876925340785##
                   6947128804199197916##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSV_Synonym2
                   0#
                   LexerTypes.$tc'BSV_Synonym1) -}
2c8c3f893d95b0fd0a471e67d963fae1
  $tc'BSV_Synonym1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
008e97e0dbff9beaf6ffe4fea67c83c1
  $tc'BSV_Synonym2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSV_Synonym3) -}
71504b05d3f970b146d109739fa314c4
  $tc'BSV_Synonym3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSV_Synonym"#) -}
79472f50d6203be8ec5f46b6a87454a4
  $tc'BSV_UInt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7374684128020825288##
                   6404598456027945793##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSV_UInt1
                   0#
                   LexerTypes.$tc'BSV_Bit1) -}
cd9296c3577730a8e995f2d77b4b0dc9
  $tc'BSV_UInt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSV_UInt2) -}
ac4150236e83a7a52334a81e8eca86d5
  $tc'BSV_UInt2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSV_UInt"#) -}
c2f1dd3e414f613775ecf69a8074ce27
  $tc'BSV_Vector :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6589868413631028918##
                   12080844029222931406##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BSV_Vector2
                   0#
                   LexerTypes.$tc'BSV_Vector1) -}
bed63327009db9b071af49c8549c09ae
  $tc'BSV_Vector1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ec0f0f56058ebac64521544c449ae025
  $tc'BSV_Vector2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BSV_Vector3) -}
f091978796a77ec55d0a10d27315ab7a
  $tc'BSV_Vector3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BSV_Vector"#) -}
8621cf87e34a076006c4e899e7c96ea8
  $tc'Binding :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10855628972255686673##
                   14572406720619504120##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Binding2
                   0#
                   LexerTypes.$tc'Binding1) -}
3e644427c2c3bc8ad4b851cc0d29e58d
  $tc'Binding1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
38b9ed4a7dd2693abf913ec63dca5ee3
  $tc'Binding2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Binding3) -}
2a050ee05317f8f021931cc04bc3490b
  $tc'Binding3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Binding"#) -}
d5ee761b60b8f15dceae58fe62ed723b
  $tc'BitConcat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15811717204649436621##
                   398057037268463017##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BitConcat2
                   0#
                   LexerTypes.$tc'BitConcat1) -}
503f4529268030a1f143ec5969a58888
  $tc'BitConcat1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c71d00f092722dff97c24dcf6b4bd50f
  $tc'BitConcat2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BitConcat3) -}
adbe2cde9d7929ef18be5c960915c5ec
  $tc'BitConcat3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BitConcat"#) -}
094adfb9e3b403643c32334b73a7c98a
  $tc'BitSelect :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14212798999833033703##
                   8277704021009749741##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BitSelect1
                   0#
                   LexerTypes.$tc'Add1) -}
10e3801ac439b28d43ba0bf035b21504
  $tc'BitSelect1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BitSelect2) -}
28b4f70c7b17b928bed438598f1b6299
  $tc'BitSelect2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BitSelect"#) -}
9f8dbb2ef5ecd560f3af1cad1699aff3
  $tc'BitSelectRange :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   751872920836859314##
                   16887481082069264767##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BitSelectRange2
                   0#
                   LexerTypes.$tc'BitSelectRange1) -}
fc0d2b2b055862475f9d95e61e6d7d17
  $tc'BitSelectRange1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a6bff693d566234ff9ebf580d71bf85f
  $tc'BitSelectRange2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BitSelectRange3) -}
032ccad7811fcd9ca255708340ebe2eb
  $tc'BitSelectRange3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BitSelectRange"#) -}
effe3f75cd2ae51e4abeb48e91f50084
  $tc'BitwiseAND :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15548724813923373000##
                   8253718093452861208##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BitwiseAND1
                   0#
                   LexerTypes.$tc'Add1) -}
f9247f9cb2b928bffdd8fa0daed6e6bf
  $tc'BitwiseAND1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BitwiseAND2) -}
781746e9296c56c73069775c4a77c382
  $tc'BitwiseAND2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BitwiseAND"#) -}
f5050147e509a7c2e7b805a76493ffe2
  $tc'BitwiseOR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   733815232335038317##
                   4343927526783555954##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BitwiseOR1
                   0#
                   LexerTypes.$tc'Add1) -}
b2cba6022533d04f1d451ac39f59221e
  $tc'BitwiseOR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BitwiseOR2) -}
f4bfb291e0d1007a169af7892bc77841
  $tc'BitwiseOR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BitwiseOR"#) -}
86a20a5b437912b8ece82b1feba722dd
  $tc'BitwiseXOR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17849623247991944999##
                   1653409442862282679##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BitwiseXOR1
                   0#
                   LexerTypes.$tc'Add1) -}
246a477afa01c316ca6510da7683a67e
  $tc'BitwiseXOR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BitwiseXOR2) -}
4add5fbdfe5a163205b5392cde6aa072
  $tc'BitwiseXOR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BitwiseXOR"#) -}
9527ef32896d308b2909fbe1c896b6ac
  $tc'BypassFIFO :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12109756687421523657##
                   6347882608724667525##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BypassFIFO2
                   0#
                   LexerTypes.$tc'BypassFIFO1) -}
d53a06754827ba9b4f7f28afff6d8438
  $tc'BypassFIFO1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
dc3824bf424aff02f947144200655fbb
  $tc'BypassFIFO2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BypassFIFO3) -}
40acebb1da5e0607a5e0cfdb83dc8a42
  $tc'BypassFIFO3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BypassFIFO"#) -}
58b145c0d027e566d87c6379c033a2b7
  $tc'BypassFIFOF :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5344593906010842807##
                   4015074781017248625##
                   LexerTypes.$trModule
                   LexerTypes.$tc'BypassFIFOF1
                   0#
                   LexerTypes.$tc'BypassFIFO1) -}
e524f3ecd6653cbbb1c272c9234eedf9
  $tc'BypassFIFOF1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'BypassFIFOF2) -}
7cc2e56c97db8f74eb0aa64bbfe9243c
  $tc'BypassFIFOF2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'BypassFIFOF"#) -}
73f4a9d09cb6697440aec0974257ef1e
  $tc'CasesOf :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3781795820231106581##
                   6119262689415762261##
                   LexerTypes.$trModule
                   LexerTypes.$tc'CasesOf2
                   0#
                   LexerTypes.$tc'CasesOf1) -}
bf7f6efa979c8a4a25dab989c2fcb34f
  $tc'CasesOf1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
75f30fa00971e2dcec851f296e9fd686
  $tc'CasesOf2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'CasesOf3) -}
f8d1621599b75185726ef83c33b5130a
  $tc'CasesOf3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CasesOf"#) -}
4b4c92b6d3c494a80e916d33136cf4d9
  $tc'Clock_Ancestors :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2143800395788657497##
                   5980493312112110219##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Clock_Ancestors2
                   0#
                   LexerTypes.$tc'Clock_Ancestors1) -}
35139e758d5f1e16719004e4bd941130
  $tc'Clock_Ancestors1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
5fe1fe7acf49acf9e59f2a4557c16932
  $tc'Clock_Ancestors2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Clock_Ancestors3) -}
3c40ee1f2986bfde6d537c2b364db874
  $tc'Clock_Ancestors3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Clock_Ancestors"#) -}
34266df68bfcd23c4e9f6e5282ccaaf4
  $tc'Clock_Family :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2694849558437239767##
                   17568122457692528988##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Clock_Family1
                   0#
                   LexerTypes.$tc'Clock_Ancestors1) -}
d61406c7fc709a17d32ca1ad400906e2
  $tc'Clock_Family1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Clock_Family2) -}
7159994eb2ec756a746776a2133c04a2
  $tc'Clock_Family2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Clock_Family"#) -}
bf8f355938290d2f995a1b40052b45fc
  $tc'Clock_Prefix :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12592817340575937597##
                   13602934622567716038##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Clock_Prefix2
                   0#
                   LexerTypes.$tc'Clock_Prefix1) -}
c41f61214c33aab9bf445cd35a3243ae
  $tc'Clock_Prefix1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
8492f50c5e4b4847f624c61af9a08d64
  $tc'Clock_Prefix2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Clock_Prefix3) -}
ae50df96501d37867291b2c0a003a773
  $tc'Clock_Prefix3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Clock_Prefix"#) -}
177c263a4b76aa79634b79f926633582
  $tc'CompoundMacro :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13963680850794593161##
                   6060155046960232750##
                   LexerTypes.$trModule
                   LexerTypes.$tc'CompoundMacro2
                   0#
                   LexerTypes.$tc'CompoundMacro1) -}
c4a227deedb3d7faabda39e0b2f95ff7
  $tc'CompoundMacro1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4aa72fe8aa61e36753c4af8f471b0b40
  $tc'CompoundMacro2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'CompoundMacro3) -}
c2e947abb5837a6d0019a0845e213b92
  $tc'CompoundMacro3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CompoundMacro"#) -}
ffbd2ad96d127fdab2e36dd8f68e0562
  $tc'DWire :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5080240763222256335##
                   12282595977136938618##
                   LexerTypes.$trModule
                   LexerTypes.$tc'DWire1
                   0#
                   LexerTypes.$tc'BSV_Reg1) -}
457eb3870a4df359dd95bdccaa0d5ac3
  $tc'DWire1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'DWire2) -}
92fed432da363767433f875c42cd623f
  $tc'DWire2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DWire"#) -}
9e25f02f0ed710ad8801da6fc4299bea
  $tc'DeclAssign :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5011996784110221000##
                   3288613989254471781##
                   LexerTypes.$trModule
                   LexerTypes.$tc'DeclAssign2
                   0#
                   LexerTypes.$tc'DeclAssign1) -}
ff3644d0530a6d79d24f2f945555f5c4
  $tc'DeclAssign1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
cd663fffc9e54f17a086ab89d3b2e432
  $tc'DeclAssign2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'DeclAssign3) -}
d9c17d3c657b3175d0c55cf943a87bc1
  $tc'DeclAssign3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DeclAssign"#) -}
03ae1a6f31b30fb4e79f473424bc7333
  $tc'Default_Clock_Gate :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3651399370929240295##
                   327213529306337317##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Default_Clock_Gate1
                   0#
                   LexerTypes.$tc'Clock_Prefix1) -}
6e6d672a1a4d9ac82ba4abb5b5817609
  $tc'Default_Clock_Gate1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'Default_Clock_Gate2) -}
1465924e0c70e2b08e717971baab0692
  $tc'Default_Clock_Gate2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Default_Clock_Gate"#) -}
1aaa70064e585c82be1b2e4fed9793b1
  $tc'Default_Clock_OSC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1713132559935642130##
                   13833719843991773698##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Default_Clock_OSC1
                   0#
                   LexerTypes.$tc'Clock_Prefix1) -}
01a71ac1b2610369e363f90c78f785b0
  $tc'Default_Clock_OSC1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Default_Clock_OSC2) -}
745f2d65c4d9bcf790834ba08139b6bb
  $tc'Default_Clock_OSC2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Default_Clock_OSC"#) -}
05ff27852eeaf86e904fbb9d182e32d5
  $tc'Default_Gate_Inhigh :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5909371121561223118##
                   4051749524933924338##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Default_Gate_Inhigh2
                   0#
                   LexerTypes.$tc'Default_Gate_Inhigh1) -}
78e832d419d98337320ac88b78e5c83c
  $tc'Default_Gate_Inhigh1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
fb609b2f5aefa5bf4f9d6902d5c19555
  $tc'Default_Gate_Inhigh2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'Default_Gate_Inhigh3) -}
78935e63ed6dd324f5e557c02e55902d
  $tc'Default_Gate_Inhigh3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Default_Gate_Inhigh"#) -}
2a1837c75a531ba37f60eede11a2515c
  $tc'Default_Gate_Unused :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3168425934310563013##
                   3542015186971215809##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Default_Gate_Unused1
                   0#
                   LexerTypes.$tc'Default_Gate_Inhigh1) -}
8370398ec8a0a3a571468bc7842aafcb
  $tc'Default_Gate_Unused1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'Default_Gate_Unused2) -}
b704a3f460381146f509c3e10d65c571
  $tc'Default_Gate_Unused2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Default_Gate_Unused"#) -}
5dde0884bef1694cc6ae8d7072d28c79
  $tc'Default_Reset :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9737765625775339043##
                   6308375984430072702##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Default_Reset1
                   0#
                   LexerTypes.$tc'Clock_Prefix1) -}
3e9fb338830a8fbd92bdf6e1d0f7c4a7
  $tc'Default_Reset1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Default_Reset2) -}
176c1112dffa3e1a8918babac6ff71f9
  $tc'Default_Reset2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Default_Reset"#) -}
0eea64e6ca62de72124816a4edb18f3b
  $tc'DepthParamFIFO :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15469177123102244106##
                   14066588444358118031##
                   LexerTypes.$trModule
                   LexerTypes.$tc'DepthParamFIFO1
                   0#
                   LexerTypes.$tc'BypassFIFO1) -}
22417ba9d65b3f43f025dac327435774
  $tc'DepthParamFIFO1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'DepthParamFIFO2) -}
45df7c618c78e81eff8d3ad1f696f723
  $tc'DepthParamFIFO2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DepthParamFIFO"#) -}
032c9936742d640c886380af7c450f79
  $tc'Descending_Urgency :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14363972527436262840##
                   12186666829417868421##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Descending_Urgency1
                   0#
                   LexerTypes.$tc'Clock_Ancestors1) -}
a462139de368330dbb4a4a7d5b8bbd46
  $tc'Descending_Urgency1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'Descending_Urgency2) -}
1dc060ddb7161cc5c4f4ec1d3ca6bea0
  $tc'Descending_Urgency2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Descending_Urgency"#) -}
01503d4c2b9eb69f2e0ee4ff88043fa1
  $tc'Divide :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4642573940871043523##
                   4492112628672437109##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Divide1
                   0#
                   LexerTypes.$tc'Add1) -}
03bdf25f839f2ace7de3c75b4502c0d3
  $tc'Divide1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Divide2) -}
13d76ccdb05302e69b925b9dd34caf31
  $tc'Divide2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Divide"#) -}
852dd5a783f7d8a3b7d0f354e5cdb6ea
  $tc'Equals :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9319973750254743326##
                   10891029300184570744##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Equals1
                   0#
                   LexerTypes.$tc'Add1) -}
f5732b8294421f9e2b65b8cc19b2adc6
  $tc'Equals1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Equals2) -}
21e3a24af52943a5a44138a9bfb21633
  $tc'Equals2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Equals"#) -}
4e90c28b3cebaa5cfc8b0ec0318ed7db
  $tc'Exp_FunctionCall :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6829314916386264378##
                   1136747369083201279##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Exp_FunctionCall2
                   0#
                   LexerTypes.$tc'Exp_FunctionCall1) -}
1b9bfc270edb611632e1e36207d190d0
  $tc'Exp_FunctionCall1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
18045d01ae375b11d3a005295abf1859
  $tc'Exp_FunctionCall2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Exp_FunctionCall3) -}
6f688aee7e8ad3616f6a945407b877c8
  $tc'Exp_FunctionCall3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Exp_FunctionCall"#) -}
c555f5cd3a4ee98f0c72b5c9575f4e2a
  $tc'Exp_If :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8685156433528918377##
                   9565352463050044322##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Exp_If1
                   0#
                   LexerTypes.$tc'BitSelectRange1) -}
991bc63c7ada14c9618b8cdba7039f1a
  $tc'Exp_If1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Exp_If2) -}
0ba9ba4b0ecc59d2c50b52e4bdd37cf0
  $tc'Exp_If2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Exp_If"#) -}
603955c0a416cd781ed884da211bd9df
  $tc'Exp_MethodCall :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13341900423754396588##
                   12054576498596405053##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Exp_MethodCall2
                   0#
                   LexerTypes.$tc'Exp_MethodCall1) -}
b03593efe2c59f44c9de46ba6194d87b
  $tc'Exp_MethodCall1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
27216654b03c2003eca9de4c7270251b
  $tc'Exp_MethodCall2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Exp_MethodCall3) -}
fe77b3cfb33a09625f9d9c1f1801923e
  $tc'Exp_MethodCall3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Exp_MethodCall"#) -}
6c6ffb5f052a882404b46f9d2d0ce5a9
  $tc'Explicit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4981189548762338970##
                   17365010375596645918##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Explicit2
                   0#
                   LexerTypes.$tc'Explicit1) -}
8494d26aae49155318c490dcb84cbca3
  $tc'Explicit1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d1285f70059882dfd6b4cfa1756c5959
  $tc'Explicit2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Explicit3) -}
9810446fc280cf8579170066d6f70e84
  $tc'Explicit3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Explicit"#) -}
53f2ea1965b1445230be4554cef01eb0
  $tc'FIFO :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1419737320174849861##
                   13616466012998199597##
                   LexerTypes.$trModule
                   LexerTypes.$tc'FIFO2
                   0#
                   LexerTypes.$tc'BypassFIFO1) -}
7b87528e7a145186a6f925ff62bcf84a
  $tc'FIFO1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13316721283665207439##
                   11896063306264457710##
                   LexerTypes.$trModule
                   LexerTypes.$tc'FIFO4
                   0#
                   LexerTypes.$tc'BypassFIFO1) -}
fba36d53e75c6f760d19c20d237d7923
  $tc'FIFO2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'FIFO3) -}
3353307a3d7cf4fda6e9aab036b1ce92
  $tc'FIFO3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FIFO"#) -}
a4a49b43ea446344d81b2237cbc39f14
  $tc'FIFO4 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'FIFO5) -}
87462187ba26035df0baa353fe226711
  $tc'FIFO5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FIFO1"#) -}
7849f0802b9dd3e133157dd328dc3d6d
  $tc'FIFOF :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3621016691533202921##
                   4747785677150022210##
                   LexerTypes.$trModule
                   LexerTypes.$tc'FIFOF2
                   0#
                   LexerTypes.$tc'BypassFIFO1) -}
78cba71402543909916f8c1027c67020
  $tc'FIFOF1 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9764016676107949016##
                   16533995730938169298##
                   LexerTypes.$trModule
                   LexerTypes.$tc'FIFOF4
                   0#
                   LexerTypes.$tc'BypassFIFO1) -}
6ab750624ad7211175ad38cf129678fa
  $tc'FIFOF2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'FIFOF3) -}
20f45c6682b6d7796a939ec3159588b4
  $tc'FIFOF3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FIFOF"#) -}
047c5a03a5da1f01716fbf53c20658ba
  $tc'FIFOF4 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'FIFOF5) -}
f36c98e6f59fbf4f0551c4605f9fa833
  $tc'FIFOF5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FIFOF1"#) -}
9b787edd29e176407f6f7797f9309930
  $tc'FieldAccess :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15789999423361657628##
                   8493048670692701015##
                   LexerTypes.$trModule
                   LexerTypes.$tc'FieldAccess2
                   0#
                   LexerTypes.$tc'FieldAccess1) -}
937b843b63be70ccb07e63ffa5fab8be
  $tc'FieldAccess1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b393da03681720a276df12cb21e3f0da
  $tc'FieldAccess2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'FieldAccess3) -}
f072475d8ba1293b50a169bcbda5e7a5
  $tc'FieldAccess3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FieldAccess"#) -}
9f89841b00b9f4afbaad021f5e2162e9
  $tc'Fire_When_Enabled :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10033886850760835164##
                   2913966956574948080##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Fire_When_Enabled2
                   0#
                   LexerTypes.$tc'Fire_When_Enabled1) -}
ae18d6d10d95fdac9c213d70cd25224b
  $tc'Fire_When_Enabled1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
ee869c7e97d060afc41b2a6b6e569670
  $tc'Fire_When_Enabled2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Fire_When_Enabled3) -}
8a3672fe82ea85436822318d7aa6ae21
  $tc'Fire_When_Enabled3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Fire_When_Enabled"#) -}
edf06c9e7c809620a500859ca6d601f7
  $tc'ForLoop :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14187578281303857346##
                   8079635279732317184##
                   LexerTypes.$trModule
                   LexerTypes.$tc'ForLoop2
                   0#
                   LexerTypes.$tc'ForLoop1) -}
9dce227876e076a2c9e2a319ffbf3f22
  $tc'ForLoop1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
9fb89f3de2f86eb802c935cbe830995c
  $tc'ForLoop2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'ForLoop3) -}
4d96a4733ba59769f62c63154f76c1ad
  $tc'ForLoop3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ForLoop"#) -}
948ea97097156328acfceeddb05ea584
  $tc'FromMaybe :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7684495244033887535##
                   12318376222570750582##
                   LexerTypes.$trModule
                   LexerTypes.$tc'FromMaybe2
                   0#
                   LexerTypes.$tc'FromMaybe1) -}
ccc514fb79e1186a1f0980c892c46ca2
  $tc'FromMaybe1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
3a8d00319df6e791101b85ee52248599
  $tc'FromMaybe2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'FromMaybe3) -}
112e795a96c50c92f2a1a19cd3304b34
  $tc'FromMaybe3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FromMaybe"#) -}
4b0fa92e61e19d30ba570452c560923b
  $tc'Gate_All_Clocks :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14796055673016939232##
                   18170209400841214619##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Gate_All_Clocks1
                   0#
                   LexerTypes.$tc'Default_Gate_Inhigh1) -}
45a3260e7f0476416ac484d972d07770
  $tc'Gate_All_Clocks1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Gate_All_Clocks2) -}
57510adaecbc34e2d4acb3d91ae1956a
  $tc'Gate_All_Clocks2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Gate_All_Clocks"#) -}
52cc97209252213e2c1c719ca8420faf
  $tc'Gate_Input_Clocks :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10891310157793785370##
                   5383119832378960396##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Gate_Input_Clocks1
                   0#
                   LexerTypes.$tc'Clock_Ancestors1) -}
35cf2f5c743a6999e1f1d673a987c65d
  $tc'Gate_Input_Clocks1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Gate_Input_Clocks2) -}
3c51f76a9ba414d7e02430ac40f9824b
  $tc'Gate_Input_Clocks2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Gate_Input_Clocks"#) -}
71f1c39d1979ca8d130fd3a7c242fd44
  $tc'Gate_Prefix :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12929607179280568355##
                   16213971842452475650##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Gate_Prefix1
                   0#
                   LexerTypes.$tc'Clock_Prefix1) -}
36baf9b123e221d870b73ca8b988739c
  $tc'Gate_Prefix1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Gate_Prefix2) -}
6168d24749f29c04456d6061fec6748a
  $tc'Gate_Prefix2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Gate_Prefix"#) -}
254888331b84fb07ecbf73109e6c8a32
  $tc'Greater :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16137135151732049549##
                   15355059664548802280##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Greater1
                   0#
                   LexerTypes.$tc'Add1) -}
da0ffdb879abdb679610bf38be6c7145
  $tc'Greater1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Greater2) -}
a8172162e13f47bc89c907e6462368e2
  $tc'Greater2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Greater"#) -}
7f904918eacf6aa238b4cebcb77acb59
  $tc'GreaterEquals :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17961621753380416194##
                   17987229135807621673##
                   LexerTypes.$trModule
                   LexerTypes.$tc'GreaterEquals1
                   0#
                   LexerTypes.$tc'Add1) -}
0eba36c13b3bad73975177ee73f8e895
  $tc'GreaterEquals1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'GreaterEquals2) -}
b59c3ad6cc3a058029f86101d6994da9
  $tc'GreaterEquals2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'GreaterEquals"#) -}
b71a4f1a9c54e1e49f6cc0235952aa95
  $tc'ID :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17532501739014487791##
                   6539046723115748367##
                   LexerTypes.$trModule
                   LexerTypes.$tc'ID2
                   0#
                   LexerTypes.$tc'ID1) -}
4e4e23bb9d747e42149f44cc3e89078b
  $tc'ID1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
61ed18f6870784f9f4b8a63cd734363c
  $tc'ID2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'ID3) -}
4852b9761d6b497cba7c1f1f5d8ff313
  $tc'ID3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ID"#) -}
be645a9e1e762b156c10f84ba9e0b2ac
  $tc'ID_Submod_Struct :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1506143121565204842##
                   4008878557996762653##
                   LexerTypes.$trModule
                   LexerTypes.$tc'ID_Submod_Struct2
                   0#
                   LexerTypes.$tc'ID_Submod_Struct1) -}
962fd4a1f184287093843bc911f2d80f
  $tc'ID_Submod_Struct1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1120e107fe2a1034be9da684b4e92493
  $tc'ID_Submod_Struct2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'ID_Submod_Struct3) -}
e12659aeab3119a2fa2494dd39d8b830
  $tc'ID_Submod_Struct3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ID_Submod_Struct"#) -}
d26b80cfd41880c4a85012cbda570dc3
  $tc'ID_Vect :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5837401339223471529##
                   6300325584719353257##
                   LexerTypes.$trModule
                   LexerTypes.$tc'ID_Vect2
                   0#
                   LexerTypes.$tc'ID_Vect1) -}
3e6497249995ecc99539e5aad32e19d5
  $tc'ID_Vect1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2f942ca2f09c8ddb58c9cacc633a3d4a
  $tc'ID_Vect2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'ID_Vect3) -}
54b54ee875566a1ccb648b26e2109d89
  $tc'ID_Vect3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ID_Vect"#) -}
ede3f29d6514822c8caaba88e6fae208
  $tc'Identifier :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   981618332046315073##
                   6796138701179311395##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Identifier2
                   0#
                   LexerTypes.$tc'Identifier1) -}
acb42eb0b117664bdebbe4b2f06d6695
  $tc'Identifier1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ab259a7a92c55b10519948c46eac8acb
  $tc'Identifier2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Identifier3) -}
13921e14e05e708ae1d6700e580504f5
  $tc'Identifier3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Identifier"#) -}
ef977a9f87b833f7b66f7592d73917fc
  $tc'If :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17265608582183173158##
                   6609827810772771650##
                   LexerTypes.$trModule
                   LexerTypes.$tc'If2
                   0#
                   LexerTypes.$tc'If1) -}
b6ebd8fb688dd272f7d1955d57737294
  $tc'If1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c309ee59d2510efb4b02f7b404e5f834
  $tc'If2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'If3) -}
49fd24a556b491259cee3f1b32b16248
  $tc'If3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'If"#) -}
c6a34c203a0a4c1f15b260574da0fa12
  $tc'Ileaf :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16857896805601000048##
                   8378336804595256119##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Ileaf2
                   0#
                   LexerTypes.$tc'Ileaf1) -}
baa85b8fd670aa695575094f4e7a1bdb
  $tc'Ileaf1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
39a3eca52433239738d50c94a2538568
  $tc'Ileaf2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Ileaf3) -}
4cf9ffb69d1c1fd1b5fc3022372a350a
  $tc'Ileaf3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Ileaf"#) -}
7e9aaa66bfe2b2210822cdaa38187645
  $tc'Int_Always_Enabled :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17451903342297725649##
                   11901205681287769440##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Int_Always_Enabled2
                   0#
                   LexerTypes.$tc'Int_Always_Enabled1) -}
b5e693b411d94d2460784a4388db9a77
  $tc'Int_Always_Enabled1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
e049795007816d81953ac2909651fdc7
  $tc'Int_Always_Enabled2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'Int_Always_Enabled3) -}
86b156d9603acc5cdaa73c666e53b15e
  $tc'Int_Always_Enabled3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Int_Always_Enabled"#) -}
0ec8850b1ce71b7975f60e16a7eb6647
  $tc'Int_Always_Ready :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2986522777604026743##
                   2627380549954420500##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Int_Always_Ready1
                   0#
                   LexerTypes.$tc'Int_Always_Enabled1) -}
1a67c7aa7886d60e6f3fe18c9820558a
  $tc'Int_Always_Ready1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Int_Always_Ready2) -}
f6defc5371e167f394ff3b693ea84711
  $tc'Int_Always_Ready2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Int_Always_Ready"#) -}
0c2bf9bafcad7b7d7f2b01461dd3bea3
  $tc'Int_Doc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3552399692147064303##
                   12462802399218381571##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Int_Doc2
                   0#
                   LexerTypes.$tc'Int_Doc1) -}
4b9dba5ae6faba2fc480a8e4ad299825
  $tc'Int_Doc1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ff067087a086212fdba4eeb1a4c50e1e
  $tc'Int_Doc2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Int_Doc3) -}
f77929c88b0461cec3da8f0de167776c
  $tc'Int_Doc3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Int_Doc"#) -}
d90d6551fec4865de01788abad8d6526
  $tc'Invalid :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   887732008457869098##
                   3791489642557765774##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Invalid2
                   0#
                   LexerTypes.$tc'Invalid1) -}
5248cd3b83cba5f5a87cbfbdc9d407a8
  $tc'Invalid1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
9175a6b00bd5c7090da503d8678855e4
  $tc'Invalid2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Invalid3) -}
94efa81c5f6085ac9da396d1710b963b
  $tc'Invalid3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Invalid"#) -}
0f9bf39cdae652af21bd77542e148be2
  $tc'InvalidID :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   133626770006746956##
                   17389872884124496369##
                   LexerTypes.$trModule
                   LexerTypes.$tc'InvalidID2
                   0#
                   LexerTypes.$tc'InvalidID1) -}
8f3d27451714c96418d3fcdbc82d73a0
  $tc'InvalidID1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
701b0c49016bd38e4b66af94ee37191a
  $tc'InvalidID2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'InvalidID3) -}
f0bfaf36f84d27d3e357543ccfcc2ed9
  $tc'InvalidID3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'InvalidID"#) -}
fa1109ac3ed3e681da0a650bb7365e08
  $tc'IsValid :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13223732839617396155##
                   11428544804217872902##
                   LexerTypes.$trModule
                   LexerTypes.$tc'IsValid2
                   0#
                   LexerTypes.$tc'IsValid1) -}
976b1e4dc6801bd3de16dc54a8a15f31
  $tc'IsValid1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d09ad354c8dea60c424b7d43ef50ac33
  $tc'IsValid2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'IsValid3) -}
601d9d878922a0457c2515c852eced4e
  $tc'IsValid3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'IsValid"#) -}
ec5e83d2cca76d0c3f57c446eec9c51d
  $tc'Istem :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5350661238381777387##
                   15996401796098068739##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Istem2
                   0#
                   LexerTypes.$tc'Istem1) -}
d2fe4a71fa69395517d39fec3e4310b1
  $tc'Istem1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
db7b8b9b63c9dc777c4a204f822b0df7
  $tc'Istem2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Istem3) -}
8d47f7d692d0c160b844d303cc307e35
  $tc'Istem3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Istem"#) -}
cfca688e6bf5aebfc780e4a72798173e
  $tc'LFIFO :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13771882346121263407##
                   492636057829534488##
                   LexerTypes.$trModule
                   LexerTypes.$tc'LFIFO1
                   0#
                   LexerTypes.$tc'BypassFIFO1) -}
851cdfd83e75cace3eadf5537416b233
  $tc'LFIFO1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'LFIFO2) -}
0b5d2896a3b0e4fa90a00f13d987af72
  $tc'LFIFO2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LFIFO"#) -}
942ec71543c8c996f1b9d87999699b53
  $tc'LFIFOF :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12843633173405754941##
                   6137448476313891364##
                   LexerTypes.$trModule
                   LexerTypes.$tc'LFIFOF1
                   0#
                   LexerTypes.$tc'BypassFIFO1) -}
a7d9f4c6768e8795623a498a5f246557
  $tc'LFIFOF1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'LFIFOF2) -}
a21d5856bf8b179b05bac0be504e26a2
  $tc'LFIFOF2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LFIFOF"#) -}
064bf282bc430359a03414cf876182bc
  $tc'LShift :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5810019077400351648##
                   13489314500199155498##
                   LexerTypes.$trModule
                   LexerTypes.$tc'LShift1
                   0#
                   LexerTypes.$tc'Add1) -}
9114871d5283a0047eae7622c52f10a0
  $tc'LShift1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'LShift2) -}
a7bf021c749946b193638c2b28d7ff31
  $tc'LShift2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LShift"#) -}
499c20803b863cc6ccef66d18369abf6
  $tc'Less :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14144763475496755818##
                   7381772474698382373##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Less1
                   0#
                   LexerTypes.$tc'Add1) -}
89ccc235e793e2704248625f60122648
  $tc'Less1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Less2) -}
5fe6886ce0cd38cd89ea75ae7a2c39f2
  $tc'Less2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Less"#) -}
64a012542b415b1b0ca4662e588f6427
  $tc'LessEquals :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9039398322026591503##
                   17494959801979051698##
                   LexerTypes.$trModule
                   LexerTypes.$tc'LessEquals1
                   0#
                   LexerTypes.$tc'Add1) -}
f6f469e015357440610f83d45bf82aea
  $tc'LessEquals1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'LessEquals2) -}
389c6c4aaf2f7d28c719c615aab3119c
  $tc'LessEquals2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LessEquals"#) -}
538f61ce1f8dd96f6947ccceafcf2aeb
  $tc'LitBool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8482367930350264155##
                   8057240396563029202##
                   LexerTypes.$trModule
                   LexerTypes.$tc'LitBool2
                   0#
                   LexerTypes.$tc'LitBool1) -}
fa730a5f2cb500ae9f74edb4b391b30a
  $tc'LitBool1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0910c786f4bb544c4386c22e2810494f
  $tc'LitBool2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'LitBool3) -}
98c863b933cc97535f86805357463f5d
  $tc'LitBool3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LitBool"#) -}
d0fae721a194f23f01d911c61befedc2
  $tc'LitChar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16960792401002821061##
                   13695355527069215137##
                   LexerTypes.$trModule
                   LexerTypes.$tc'LitChar2
                   0#
                   LexerTypes.$tc'LitChar1) -}
375b9555fce85c135c4ad8180da7c4be
  $tc'LitChar1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
741e694a716ff2df42587b8cd814f1c9
  $tc'LitChar2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'LitChar3) -}
66bd89963344c91258f41fc77638aadc
  $tc'LitChar3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LitChar"#) -}
1750b9d41716447f1daf7c008838b8f6
  $tc'LitEnum :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11067099365047267935##
                   13964981309345755513##
                   LexerTypes.$trModule
                   LexerTypes.$tc'LitEnum2
                   0#
                   LexerTypes.$tc'LitEnum1) -}
56fff787a053caf625be02eca4812ab4
  $tc'LitEnum1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a485c603f57d2d9d17abc8da7f6460ba
  $tc'LitEnum2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'LitEnum3) -}
258d80151584137e9286a39a2b34edff
  $tc'LitEnum3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LitEnum"#) -}
494017567adb812d8c4336bf339ac8ef
  $tc'LitInt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2890684044728952026##
                   5022785480111056892##
                   LexerTypes.$trModule
                   LexerTypes.$tc'LitInt2
                   0#
                   LexerTypes.$tc'LitInt1) -}
bc26e17188d782d01b482b1111d0cba0
  $tc'LitInt1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
75da57c7840c0b5eb3401492ef8417eb
  $tc'LitInt2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'LitInt3) -}
b5d69153ba433da1d404b26174977f5a
  $tc'LitInt3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LitInt"#) -}
f4630c5b31185f2700f195584497c873
  $tc'LitReal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6244735241761693949##
                   2005886389828445748##
                   LexerTypes.$trModule
                   LexerTypes.$tc'LitReal2
                   0#
                   LexerTypes.$tc'LitReal1) -}
ac51d250ff2b172204761b61ef1e425f
  $tc'LitReal1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
44f3397932ead0a3e225ed837fa3ccf8
  $tc'LitReal2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'LitReal3) -}
0b28cafbc672a39f62c59fd4f74cf76a
  $tc'LitReal3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LitReal"#) -}
b1e658f4d3d58289bc81688f13a4398d
  $tc'LitSizedInt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14199039001286195531##
                   12248846628245921965##
                   LexerTypes.$trModule
                   LexerTypes.$tc'LitSizedInt2
                   0#
                   LexerTypes.$tc'LitSizedInt1) -}
348ba012d1df0aaa52b3ae9af5b3f546
  $tc'LitSizedInt1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
010225adc7d5de4f21811d0a52d07a98
  $tc'LitSizedInt2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'LitSizedInt3) -}
760295a2b9ec2bcb03d580af2b561584
  $tc'LitSizedInt3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LitSizedInt"#) -}
3166c7340b27dd8f2e49a5fe292b73a2
  $tc'LitString :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11448283064569900493##
                   6066812852692686375##
                   LexerTypes.$trModule
                   LexerTypes.$tc'LitString1
                   0#
                   LexerTypes.$tc'LitEnum1) -}
08bb9e211ea6050336ea75c6e7e95dbb
  $tc'LitString1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'LitString2) -}
dfd3c028aec21fa69deb1bd5b853fb18
  $tc'LitString2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LitString"#) -}
5c5427a569ea15a1cc47c0a744f1695b
  $tc'LitStructConstructor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6327557169527154169##
                   4207308540945391771##
                   LexerTypes.$trModule
                   LexerTypes.$tc'LitStructConstructor2
                   0#
                   LexerTypes.$tc'LitStructConstructor1) -}
22d282e61e7f69405b29d5e01503c350
  $tc'LitStructConstructor1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
03cf30faa812f97baf3f5942226539c2
  $tc'LitStructConstructor2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'LitStructConstructor3) -}
c99863ad4576c495c9e816950ff8b90a
  $tc'LitStructConstructor3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LitStructConstructor"#) -}
cc7ede9ba9097e089088b56bf962b5f9
  $tc'LitVoid :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14970201850215205489##
                   10223245110887013631##
                   LexerTypes.$trModule
                   LexerTypes.$tc'LitVoid1
                   0#
                   LexerTypes.$tc'LitStructConstructor1) -}
cecba5d9ce75eb80e2831a73a1f5d120
  $tc'LitVoid1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'LitVoid2) -}
3896d74a4fa90aee78665c31479d4016
  $tc'LitVoid2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LitVoid"#) -}
361f8b67681739bab2ed909e5696c805
  $tc'Literal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17180262629574510682##
                   7695063718362499962##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Literal2
                   0#
                   LexerTypes.$tc'Literal1) -}
5663ec0d07ebb8bf7779c417ae5dcd51
  $tc'Literal1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4b801b1bcf67c69f2011590de4f82013
  $tc'Literal2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Literal3) -}
0bca4d63b7b0309d495b79bd38454a3f
  $tc'Literal3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Literal"#) -}
03c8249439a127240b74db0ba16eed06
  $tc'LocalDec :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15449813369227869470##
                   18360425621603853768##
                   LexerTypes.$trModule
                   LexerTypes.$tc'LocalDec2
                   0#
                   LexerTypes.$tc'LocalDec1) -}
cf2eb9be708908146d4e79056eb7af21
  $tc'LocalDec1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f113f5c9990fa33914111bcad78f6d82
  $tc'LocalDec2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'LocalDec3) -}
8b94056bf065aca55687e82c2284a8b3
  $tc'LocalDec3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LocalDec"#) -}
a5360c928363d82f17f3cf0fede32246
  $tc'MAvoid :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4704582337042167426##
                   17261602140615309539##
                   LexerTypes.$trModule
                   LexerTypes.$tc'MAvoid1
                   0#
                   LexerTypes.$tc'Default_Gate_Inhigh1) -}
58a9441cd2888caae791186f0eb3ff1b
  $tc'MAvoid1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'MAvoid2) -}
72106d80d35badca8bc7581627125f18
  $tc'MAvoid2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MAvoid"#) -}
d81d4ac4673df6f123986f32d7543297
  $tc'MDc_Always_Enabled :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14131786075984836987##
                   3677271372359638793##
                   LexerTypes.$trModule
                   LexerTypes.$tc'MDc_Always_Enabled2
                   0#
                   LexerTypes.$tc'MDc_Always_Enabled1) -}
b67a01f325859144d8f764f5020cee63
  $tc'MDc_Always_Enabled1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
bb516281585c22363b0f2f73b6cc3fa7
  $tc'MDc_Always_Enabled2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'MDc_Always_Enabled3) -}
d7b7fa58b804dd5ec22e724e61751f1e
  $tc'MDc_Always_Enabled3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MDc_Always_Enabled"#) -}
7d4f8ee44f479bfa39dd55e0f93d1c09
  $tc'MDc_Always_Ready :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18114716575908793385##
                   17851608403665020459##
                   LexerTypes.$trModule
                   LexerTypes.$tc'MDc_Always_Ready1
                   0#
                   LexerTypes.$tc'MDc_Always_Enabled1) -}
84ab2f47a2ce71dc6d93175459e66109
  $tc'MDc_Always_Ready1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'MDc_Always_Ready2) -}
86f166a673a86dff935b8d7a9cb1e9f9
  $tc'MDc_Always_Ready2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MDc_Always_Ready"#) -}
7560b614d91c4a099cdf8de8a77a2564
  $tc'MDc_Doc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4263492739455202278##
                   12622247416507109897##
                   LexerTypes.$trModule
                   LexerTypes.$tc'MDc_Doc2
                   0#
                   LexerTypes.$tc'MDc_Doc1) -}
2ba5fd4dbe617aca3448a115bf36392d
  $tc'MDc_Doc1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d21e6d7644251eeb4ef351d9390cfa4e
  $tc'MDc_Doc2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'MDc_Doc3) -}
bf772f746c676f7edb33edce4cef6ae6
  $tc'MDc_Doc3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MDc_Doc"#) -}
cbcfb4ae4561edf08d92218c18fa2f30
  $tc'MDc_Enable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5573112061493122214##
                   10525385809302838877##
                   LexerTypes.$trModule
                   LexerTypes.$tc'MDc_Enable1
                   0#
                   LexerTypes.$tc'MDc_Doc1) -}
06bafd04d949bf8e1ce195db8c58a13e
  $tc'MDc_Enable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'MDc_Enable2) -}
baf8737dbdb09ce985b3e6b8db354b93
  $tc'MDc_Enable2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MDc_Enable"#) -}
e6f003cbc83abcb14bda99cfb954d2ed
  $tc'MDc_Port :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9815605760040795392##
                   11436706416853670303##
                   LexerTypes.$trModule
                   LexerTypes.$tc'MDc_Port1
                   0#
                   LexerTypes.$tc'MDc_Doc1) -}
5df523b43d82ab79b2027ee32c3f7d0c
  $tc'MDc_Port1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'MDc_Port2) -}
3af30cec05f9a53227e0e3d810c282aa
  $tc'MDc_Port2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MDc_Port"#) -}
6747a9f4a82da3cbf59c1393b93eb637
  $tc'MDc_Prefix :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5542419632893729076##
                   1939000327330507753##
                   LexerTypes.$trModule
                   LexerTypes.$tc'MDc_Prefix1
                   0#
                   LexerTypes.$tc'MDc_Doc1) -}
ca08f6ce4fd75e5fbd4f02d3f8a95f97
  $tc'MDc_Prefix1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'MDc_Prefix2) -}
e46b9e73ac83be7e48ea198bf3293716
  $tc'MDc_Prefix2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MDc_Prefix"#) -}
06014fa45557dad01f56642f276cc569
  $tc'MDc_Ready :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16734479925028818404##
                   6293350875677184402##
                   LexerTypes.$trModule
                   LexerTypes.$tc'MDc_Ready1
                   0#
                   LexerTypes.$tc'MDc_Doc1) -}
59fa9258342a7fac03702076e04291db
  $tc'MDc_Ready1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'MDc_Ready2) -}
723f76a13d90ca12b9e11c2a35862b51
  $tc'MDc_Ready2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MDc_Ready"#) -}
b62dc8a97b39eaf9a48f323061f4b16f
  $tc'MDc_Result :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17128049403352692163##
                   16694690091858103207##
                   LexerTypes.$trModule
                   LexerTypes.$tc'MDc_Result1
                   0#
                   LexerTypes.$tc'MDc_Doc1) -}
d2134e45dacdbcc7b13d617abd0e09e2
  $tc'MDc_Result1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'MDc_Result2) -}
5e213633535da881eb442284c0bfd28d
  $tc'MDc_Result2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MDc_Result"#) -}
1d6011a7708d9063fcc5cf48e07ae43e
  $tc'MaybeContainer :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3645263832598705278##
                   173293685333279685##
                   LexerTypes.$trModule
                   LexerTypes.$tc'MaybeContainer2
                   0#
                   LexerTypes.$tc'MaybeContainer1) -}
259a872d8299eeb8c2c57c265ac37a63
  $tc'MaybeContainer1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f8704597ac0a2429aa59f0ea580557a1
  $tc'MaybeContainer2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'MaybeContainer3) -}
562508113ecab16147549a7b622b729c
  $tc'MaybeContainer3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MaybeContainer"#) -}
f75df004fe5361c82faf845fbb67e3d7
  $tc'MaybeIf :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1194837784608676175##
                   8079234883281804367##
                   LexerTypes.$trModule
                   LexerTypes.$tc'MaybeIf2
                   0#
                   LexerTypes.$tc'MaybeIf1) -}
838b40f596fddf543e660b56315b122d
  $tc'MaybeIf1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
572e52b14372cd83aac3dc7d48b9dec0
  $tc'MaybeIf2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'MaybeIf3) -}
8299fd0669983e185f914cb09c1d7a8b
  $tc'MaybeIf3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MaybeIf"#) -}
78868553937dcefae1dfcdd74884b9f8
  $tc'MaybeValue :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3792343793282800612##
                   5516339633529567627##
                   LexerTypes.$trModule
                   LexerTypes.$tc'MaybeValue2
                   0#
                   LexerTypes.$tc'MaybeValue1) -}
dcb578522689f831b0d5c6ea7ef078b9
  $tc'MaybeValue1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
e45d28cce00bb160d49e2a539f2d8708
  $tc'MaybeValue2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'MaybeValue3) -}
c2102749ab30585ca7f2a402afe1e2f2
  $tc'MaybeValue3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MaybeValue"#) -}
e3d425c352141265296f19ffdc8260d7
  $tc'Met_Doc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1491214258331208641##
                   15315768701551764783##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Met_Doc2
                   0#
                   LexerTypes.$tc'Met_Doc1) -}
d12044c8fdfadc92258c3f12ca3b97ad
  $tc'Met_Doc1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
923174369cf2905e6a8cbe699e5c6c40
  $tc'Met_Doc2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Met_Doc3) -}
f7e34a81158a5955df892eee33d11c5c
  $tc'Met_Doc3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Met_Doc"#) -}
dda68c09deed84caaa50a924af007569
  $tc'MethodCall :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2492842023154605753##
                   12557184636739654266##
                   LexerTypes.$trModule
                   LexerTypes.$tc'MethodCall2
                   0#
                   LexerTypes.$tc'MethodCall1) -}
a64e2c7de7145126b80991df3c052cd8
  $tc'MethodCall1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ed9157e3ae7566e745930150989d20d9
  $tc'MethodCall2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'MethodCall3) -}
541a3d68b9c4a270cd7c8653f0d08b97
  $tc'MethodCall3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MethodCall"#) -}
a0be1c65df3f8272f7c1b9f579114df1
  $tc'MethodNameAP :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15627920823600485838##
                   4524287274620725257##
                   LexerTypes.$trModule
                   LexerTypes.$tc'MethodNameAP1
                   0#
                   LexerTypes.$tc'ActionNameAP1) -}
2fd3e65ca255f4a6efdbd9d3f0cdc20c
  $tc'MethodNameAP1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'MethodNameAP2) -}
b179439999525ebc3f614ad8f9e9fa2e
  $tc'MethodNameAP2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MethodNameAP"#) -}
552d3afc741acc52f4b6e4577676e3de
  $tc'Mod_Always_Enabled :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12425916749777013648##
                   8760010021147935910##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Mod_Always_Enabled1
                   0#
                   LexerTypes.$tc'Clock_Ancestors1) -}
7476c2331d94abcd2d1cdf07f22cee3c
  $tc'Mod_Always_Enabled1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'Mod_Always_Enabled2) -}
69ffa4b3f81ea7c16a17bcf34bc46b3c
  $tc'Mod_Always_Enabled2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Mod_Always_Enabled"#) -}
f365356b29a7fc5c543ef2e89050ef8c
  $tc'Mod_Always_Ready :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12443277349831091659##
                   16345587167890657921##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Mod_Always_Ready1
                   0#
                   LexerTypes.$tc'Clock_Ancestors1) -}
c23816f75eaf661c40804a7504e6e141
  $tc'Mod_Always_Ready1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Mod_Always_Ready2) -}
ad9d76d437f899c6d59eda0722f374ea
  $tc'Mod_Always_Ready2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Mod_Always_Ready"#) -}
a42563d8ec658e74033ba73a497e1b2f
  $tc'Mod_Conflict_Free :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17499132042752045142##
                   12277971900360883483##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Mod_Conflict_Free1
                   0#
                   LexerTypes.$tc'Clock_Ancestors1) -}
da7680599da172468a110eaf17da78d4
  $tc'Mod_Conflict_Free1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Mod_Conflict_Free2) -}
9e7f9cd94234417aa9404c891e4133ba
  $tc'Mod_Conflict_Free2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Mod_Conflict_Free"#) -}
4a19922fd3ff2069a68b9e49dd0a6faf
  $tc'Mod_Doc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9394690646470568675##
                   9842972559541451553##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Mod_Doc1
                   0#
                   LexerTypes.$tc'Clock_Prefix1) -}
15fbfeb5aaf2cd93c69c69eafbb8b69a
  $tc'Mod_Doc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Mod_Doc2) -}
d71e503b060a4fdec2fac4317e1b29f1
  $tc'Mod_Doc2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Mod_Doc"#) -}
7706e87f9e47b0f1c9105a9b5477d771
  $tc'Mod_Execution_Order :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3656674817194729254##
                   8620259453779712176##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Mod_Execution_Order1
                   0#
                   LexerTypes.$tc'Clock_Ancestors1) -}
3d2f3068a6a36edb3f5828bc7082eced
  $tc'Mod_Execution_Order1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'Mod_Execution_Order2) -}
a440d32fbdbb6ef6f93875ca016617d3
  $tc'Mod_Execution_Order2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Mod_Execution_Order"#) -}
41c0ebb46ff388534bdc17a6d4287de3
  $tc'Mod_Mutually_Exclusive :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3113883656071721175##
                   6131395836316352963##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Mod_Mutually_Exclusive1
                   0#
                   LexerTypes.$tc'Clock_Ancestors1) -}
e784685bac0332d730a84fdd6da62df9
  $tc'Mod_Mutually_Exclusive1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'Mod_Mutually_Exclusive2) -}
cfa60cf289d0e9410285b7d9d31fbf62
  $tc'Mod_Mutually_Exclusive2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Mod_Mutually_Exclusive"#) -}
aa592d331d8c15dbe213b906083f9635
  $tc'Mod_Preempts :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16103862859211527284##
                   8163762827195598617##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Mod_Preempts1
                   0#
                   LexerTypes.$tc'Clock_Ancestors1) -}
9c685ea77d1b4e2e7fc59147d123d55d
  $tc'Mod_Preempts1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Mod_Preempts2) -}
9c732d2fcd9f702857fc097510400d6b
  $tc'Mod_Preempts2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Mod_Preempts"#) -}
ed6d29c002d3a77e8b771f97b154a029
  $tc'Modulo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5420410318930917114##
                   18283317140169850427##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Modulo1
                   0#
                   LexerTypes.$tc'Add1) -}
73670200aeda36316896e20f02d0b91b
  $tc'Modulo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Modulo2) -}
bb07522a95b5ac86270cd15e2b809bf5
  $tc'Modulo2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Modulo"#) -}
1fcdcad3c9741f0b86649ed878158ba9
  $tc'Multiply :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5961378558744587403##
                   3131283242266620999##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Multiply1
                   0#
                   LexerTypes.$tc'Add1) -}
d16d8973aebd547ae0d9fc0bd79a2fbe
  $tc'Multiply1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Multiply2) -}
356743e6ea5845e0e5af0bf89818ece2
  $tc'Multiply2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Multiply"#) -}
5df63d0988809af69387d758ff610094
  $tc'N_Time :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18438870575631064927##
                   618339079736247281##
                   LexerTypes.$trModule
                   LexerTypes.$tc'N_Time2
                   0#
                   LexerTypes.$tc'N_Time1) -}
f4c875d501bffdb9bef78b098beacd23
  $tc'N_Time1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ac79765ac82118f6fa52106512e16004
  $tc'N_Time2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'N_Time3) -}
310cefad77f6018da55c1c1ea1c874a6
  $tc'N_Time3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'N_Time"#) -}
bead0294a62b9ab4ab9603f5466d34c6
  $tc'Negative :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10205158195536091789##
                   16696058816827436402##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Negative1
                   0#
                   LexerTypes.$tc'MaybeValue1) -}
df2d461d5ddfeef232b647a56cb9213d
  $tc'Negative1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Negative2) -}
fdc9869b14555549c82f76019db73009
  $tc'Negative2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Negative"#) -}
137422e76691c6870ce30aee4cb2ea7a
  $tc'NoSplit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18249359477209558109##
                   14185474595950164726##
                   LexerTypes.$trModule
                   LexerTypes.$tc'NoSplit2
                   0#
                   LexerTypes.$tc'NoSplit1) -}
65f7c092f924b192dd96f3cd30a456ad
  $tc'NoSplit1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
79c628bdcc61486f6353ae75a3ce6952
  $tc'NoSplit2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'NoSplit3) -}
1970e13e2d0b9366f6e88ad97a3a67ab
  $tc'NoSplit3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NoSplit"#) -}
040a167817d3dba047eaf832c62dc171
  $tc'No_Default_Reset :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7457647156877997063##
                   13301179258971742680##
                   LexerTypes.$trModule
                   LexerTypes.$tc'No_Default_Reset1
                   0#
                   LexerTypes.$tc'Default_Gate_Inhigh1) -}
91f6903dd9bfd422f06c5d09e1f5239e
  $tc'No_Default_Reset1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'No_Default_Reset2) -}
4251e40c46cd83dd57ea3f5bf30d230d
  $tc'No_Default_Reset2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'No_Default_Reset"#) -}
3eb21edce2d0710aa097b97bc15989f4
  $tc'No_Implicit_Conditions :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2308249428974523928##
                   18324796344713567939##
                   LexerTypes.$trModule
                   LexerTypes.$tc'No_Implicit_Conditions1
                   0#
                   LexerTypes.$tc'Fire_When_Enabled1) -}
f64de06403f9b4a45b357fd478443c1a
  $tc'No_Implicit_Conditions1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'No_Implicit_Conditions2) -}
24052d894abb598944d02ff000ee79fd
  $tc'No_Implicit_Conditions2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'No_Implicit_Conditions"#) -}
9cba6b510b626e61dcb56c36bd09f041
  $tc'Not :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17656698213563204362##
                   14950891068400009891##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Not1
                   0#
                   LexerTypes.$tc'MaybeValue1) -}
1c45a43a7eb69335cabe4c8f0db3f248
  $tc'Not1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Not2) -}
1578f445c3d6f9ccb1f93dd412e61deb
  $tc'Not2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Not"#) -}
809aafacecf698f519e3112d6cdf43d4
  $tc'NotEquals :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3481047768084390129##
                   2656730999034046228##
                   LexerTypes.$trModule
                   LexerTypes.$tc'NotEquals1
                   0#
                   LexerTypes.$tc'Add1) -}
40b8a351d7e9e57be45e60589f0072d1
  $tc'NotEquals1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'NotEquals2) -}
dbe39976cc3d22f7389c54e3a0f62162
  $tc'NotEquals2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NotEquals"#) -}
231cd2d360b1c7d6e7edec0598bd54db
  $tc'Or :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7248786880124076163##
                   7026569896277578241##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Or1
                   0#
                   LexerTypes.$tc'Add1) -}
ccdc3a2aeece2659333e1cf686418ae2
  $tc'Or1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Or2) -}
12c9625febcc48caf921a9505c85931c
  $tc'Or2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Or"#) -}
d0a64d0fe96bc0f0935169ab5dbe9c95
  $tc'P2B :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7624416510571340479##
                   12720326144618023953##
                   LexerTypes.$trModule
                   LexerTypes.$tc'P2B1
                   0#
                   LexerTypes.$tc'B2B1) -}
52ed1ac211ccb5da14de766b9614e610
  $tc'P2B1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'P2B2) -}
8468f450983e48128b9c6c511477a28a
  $tc'P2B2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'P2B"#) -}
88a73a172c240ed0fdd91638bc8023d7
  $tc'P2P :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14042739617307051883##
                   5993040677178509948##
                   LexerTypes.$trModule
                   LexerTypes.$tc'P2P1
                   0#
                   LexerTypes.$tc'B2B1) -}
543d5ce885c539c7e12e91010c739db9
  $tc'P2P1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'P2P2) -}
ab513218a8efb5df4a6c088ff1be327c
  $tc'P2P2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'P2P"#) -}
32f658d4265238fcdab48c61b9c28142
  $tc'PMatch :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16641336131594910328##
                   3729910416110705403##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PMatch2
                   0#
                   LexerTypes.$tc'PMatch1) -}
6b953b32eed0042eb4e7c2a1baa20370
  $tc'PMatch1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
298b2335eefac2a8c086e3361df7a03a
  $tc'PMatch2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PMatch3) -}
47635e4936b560856835e0d50acce212
  $tc'PMatch3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PMatch"#) -}
2a4d254b1740d88c693999cdbe60580b
  $tc'PMatchIf :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2571587161219796533##
                   13415952084844661476##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PMatchIf2
                   0#
                   LexerTypes.$tc'PMatchIf1) -}
88d761a8edc6a0c69d773a860bc599c6
  $tc'PMatchIf1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
18a4117361581b07c45918b1f0ccc09f
  $tc'PMatchIf2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PMatchIf3) -}
7146c6b4a4a09208d617559159ca3b2a
  $tc'PMatchIf3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PMatchIf"#) -}
83cff290a47e3ab06f69b1d39b3f4b0c
  $tc'PVSPackage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8399512716436083002##
                   209232467802933940##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVSPackage2
                   0#
                   LexerTypes.$tc'PVSPackage1) -}
91f8afa9f914c37dcde05fdb2815c602
  $tc'PVSPackage1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
84de928318be155b657849aba000bffe
  $tc'PVSPackage2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVSPackage3) -}
8745b96105fff0718ea61614557c50a1
  $tc'PVSPackage3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVSPackage"#) -}
62045ce2caff1840f9135f8444136f33
  $tc'PVS_Bit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8948390032724817253##
                   5952373294288968982##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVS_Bit2
                   0#
                   LexerTypes.$tc'PVS_Bit1) -}
e8d06d284501db51df40aa7e27d41287
  $tc'PVS_Bit1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
b68f50130513cbc286cb62d0396990de
  $tc'PVS_Bit2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVS_Bit3) -}
469f7a8fd5c502349ae2d30818c8e4bc
  $tc'PVS_Bit3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVS_Bit"#) -}
5fe0814a96c61af380c97bbda02c868f
  $tc'PVS_Bool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10007296210092125600##
                   4370638167674101094##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVS_Bool2
                   0#
                   LexerTypes.$tc'PVS_Bool1) -}
3c270ee405310e00bf2352eddc9a0af8
  $tc'PVS_Bool1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
a2cec7e28fbbb6cc1b45fd1ca0718c29
  $tc'PVS_Bool2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVS_Bool3) -}
1f1592cb8cc53c7494b9299a1ef83924
  $tc'PVS_Bool3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVS_Bool"#) -}
4c7cb5059c578721de1315296c3ae314
  $tc'PVS_Custom :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1710238123716811198##
                   10377515344361293279##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVS_Custom2
                   0#
                   LexerTypes.$tc'PVS_Custom1) -}
2ffbcebd1699bf55288dc94220e89c7e
  $tc'PVS_Custom1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
e26d62db8d86bf610174cabe03e77563
  $tc'PVS_Custom2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVS_Custom3) -}
4293afd366146c275bc9a890c8f48c49
  $tc'PVS_Custom3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVS_Custom"#) -}
3f1ffa2f260ab4d0ce721fd6916f7f35
  $tc'PVS_DWire :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2661424590054325913##
                   8475205081432703976##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVS_DWire2
                   0#
                   LexerTypes.$tc'PVS_DWire1) -}
7b53eb2c172f8daef75c6781c01246fa
  $tc'PVS_DWire1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4896bdb229c8198fa6d13c18d35614ff
  $tc'PVS_DWire2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVS_DWire3) -}
c28c91534a6649bff4ed1d79c7281599
  $tc'PVS_DWire3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVS_DWire"#) -}
c5c175f9a2511abef9df21a91ffefad0
  $tc'PVS_Enumeration :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1934347531618346296##
                   7727527626364759954##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVS_Enumeration2
                   0#
                   LexerTypes.$tc'PVS_Enumeration1) -}
ea75edd12b693ac9ffca5a2d8727f9e1
  $tc'PVS_Enumeration1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
75d61a57c60935ac1f2efbd142d79651
  $tc'PVS_Enumeration2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVS_Enumeration3) -}
d6a54bfff277efe04a1719ddf060cd29
  $tc'PVS_Enumeration3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVS_Enumeration"#) -}
820f52fb20f179703ff46b2c949fa831
  $tc'PVS_Fifo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15518293348015517342##
                   10108274180233825859##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVS_Fifo2
                   0#
                   LexerTypes.$tc'PVS_Fifo1) -}
380e69a5f8ab153f710161252fd2b72f
  $tc'PVS_Fifo1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
90b9ef4c6e7da7a101967898d045ec0b
  $tc'PVS_Fifo2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVS_Fifo3) -}
507096bea6c22c09ee72d8049a38ca10
  $tc'PVS_Fifo3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVS_Fifo"#) -}
482f4949f9a87fac35dccf94a4aa2031
  $tc'PVS_Int :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7077749879617624217##
                   8671679236560988354##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVS_Int1
                   0#
                   LexerTypes.$tc'PVS_Bit1) -}
58b2611ab7fe885190500239d7c5f3a5
  $tc'PVS_Int1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVS_Int2) -}
a5e54c645eae644f60060856b2799aab
  $tc'PVS_Int2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVS_Int"#) -}
d2bc8b1f9b6dbc04d80643f63d878f2e
  $tc'PVS_Maybe :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18445486979590059929##
                   16281290376712135897##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVS_Maybe2
                   0#
                   LexerTypes.$tc'PVS_Maybe1) -}
0b1c94b0ad1084a70eb4969cd32bb326
  $tc'PVS_Maybe1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1f8d06ac7bc4c74c2f63801de7e9a6b1
  $tc'PVS_Maybe2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVS_Maybe3) -}
ca36dbf9b42de17f8fa8d83e91876ca7
  $tc'PVS_Maybe3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVS_Maybe"#) -}
4e6d9e141205906fc4de800d052ad719
  $tc'PVS_Real :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9264078272187838135##
                   5138876333808112267##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVS_Real1
                   0#
                   LexerTypes.$tc'PVS_Bool1) -}
15bdd2d1cf702d31dc873024e882de45
  $tc'PVS_Real1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVS_Real2) -}
dbbc95edd0d6c9c073ac969bf69c8315
  $tc'PVS_Real2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVS_Real"#) -}
abb430540831c21c59f7ead9270732e9
  $tc'PVS_Reg :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7623002152344665548##
                   4055322483749251086##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVS_Reg1
                   0#
                   LexerTypes.$tc'PVS_DWire1) -}
d7614ccce8881ae97c604688b5510430
  $tc'PVS_Reg1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVS_Reg2) -}
3343cae0341595ea430b5572b57e8a01
  $tc'PVS_Reg2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVS_Reg"#) -}
f64d58b78b1b7e1d6058fdbf02009747
  $tc'PVS_Struct :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   553079054449220156##
                   13066136928353366679##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVS_Struct2
                   0#
                   LexerTypes.$tc'PVS_Struct1) -}
6235cb1b1cafe3a3cb69d8a17fabf098
  $tc'PVS_Struct1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2b07c9c15d665d29f992aed182561b62
  $tc'PVS_Struct2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVS_Struct3) -}
e813629c9fd92f4f6e493cb8647fb0d6
  $tc'PVS_Struct3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVS_Struct"#) -}
40b62cc0185c3bd6e14a45f7d1d05f00
  $tc'PVS_SubModuleDec :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1191819274754019578##
                   5405660440416823599##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVS_SubModuleDec2
                   0#
                   LexerTypes.$tc'PVS_SubModuleDec1) -}
c3acd0363c2ebb8f2102389b88d312e4
  $tc'PVS_SubModuleDec1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d53f32acd5f60483dc15ffeb58bc6221
  $tc'PVS_SubModuleDec2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVS_SubModuleDec3) -}
49004d5bb8392b53e4c131cd59fdce1a
  $tc'PVS_SubModuleDec3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVS_SubModuleDec"#) -}
cd5d26670381e97ca53c507376f0bc35
  $tc'PVS_Synonym :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12680386035657502665##
                   14598372967378310998##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVS_Synonym2
                   0#
                   LexerTypes.$tc'PVS_Synonym1) -}
baf3d79d3ab4284bb3e14e5bf93ec0a2
  $tc'PVS_Synonym1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ea43c6ab9fa3f1bfb90343bcfe630f2e
  $tc'PVS_Synonym2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVS_Synonym3) -}
6a6525471cdd1e94880b5abcb1e6fabe
  $tc'PVS_Synonym3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVS_Synonym"#) -}
57c63bc33e811f3c85626623187f0b1b
  $tc'PVS_UInt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   389056006803963136##
                   10010520022132152014##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVS_UInt1
                   0#
                   LexerTypes.$tc'PVS_Bit1) -}
26af1bf718ea343e7e811a6144b82b1c
  $tc'PVS_UInt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVS_UInt2) -}
2fbb140840082bfef6c83327d2d771d8
  $tc'PVS_UInt2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVS_UInt"#) -}
8e9e8ceee838e6c2b7ade2f826877b6a
  $tc'PVS_Vector :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17071254430743606183##
                   11437627710032724316##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PVS_Vector2
                   0#
                   LexerTypes.$tc'PVS_Vector1) -}
70b928291e32b504a829ab05e796ce49
  $tc'PVS_Vector1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
46f64aa1adcdb5a5a76c200c01a7fe21
  $tc'PVS_Vector2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PVS_Vector3) -}
77cf6aaa8a37229ef441b2cc0727602c
  $tc'PVS_Vector3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PVS_Vector"#) -}
81c555d932e01d0f15516f5d7979b527
  $tc'PermMod :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12199070390640046873##
                   17270454770990378194##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PermMod2
                   0#
                   LexerTypes.$tc'PermMod1) -}
d9af3d3e3bf5d48c4229735b6be78e40
  $tc'PermMod1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
478f69ed766220c5b648522a448028b5
  $tc'PermMod2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PermMod3) -}
4c0276a4538b0da67f0b5766f8d7d653
  $tc'PermMod3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PermMod"#) -}
8baabde3627c12744ea7c60670bca0a4
  $tc'PipelineFIFO :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16094032533584334260##
                   4613421517258373657##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PipelineFIFO1
                   0#
                   LexerTypes.$tc'BypassFIFO1) -}
f20f9db6604aff1ddfce551327698493
  $tc'PipelineFIFO1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PipelineFIFO2) -}
de55d53f1b4a89aeedc47d4ab360f7ff
  $tc'PipelineFIFO2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PipelineFIFO"#) -}
e73227f220c0931c9a8f0ffffd52b2f0
  $tc'PipelineFIFOF :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3286083518869177729##
                   10535840589848839545##
                   LexerTypes.$trModule
                   LexerTypes.$tc'PipelineFIFOF1
                   0#
                   LexerTypes.$tc'BypassFIFO1) -}
8e88b38396e4b14ab2e372ff30191949
  $tc'PipelineFIFOF1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'PipelineFIFOF2) -}
d48fcbf26a4ac52dc0d2261e520347b5
  $tc'PipelineFIFOF2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PipelineFIFOF"#) -}
1b05e1862aa4e6ca716af037a9835c33
  $tc'RHeap :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16470509881043218015##
                   852900352106020852##
                   LexerTypes.$trModule
                   LexerTypes.$tc'RHeap2
                   0#
                   LexerTypes.$tc'RHeap1) -}
0919d630a167f28b647f88007305891b
  $tc'RHeap1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
63be27143eee3af7d5b58fb71d86c1e4
  $tc'RHeap2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'RHeap3) -}
7064a396898a68279937f233ba960b50
  $tc'RHeap3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RHeap"#) -}
22ec5b066c59426b1d304bd97057b50f
  $tc'RPFlag :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6878858632714410945##
                   10679476457646395473##
                   LexerTypes.$trModule
                   LexerTypes.$tc'RPFlag1
                   0#
                   LexerTypes.$tc'MaybeValue1) -}
e67248d292694d89b6341a58fee4ae2c
  $tc'RPFlag1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'RPFlag2) -}
129c15be321bff9e43d9e6d012cd60e3
  $tc'RPFlag2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RPFlag"#) -}
a13a14591094e02f6c9e195497210cb8
  $tc'RShift :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18085410032313243521##
                   16118908264219433692##
                   LexerTypes.$trModule
                   LexerTypes.$tc'RShift1
                   0#
                   LexerTypes.$tc'Add1) -}
cc3949c06b78cb5bb1d1d7f40d71fe60
  $tc'RShift1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'RShift2) -}
7c53cadb6f8134ad4143566c6e3d9daa
  $tc'RShift2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RShift"#) -}
40f687d34cb64f32cd8390d6358daa4f
  $tc'RegFileLoad :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   311601172889692358##
                   9735322327362460944##
                   LexerTypes.$trModule
                   LexerTypes.$tc'RegFileLoad2
                   0#
                   LexerTypes.$tc'RegFileLoad1) -}
45b4bcd89f2d957d86d9b44aedb72b49
  $tc'RegFileLoad1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
867dad4d0ccb1423670f4e3553b7a92f
  $tc'RegFileLoad2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'RegFileLoad3) -}
85933d9b4fc94d3544ebf2166542d27a
  $tc'RegFileLoad3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RegFileLoad"#) -}
25276a09b6b9701eef0171cd3fa14df0
  $tc'Replicate :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18256221244450896855##
                   8641190872547741483##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Replicate2
                   0#
                   LexerTypes.$tc'Replicate1) -}
5a8ee88f7e7adc495d1aefea09ec3a4a
  $tc'Replicate1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
db364b8c0fa41e447bc0bd9b36e3956d
  $tc'Replicate2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Replicate3) -}
b05eee8899be1cf28b0e4bfc3abd351c
  $tc'Replicate3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Replicate"#) -}
9f64bfef9ac9ed35e4deb666956eab4b
  $tc'Reset_Prefix :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15856213100208470748##
                   13487213728834455270##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Reset_Prefix1
                   0#
                   LexerTypes.$tc'Clock_Prefix1) -}
ffbb97d2914d895f9afe0526d0a3255d
  $tc'Reset_Prefix1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Reset_Prefix2) -}
847eaba88281a6700aa18c0be5afe371
  $tc'Reset_Prefix2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Reset_Prefix"#) -}
4d14f85fe9e1429f0b3d0c025f37e391
  $tc'Return :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15776818084961995822##
                   1033061400451602267##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Return2
                   0#
                   LexerTypes.$tc'Return1) -}
dc66eebf335716a222592971e170b211
  $tc'Return1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
db61d3a46f852ae2e2a18a080ddd4344
  $tc'Return2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Return3) -}
2be7e53aca24e45b0591881c53717e82
  $tc'Return3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Return"#) -}
e5193e30f145e9d5e741d166863cbff5
  $tc'Rul_Conflict_Free :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11085320740753506938##
                   5110020183688811599##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Rul_Conflict_Free2
                   0#
                   LexerTypes.$tc'Rul_Conflict_Free1) -}
23c6673f997803dab1baf9783954c085
  $tc'Rul_Conflict_Free1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0beffb07e401c08f5cd47cea7257873a
  $tc'Rul_Conflict_Free2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Rul_Conflict_Free3) -}
14fb6f84c43e9615b2e9420774e61a0a
  $tc'Rul_Conflict_Free3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Rul_Conflict_Free"#) -}
27846d824dceaf6da5619e7842578f0b
  $tc'Rul_Descending_Urgency :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1803611618653433163##
                   4450853978650371986##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Rul_Descending_Urgency1
                   0#
                   LexerTypes.$tc'Rul_Conflict_Free1) -}
e5f9e3a4d62861da2c830d4b8c217308
  $tc'Rul_Descending_Urgency1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'Rul_Descending_Urgency2) -}
1974a2eb10981e6c666a8cb09fe076be
  $tc'Rul_Descending_Urgency2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Rul_Descending_Urgency"#) -}
5e23fd39d20e295344d25b8d326cc4ca
  $tc'Rul_Doc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8540014120076031854##
                   14421055666238663841##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Rul_Doc2
                   0#
                   LexerTypes.$tc'Rul_Doc1) -}
b856ad29740929896f1f70bf22290be0
  $tc'Rul_Doc1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c9d5a1947442d09ef7ed41cba7b8bc74
  $tc'Rul_Doc2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Rul_Doc3) -}
c2658149e36123603785493e10b5491d
  $tc'Rul_Doc3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Rul_Doc"#) -}
c37c691ec48c7c8a8f8478efb08e02c1
  $tc'Rul_Execution_Order :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1407213218998347111##
                   1684812453216578032##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Rul_Execution_Order1
                   0#
                   LexerTypes.$tc'Rul_Conflict_Free1) -}
165da21cb6c497c91b2aa6cd6b6e87b2
  $tc'Rul_Execution_Order1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'Rul_Execution_Order2) -}
d0ab446dc03790264ff85ff8d6268960
  $tc'Rul_Execution_Order2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Rul_Execution_Order"#) -}
d00f11b12446ad87a3385cb92f3118fe
  $tc'Rul_Mutually_Exclusive :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   619291541630181296##
                   4588617263225891682##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Rul_Mutually_Exclusive1
                   0#
                   LexerTypes.$tc'Rul_Conflict_Free1) -}
27325f654b66240d4074705ebc8f49fa
  $tc'Rul_Mutually_Exclusive1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'Rul_Mutually_Exclusive2) -}
0ee760833012c3d34b0b6278498ae359
  $tc'Rul_Mutually_Exclusive2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Rul_Mutually_Exclusive"#) -}
e18b5918eba0acc0c0282172bf3b41fc
  $tc'Rul_Preempts :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7320140374898540617##
                   9019131570245511535##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Rul_Preempts1
                   0#
                   LexerTypes.$tc'Rul_Conflict_Free1) -}
733ede84bd1fd17d9a560c90e06adc03
  $tc'Rul_Preempts1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Rul_Preempts2) -}
191dc51194ff2b80ef59d5e8a7bd8c49
  $tc'Rul_Preempts2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Rul_Preempts"#) -}
28519ed41a9333c53fed7f9a51ea025a
  $tc'RuleLeaf :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6694354781660516338##
                   12905360881599298488##
                   LexerTypes.$trModule
                   LexerTypes.$tc'RuleLeaf2
                   0#
                   LexerTypes.$tc'RuleLeaf1) -}
2e46428ccb799790b8fc0406ebe9a8b5
  $tc'RuleLeaf1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
299f8206ede9735caadf2465290549ab
  $tc'RuleLeaf2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'RuleLeaf3) -}
c7f4bf1ecb468b15b864f361f7040a25
  $tc'RuleLeaf3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RuleLeaf"#) -}
21f0d4de97f14b4c7a40bc775f216bd2
  $tc'RuleNameAP :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8196804889181675878##
                   11211069817981197471##
                   LexerTypes.$trModule
                   LexerTypes.$tc'RuleNameAP1
                   0#
                   LexerTypes.$tc'ActionNameAP1) -}
b0c98c02d75fe5c2de6e5eb78fcca43d
  $tc'RuleNameAP1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'RuleNameAP2) -}
88b3a9b282235490f776eeaaeefcb588
  $tc'RuleNameAP2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RuleNameAP"#) -}
b016a137ce0bafb97e85e01afa242901
  $tc'RuleNode :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17970203518821246653##
                   6969327836780200392##
                   LexerTypes.$trModule
                   LexerTypes.$tc'RuleNode2
                   0#
                   LexerTypes.$tc'RuleNode1) -}
c40e2e744513dd180c180d5f8cfafa30
  $tc'RuleNode1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0aea21c23748a84e97502892741af80e
  $tc'RuleNode2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'RuleNode3) -}
9dddad8b12388ad59ae36d741aa1f971
  $tc'RuleNode3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RuleNode"#) -}
3fd98851d96f5e290f23faa4cb8caeeb
  $tc'RuleSchedule :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8265559863319225268##
                   781269519269824527##
                   LexerTypes.$trModule
                   LexerTypes.$tc'RuleSchedule2
                   0#
                   LexerTypes.$tc'RuleSchedule1) -}
cefa6b6cbc0e36df0de073c537971b10
  $tc'RuleSchedule1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
38597f7b8c6be20e98c29a4e0e484db5
  $tc'RuleSchedule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'RuleSchedule3) -}
52da4ade92c790bda9f565660f96d334
  $tc'RuleSchedule3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RuleSchedule"#) -}
948dd728b6c6ec1d6744e1c7f2fe8a6b
  $tc'RuleStem :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6493369174276286215##
                   15890333095513040562##
                   LexerTypes.$trModule
                   LexerTypes.$tc'RuleStem2
                   0#
                   LexerTypes.$tc'RuleStem1) -}
cfac616a7851cefacb73568ef22f9008
  $tc'RuleStem1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a0ba5e8e7d199eee136750f2d87697b7
  $tc'RuleStem2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'RuleStem3) -}
598184097e5ee4070ce56f06d8fd6f00
  $tc'RuleStem3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RuleStem"#) -}
dc1bb29c51fad93c21e9b0f259e3bfa6
  $tc'RuleUrgParams :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14251255393186918161##
                   18354629661624953118##
                   LexerTypes.$trModule
                   LexerTypes.$tc'RuleUrgParams2
                   0#
                   LexerTypes.$tc'RuleUrgParams1) -}
3fa1323b6ffbc6f122842687e94d4762
  $tc'RuleUrgParams1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
30b9c3a04e150736e43dcb7eca76b288
  $tc'RuleUrgParams2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'RuleUrgParams3) -}
00a450a43f9947116f309a76d145a20c
  $tc'RuleUrgParams3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RuleUrgParams"#) -}
ce1bd56212e2a5f15f157c7284773da4
  $tc'SimpleMacro :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3241965105728320330##
                   8961070673484219452##
                   LexerTypes.$trModule
                   LexerTypes.$tc'SimpleMacro2
                   0#
                   LexerTypes.$tc'SimpleMacro1) -}
ef694250996717287491f3cd6a9f63be
  $tc'SimpleMacro1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4e2a446b2e202b1b73085bc243090319
  $tc'SimpleMacro2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'SimpleMacro3) -}
6e6dc31d852955310d311e75dd4891e3
  $tc'SimpleMacro3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SimpleMacro"#) -}
615f9efa71fde1edabaf439fbef71b51
  $tc'SizedBypassFIFOF :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14574933852330753070##
                   13931816756233370554##
                   LexerTypes.$trModule
                   LexerTypes.$tc'SizedBypassFIFOF2
                   0#
                   LexerTypes.$tc'SizedBypassFIFOF1) -}
0591dba4923567e1f8ce6db920f8447d
  $tc'SizedBypassFIFOF1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
abe69a0e9a57b61b8d0588b0d1a6673e
  $tc'SizedBypassFIFOF2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'SizedBypassFIFOF3) -}
6a6b6e6aee8139064c12b3a1c5d8501d
  $tc'SizedBypassFIFOF3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SizedBypassFIFOF"#) -}
f214b4155fb0451a023a46fc604e33ea
  $tc'SizedFIFO :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13883534435195777829##
                   1642850883681293141##
                   LexerTypes.$trModule
                   LexerTypes.$tc'SizedFIFO1
                   0#
                   LexerTypes.$tc'SizedBypassFIFOF1) -}
b21998610690f2d215204ccf44b52a7e
  $tc'SizedFIFO1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'SizedFIFO2) -}
83990918e0288a2fdd3e4ea20143218f
  $tc'SizedFIFO2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SizedFIFO"#) -}
eed724f7b62036d7ca536c4d279eacf2
  $tc'SizedFIFOF :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3068893316114424202##
                   4870553542031605685##
                   LexerTypes.$trModule
                   LexerTypes.$tc'SizedFIFOF1
                   0#
                   LexerTypes.$tc'SizedBypassFIFOF1) -}
a5ccbb4dd89bce322baf3d362bc1d1ce
  $tc'SizedFIFOF1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'SizedFIFOF2) -}
3249169d8b7b201367d531b63d8b1730
  $tc'SizedFIFOF2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SizedFIFOF"#) -}
96011e3307ce6bf8aef3dd55a3ad8399
  $tc'Skip :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4970487151405271802##
                   18234729990638325611##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Skip2
                   0#
                   LexerTypes.$tc'Skip1) -}
53806baf6f71c32954e07642463ffe23
  $tc'Skip1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
58e5446f9ae13b6990d4a7d5cd26bf03
  $tc'Skip2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Skip3) -}
f6501bb923a615dacbe9472b3361c45e
  $tc'Skip3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Skip"#) -}
4d894514ccb1e6051dedfd560de52bd7
  $tc'SpecEx :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   959861886170427009##
                   11516296573536040637##
                   LexerTypes.$trModule
                   LexerTypes.$tc'SpecEx2
                   0#
                   LexerTypes.$tc'SpecEx1) -}
2b2c53aae066ed05c2e05d83cd70207a
  $tc'SpecEx1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a6b69b27e566459d22c879401925fbe5
  $tc'SpecEx2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'SpecEx3) -}
fced1397ee23ba42c5cc2eb534882177
  $tc'SpecEx3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SpecEx"#) -}
064466fd1e5f152d66fdace717cd9359
  $tc'SpecLeaf :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9544770084662751447##
                   16510424964941736024##
                   LexerTypes.$trModule
                   LexerTypes.$tc'SpecLeaf2
                   0#
                   LexerTypes.$tc'SpecLeaf1) -}
a1a3eb17d120700cd1fa6b1af6ba7ef6
  $tc'SpecLeaf1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
28c1e545c4c25269e0f52bac27e0c7af
  $tc'SpecLeaf2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'SpecLeaf3) -}
1cabc672c0127b71275cfc4ef0151e13
  $tc'SpecLeaf3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SpecLeaf"#) -}
9263a4a332b0e8ff4cbfe50b18a9670d
  $tc'SpecStem :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   984275362733370046##
                   17956090361398436293##
                   LexerTypes.$trModule
                   LexerTypes.$tc'SpecStem2
                   0#
                   LexerTypes.$tc'SpecStem1) -}
2ffb62c43b4105014170d967e9c03178
  $tc'SpecStem1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
557c8a201882ff10348c8b9e17eee38d
  $tc'SpecStem2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'SpecStem3) -}
36234a674fe075383d92786dc5814c45
  $tc'SpecStem3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SpecStem"#) -}
312bef1515cd6873038239344c506e31
  $tc'Split :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11449781025478821495##
                   3406777190011867356##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Split1
                   0#
                   LexerTypes.$tc'NoSplit1) -}
69c6a7d69b2d911af26eaff85e922307
  $tc'Split1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Split2) -}
dff2bd4cd7b63b7dd6b063c968d4fc3a
  $tc'Split2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Split"#) -}
f8f6f7014a688cdd199b3044cf1db0e4
  $tc'Sta_Conflict_Free :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10587070359774006849##
                   2763193892188217577##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Sta_Conflict_Free2
                   0#
                   LexerTypes.$tc'Sta_Conflict_Free1) -}
9abbfbd6362a0926a5b51c5a2b5af3e9
  $tc'Sta_Conflict_Free1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
866e1304fc6b8942ec26220b3ec5d750
  $tc'Sta_Conflict_Free2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Sta_Conflict_Free3) -}
f383b4c6a5b5fa87f7fd32d63b7e7cdb
  $tc'Sta_Conflict_Free3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Sta_Conflict_Free"#) -}
60b9ad550f0d603ccbca36518be8ead8
  $tc'Sta_Descending_Urgency :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14499983184084282343##
                   4319063787501018798##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Sta_Descending_Urgency1
                   0#
                   LexerTypes.$tc'Sta_Conflict_Free1) -}
80df0e63f92e44d0c3eade5075525764
  $tc'Sta_Descending_Urgency1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'Sta_Descending_Urgency2) -}
75934b100022ea5ef8dcf0e13f0a6cf1
  $tc'Sta_Descending_Urgency2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Sta_Descending_Urgency"#) -}
839e1ffeadb9c588ad9ab308f3516411
  $tc'Sta_Doc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2919745661653458726##
                   8762756816838881437##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Sta_Doc2
                   0#
                   LexerTypes.$tc'Sta_Doc1) -}
6a23aa12211835e78b4aa6b88c902bf8
  $tc'Sta_Doc1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
aaaaf563f46b8bc13b1623adf2305dff
  $tc'Sta_Doc2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Sta_Doc3) -}
f2999a3e5962ac8205a3a1f869518c5b
  $tc'Sta_Doc3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Sta_Doc"#) -}
42558280eeee40bae31572200471f769
  $tc'Sta_Execution_Order :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6405524496598957215##
                   15480631263184586192##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Sta_Execution_Order1
                   0#
                   LexerTypes.$tc'Sta_Conflict_Free1) -}
d5c8bb4f02f70dca943a4e5015265b83
  $tc'Sta_Execution_Order1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'Sta_Execution_Order2) -}
b41e3722ced295fc8376408a9643c14f
  $tc'Sta_Execution_Order2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Sta_Execution_Order"#) -}
b5d8d4236474590b38fc1140b796a29f
  $tc'Sta_Mutually_Exclusive :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15565626760003957396##
                   13042302701279182589##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Sta_Mutually_Exclusive1
                   0#
                   LexerTypes.$tc'Sta_Conflict_Free1) -}
1ef2de8e4fbff395c638fb0901c684a9
  $tc'Sta_Mutually_Exclusive1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tc'Sta_Mutually_Exclusive2) -}
3daebec5779f8f7226131a71959b6c23
  $tc'Sta_Mutually_Exclusive2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Sta_Mutually_Exclusive"#) -}
6725fa84744bf0672656b241662b3bda
  $tc'Sta_Preempts :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9787102088794082557##
                   3176890227857923482##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Sta_Preempts1
                   0#
                   LexerTypes.$tc'Sta_Conflict_Free1) -}
6444e9f3565d6cfbd3ce523c61c2768f
  $tc'Sta_Preempts1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Sta_Preempts2) -}
102badde49429c0a02375a1191d2d313
  $tc'Sta_Preempts2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Sta_Preempts"#) -}
7b69348a8398baea3fe7c42523f62f99
  $tc'StatementBlock :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12836697555142341223##
                   17990333165545160936##
                   LexerTypes.$trModule
                   LexerTypes.$tc'StatementBlock2
                   0#
                   LexerTypes.$tc'StatementBlock1) -}
e657ac3471ca3fe155259594bcd61f96
  $tc'StatementBlock1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7fb3122e3708f1fb0a337908e6641231
  $tc'StatementBlock2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'StatementBlock3) -}
b9fcb6e0ecc00df0b43ea68da8f6763c
  $tc'StatementBlock3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'StatementBlock"#) -}
6112ebd5b9fc6bcea4fe3838ba29c667
  $tc'StructCluster :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10340871020591418286##
                   8369303458094316582##
                   LexerTypes.$trModule
                   LexerTypes.$tc'StructCluster2
                   0#
                   LexerTypes.$tc'StructCluster1) -}
0df34549415598b13e93542573219fca
  $tc'StructCluster1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0235f2c07ea53b2a91b57a9a1bb2cfca
  $tc'StructCluster2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'StructCluster3) -}
90e0d00757e61a66e3a5a0de4f349072
  $tc'StructCluster3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'StructCluster"#) -}
adef7d09895f0d9586d83daddb4588f3
  $tc'StructReturn :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17918128767857822673##
                   14111170678672946875##
                   LexerTypes.$trModule
                   LexerTypes.$tc'StructReturn2
                   0#
                   LexerTypes.$tc'StructReturn1) -}
d0657beb21f2da09c3c22275cb61d190
  $tc'StructReturn1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
5dccba26f66cca376f5cc8cdd768d6f1
  $tc'StructReturn2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'StructReturn3) -}
1bdc89940a6798ff032bf8166ae3d0c0
  $tc'StructReturn3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'StructReturn"#) -}
a469928d830b227bd365b6269c427ef8
  $tc'SubmoduleNameAP :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12662959384426176348##
                   3257968835988339260##
                   LexerTypes.$trModule
                   LexerTypes.$tc'SubmoduleNameAP2
                   0#
                   LexerTypes.$tc'SubmoduleNameAP1) -}
c9208befd39763e10456d26011b97ece
  $tc'SubmoduleNameAP1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
e32609d1aac4fb77f7f2ed97134a3482
  $tc'SubmoduleNameAP2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'SubmoduleNameAP3) -}
0ea950ef0f9ca7bac20861e6a6b9d858
  $tc'SubmoduleNameAP3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SubmoduleNameAP"#) -}
2ac8368bb1c962e5cd73e5dfb0d6b35f
  $tc'Subtract :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14463031067499575552##
                   12971378884902687570##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Subtract1
                   0#
                   LexerTypes.$tc'Add1) -}
557dff3fa6f385be4da5eb954797f6ff
  $tc'Subtract1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Subtract2) -}
d9653a09a614da50c384753d3ee17f1f
  $tc'Subtract2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Subtract"#) -}
ac2507eadaf1f397b7187fc43ea00923
  $tc'Switch :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12517449863474146497##
                   8784927405748740056##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Switch2
                   0#
                   LexerTypes.$tc'Switch1) -}
698349c8e802bef7814c07eab5933890
  $tc'Switch1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
af981f55c3fafe95ee54d7e277878b00
  $tc'Switch2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Switch3) -}
166c284d6a80894e413877b9c827e5fa
  $tc'Switch3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Switch"#) -}
cb5da13263464745ff8693ff56e407e6
  $tc'Synthesize :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3258277603634892467##
                   17338458837211635144##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Synthesize1
                   0#
                   LexerTypes.$tc'Default_Gate_Inhigh1) -}
c8e3ea93c05f66e59c5923129bcda021
  $tc'Synthesize1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Synthesize2) -}
7f68112528cc67c4c9895e84e39280e5
  $tc'Synthesize2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Synthesize"#) -}
8b0304edbcbd4a6ca727816cb26fe61f
  $tc'T2B :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14021361882065358318##
                   6331933842937088732##
                   LexerTypes.$trModule
                   LexerTypes.$tc'T2B1
                   0#
                   LexerTypes.$tc'B2B1) -}
35934c63d3757fed7f6f10fe153777e5
  $tc'T2B1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'T2B2) -}
1f755f4148b2e33696ef142c1143d52d
  $tc'T2B2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T2B"#) -}
1e4fb9da8010ffbb8c8c11f39e719583
  $tc'T2P :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2185816231563264074##
                   425484059755551153##
                   LexerTypes.$trModule
                   LexerTypes.$tc'T2P1
                   0#
                   LexerTypes.$tc'B2B1) -}
1caf468afed1d0d57a24fb5c270e88f5
  $tc'T2P1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'T2P2) -}
0610137214c49fe8356c55e47bbe87c4
  $tc'T2P2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T2P"#) -}
62dc91e1ab0db8e900871b74de57a7ba
  $tc'THeap :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13651537728012699894##
                   1025692599262322388##
                   LexerTypes.$trModule
                   LexerTypes.$tc'THeap2
                   0#
                   LexerTypes.$tc'THeap1) -}
5c6e27680098d5d319845956331a513d
  $tc'THeap1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2d0ce730fd2aae7eb7fff619f3e9f01e
  $tc'THeap2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'THeap3) -}
5ae605bec8a12daa7665788950c99cda
  $tc'THeap3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'THeap"#) -}
c40e1872b360c33aba8e4a9d13f0d0b7
  $tc'TSPpackage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7398354897791975091##
                   10040838078190096994##
                   LexerTypes.$trModule
                   LexerTypes.$tc'TSPpackage2
                   0#
                   LexerTypes.$tc'TSPpackage1) -}
e1edcb3e2a307551afc3c0949b9302cc
  $tc'TSPpackage1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
333abf16a61e0a05003f57c6fa0b0a17
  $tc'TSPpackage2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'TSPpackage3) -}
dfb241ff89273d036888b034b22e0e59
  $tc'TSPpackage3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TSPpackage"#) -}
0843127c8603c6e8e66dcd143f3bc095
  $tc'Tagged :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11975981255956620181##
                   5712085379651442156##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Tagged2
                   0#
                   LexerTypes.$tc'Tagged1) -}
5c53e933d1a4443649dbb4b226c18b20
  $tc'Tagged1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4673064a9e95252369881c2299147cb2
  $tc'Tagged2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Tagged3) -}
00010af5299a9229135fb0b6d8438a5e
  $tc'Tagged3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Tagged"#) -}
197f86362377618cc8ba89e8619631e7
  $tc'TotalLeaf :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17117371672734875745##
                   5880128825919732155##
                   LexerTypes.$trModule
                   LexerTypes.$tc'TotalLeaf2
                   0#
                   LexerTypes.$tc'TotalLeaf1) -}
9d59a5a312556baffe459399253ade0a
  $tc'TotalLeaf1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
cf2f7faa90499cec8f3715988797240f
  $tc'TotalLeaf2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'TotalLeaf3) -}
8ded4db1d6479c80275eb7e44f818e63
  $tc'TotalLeaf3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TotalLeaf"#) -}
7d0f9fb6422c7f5d6617f497883391ee
  $tc'TotalStem :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5538815503530478346##
                   10292749637686032627##
                   LexerTypes.$trModule
                   LexerTypes.$tc'TotalStem2
                   0#
                   LexerTypes.$tc'TotalStem1) -}
884d4aa22ae30d599803fbc9ffbff7f5
  $tc'TotalStem1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
5bc7b5f15fffb8345560305cdfbb6b5a
  $tc'TotalStem2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'TotalStem3) -}
a2311a5c8c6b903ac9922d18b4db72f9
  $tc'TotalStem3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TotalStem"#) -}
a796f6dd1d699057770767d5319b7749
  $tc'TransDWire :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14904561274292976267##
                   5409193427365887371##
                   LexerTypes.$trModule
                   LexerTypes.$tc'TransDWire2
                   0#
                   LexerTypes.$tc'TransDWire1) -}
4d8026838c9fff57e28fda9cec0df12a
  $tc'TransDWire1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6e0a33d15bdd1d1c61bf158b615fb199
  $tc'TransDWire2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'TransDWire3) -}
a3fd9294729e0f3d663aa9606f521d17
  $tc'TransDWire3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TransDWire"#) -}
482319c0ec6f85ede1e04e925fc52384
  $tc'TransFIFO :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2051965510951662861##
                   7569502433609761213##
                   LexerTypes.$trModule
                   LexerTypes.$tc'TransFIFO2
                   0#
                   LexerTypes.$tc'TransFIFO1) -}
0c855bddad319873638b7d4dd8e8f40a
  $tc'TransFIFO1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
e01d3a174ee18f30e174bd23d390093b
  $tc'TransFIFO2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'TransFIFO3) -}
765f5de075770130835e3b5e30428686
  $tc'TransFIFO3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TransFIFO"#) -}
14020c05a3a28ab0e4fa9b4f6c2f6e43
  $tc'TransMod :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   197368879081701038##
                   15660901600128883739##
                   LexerTypes.$trModule
                   LexerTypes.$tc'TransMod2
                   0#
                   LexerTypes.$tc'TransMod1) -}
5ec351a79e5bd7979d187a332e26878c
  $tc'TransMod1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6c8802dfc000d98023e507cc807a1055
  $tc'TransMod2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'TransMod3) -}
6ff0259732e2d5a667215ec006eeb49d
  $tc'TransMod3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TransMod"#) -}
6bada72d23c9712ca43d308516acb7e3
  $tc'TransModMethods :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6846156064243858852##
                   9715917511215009479##
                   LexerTypes.$trModule
                   LexerTypes.$tc'TransModMethods2
                   0#
                   LexerTypes.$tc'TransModMethods1) -}
5165eaae8f413adfc64a23716945f6bf
  $tc'TransModMethods1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
4f47b82bf307b6f8e2d252d695f5250a
  $tc'TransModMethods2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'TransModMethods3) -}
a000e42c3dbd5412a6801ff263886561
  $tc'TransModMethods3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TransModMethods"#) -}
1609fb4b8b652c42899fc87527da29ff
  $tc'TransReg :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6300468489239418527##
                   13609351849353355680##
                   LexerTypes.$trModule
                   LexerTypes.$tc'TransReg2
                   0#
                   LexerTypes.$tc'TransReg1) -}
8db4dea376c2ed12c45b7e9fb3c5f315
  $tc'TransReg1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
31437a5932258848c04dd6b60eba60fd
  $tc'TransReg2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'TransReg3) -}
172ee0fcf30acb6dc99cfe5569975586
  $tc'TransReg3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TransReg"#) -}
3e6dfc1301fd0c1bab3015cadfbcb475
  $tc'TransStruct :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11619273051296056117##
                   16588718382508314755##
                   LexerTypes.$trModule
                   LexerTypes.$tc'TransStruct1
                   0#
                   LexerTypes.$tc'TransMod1) -}
bc05623aa3361ba889f2d9e586bd2362
  $tc'TransStruct1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'TransStruct2) -}
c5cdaebdefb382fabfd5f48676e567c5
  $tc'TransStruct2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TransStruct"#) -}
85692f2ee56b01b23eb2bedd078be7ca
  $tc'TransVect :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8912026066685779405##
                   4929970136746066968##
                   LexerTypes.$trModule
                   LexerTypes.$tc'TransVect2
                   0#
                   LexerTypes.$tc'TransVect1) -}
9e55bdb8180a6060647707f83c076f97
  $tc'TransVect1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
571e59144e2c0a36d9c579a41b7dde51
  $tc'TransVect2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'TransVect3) -}
536ba94fad3e0545232c8ca1c26cfb2a
  $tc'TransVect3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TransVect"#) -}
d220018ba810366605cace8fd06ad425
  $tc'UAssign :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7703221825285541446##
                   8758572269652849216##
                   LexerTypes.$trModule
                   LexerTypes.$tc'UAssign2
                   0#
                   LexerTypes.$tc'UAssign1) -}
86be33f46df0ad99ae51f0e0daeec2dc
  $tc'UAssign1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d3cfd7b85c74964c4022f4a7efd59ed5
  $tc'UAssign2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'UAssign3) -}
bc55d8bd0bf3dd71f46dd2d3c4302509
  $tc'UAssign3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'UAssign"#) -}
62a66de01311d0e1fe3d6d3d2a3d1cf3
  $tc'U_Int :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9475532993682715412##
                   11397600819310211359##
                   LexerTypes.$trModule
                   LexerTypes.$tc'U_Int2
                   0#
                   LexerTypes.$tc'U_Int1) -}
cf5990fd7fd2883db9907208f2e884c3
  $tc'U_Int1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
3cca624d1cd68cea246462880a69ed24
  $tc'U_Int2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'U_Int3) -}
acfa48f9dbddb05f0bf2f41376f6d194
  $tc'U_Int3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'U_Int"#) -}
e0f24e8f9090522b5976aa4dae93e2ec
  $tc'U_String :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   509473267526279691##
                   2825803399969514258##
                   LexerTypes.$trModule
                   LexerTypes.$tc'U_String1
                   0#
                   LexerTypes.$tc'U_Int1) -}
8e3a2de5d34e63ecb80c14134ce053a8
  $tc'U_String1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'U_String2) -}
08b50ec31495a5e396fecc4d456978d1
  $tc'U_String2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'U_String"#) -}
c7e6718e45c873b184d68425903a11e4
  $tc'Valid :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7129189182269031556##
                   6245162404669448784##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Valid1
                   0#
                   LexerTypes.$tc'MaybeContainer1) -}
c7ac55ee118f81d9bd7163a7d0f0aa7c
  $tc'Valid1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Valid2) -}
64cd16ce08ffa8364906107c5710f4ed
  $tc'Valid2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Valid"#) -}
e52ebe2bd6b78303dc74f16c577cfd2c
  $tc'ValidID :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   139032951935281571##
                   5912463366773754660##
                   LexerTypes.$trModule
                   LexerTypes.$tc'ValidID2
                   0#
                   LexerTypes.$tc'ValidID1) -}
7f45fe5d666d4e4146d90794ae8f4129
  $tc'ValidID1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d2727f1b915b6e85a14d560b2b22a553
  $tc'ValidID2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'ValidID3) -}
1ec2f1718c0c3e0210860b1255034588
  $tc'ValidID3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ValidID"#) -}
1550b4f5c20be90fa119afe93d832915
  $tc'Value :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12119708668159200894##
                   13748824139129852477##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Value1
                   0#
                   LexerTypes.$tc'ActionValue1) -}
2e11df9f9900cd3d7b14a30b6b542462
  $tc'Value1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Value2) -}
8ff38f574ce53fe35b5898665611edef
  $tc'Value2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Value"#) -}
d79761ed54de78c983d232c6e3d1947e
  $tc'ValueMethodCall :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17424281136343338999##
                   3653861663706928343##
                   LexerTypes.$trModule
                   LexerTypes.$tc'ValueMethodCall2
                   0#
                   LexerTypes.$tc'ValueMethodCall1) -}
4302a5acbb846245068977bb89550ce4
  $tc'ValueMethodCall1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
60fe0b286ef5a81ac808d90c96444c4d
  $tc'ValueMethodCall2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'ValueMethodCall3) -}
db83fbc496c74a8faa8e0a9ac8a3c077
  $tc'ValueMethodCall3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ValueMethodCall"#) -}
887b1af7405101fbebad70987850d8be
  $tc'Void :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8478046448612749371##
                   12535025974351233635##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Void2
                   0#
                   LexerTypes.$tc'Void1) -}
8e01687a41cc5888687a8df9fc5e3820
  $tc'Void1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
96fcea48fb1188acba85fd9afbc0d39b
  $tc'Void2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Void3) -}
b9eacf38b014a236304ab2543177a506
  $tc'Void3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Void"#) -}
d389405710c1e8be2b21af195a0f6764
  $tc'Write :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10046515249960813381##
                   15891253665229389761##
                   LexerTypes.$trModule
                   LexerTypes.$tc'Write2
                   0#
                   LexerTypes.$tc'Write1) -}
4516b9d820e7bfdfd0e9d91af46bd840
  $tc'Write1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
30e42b53454cc3019afcc42a77cee212
  $tc'Write2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tc'Write3) -}
4ec150da30d6c9713de910ee83341776
  $tc'Write3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Write"#) -}
45b79c422d5e8b066f660fc451b48e25
  $tcActionAttribute :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11624908024933507719##
                   16573150853726705815##
                   LexerTypes.$trModule
                   LexerTypes.$tcActionAttribute1
                   0#
                   GHC.Types.krep$*) -}
748f7d33a0972c496a3e1acc0981536c
  $tcActionAttribute1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcActionAttribute2) -}
a40b0801a50b317501298b6547630b6a
  $tcActionAttribute2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ActionAttribute"#) -}
7a3ddb80803f43288b43357431c18905
  $tcActionPath :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4838061571204121167##
                   13065915957951990649##
                   LexerTypes.$trModule
                   LexerTypes.$tcActionPath1
                   0#
                   GHC.Types.krep$*) -}
a34302cae400ad544a2a70461244afc6
  $tcActionPath1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcActionPath2) -}
baa3de7fad0921a50038e9272f240996
  $tcActionPath2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ActionPath"#) -}
3bccea0362d696fc1598b008a994ce72
  $tcArgumentAttribute :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1565043226010675605##
                   2419014350005957319##
                   LexerTypes.$trModule
                   LexerTypes.$tcArgumentAttribute1
                   0#
                   GHC.Types.krep$*) -}
f133dbcade226c155e1693977b34bf81
  $tcArgumentAttribute1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcArgumentAttribute2) -}
98e25ea595277bce047cf977a86e2ac8
  $tcArgumentAttribute2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ArgumentAttribute"#) -}
e79be2dd7e1abea1adbec455469501ee
  $tcBSVMacro :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16989755856405394270##
                   5915820156022140899##
                   LexerTypes.$trModule
                   LexerTypes.$tcBSVMacro1
                   0#
                   GHC.Types.krep$*) -}
0f6ad57df854860b2647479b3c0fed5e
  $tcBSVMacro1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcBSVMacro2) -}
c11b30052d67b52a100c56bf118d8327
  $tcBSVMacro2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BSVMacro"#) -}
66e9bd9b165d8aee3d2852557c024aaa
  $tcBSVModuleDec :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15049227673176833561##
                   10674699165636455981##
                   LexerTypes.$trModule
                   LexerTypes.$tcBSVModuleDec1
                   0#
                   GHC.Types.krep$*) -}
b8886ae318d6385cae7c09b2585092a0
  $tcBSVModuleDec1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcBSVModuleDec2) -}
81c096e06c1b5bb7a78abfaaf15908c7
  $tcBSVModuleDec2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BSVModuleDec"#) -}
a4900699565aac57dbe7b923bcdd2417
  $tcBSVPackage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4149883357455896385##
                   18392604897677011978##
                   LexerTypes.$trModule
                   LexerTypes.$tcBSVPackage1
                   0#
                   GHC.Types.krep$*) -}
bc74080e62ad8563c418e1199bff825e
  $tcBSVPackage1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcBSVPackage2) -}
9f7d233cc030e88f032b2778f3b8b6d0
  $tcBSVPackage2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BSVPackage"#) -}
2667201b3f980bd25e99986dbc15345d
  $tcBSVType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18320196889076010671##
                   17148513318559939336##
                   LexerTypes.$trModule
                   LexerTypes.$tcBSVType1
                   0#
                   GHC.Types.krep$*) -}
b531caea4d1afb856e893e694d5b8ea5
  $tcBSVType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcBSVType2) -}
68e7087cffbbd94ae72f9004228918dc
  $tcBSVType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BSVType"#) -}
f67b967c8daac3ffaac17854a8969c10
  $tcBSVTypeDef :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7986940412359183066##
                   3073893030642280806##
                   LexerTypes.$trModule
                   LexerTypes.$tcBSVTypeDef1
                   0#
                   GHC.Types.krep$*) -}
14fba92604d434269ac3dcf0ba781bff
  $tcBSVTypeDef1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcBSVTypeDef2) -}
1f19edb724d621396827c630f6d8077d
  $tcBSVTypeDef2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BSVTypeDef"#) -}
2d876270ca6ad5ecca9f784aa0867856
  $tcBSVstateDec :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1392286564685942410##
                   8810744995519898371##
                   LexerTypes.$trModule
                   LexerTypes.$tcBSVstateDec1
                   0#
                   GHC.Types.krep$*) -}
294969452c4b44b7ed8791724b79561b
  $tcBSVstateDec1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcBSVstateDec2) -}
1851500dc2fba1f3227f497b2c83d8e7
  $tcBSVstateDec2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("BSVstateDec"#) -}
83e453a0b637d4a863b7dcd35623b05d
  $tcExpression :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6264054519488664985##
                   2921379769506905210##
                   LexerTypes.$trModule
                   LexerTypes.$tcExpression1
                   0#
                   GHC.Types.krep$*) -}
dff5f50eb3be0b8d443e44298a789dcb
  $tcExpression1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcExpression2) -}
3d25ca188fc4a758c8bcf9184a4232d9
  $tcExpression2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Expression"#) -}
b6cd53aeb1851246310e4622475d4142
  $tcFifoType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5083775740463432399##
                   12458935004482230538##
                   LexerTypes.$trModule
                   LexerTypes.$tcFifoType1
                   0#
                   GHC.Types.krep$*) -}
3f6e9221483d0d57788c28b45c7ac54a
  $tcFifoType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcFifoType2) -}
ae9dcf61a1e405e62ced28abecc113e2
  $tcFifoType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FifoType"#) -}
c7178c8291d8ce2e533cacbf7a77c500
  $tcID_Path :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17248525880023135246##
                   9945658042994899176##
                   LexerTypes.$trModule
                   LexerTypes.$tcID_Path1
                   0#
                   GHC.Types.krep$*) -}
152b1a6a1fc03936423ef455edcb9a94
  $tcID_Path1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcID_Path2) -}
99ef2679114b76d42118aaff5ad0a96e
  $tcID_Path2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ID_Path"#) -}
b4c8873c13f30a8cb5369cc917a0b762
  $tcInterfaceAttribute :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7404095001049345718##
                   12969111632426461565##
                   LexerTypes.$trModule
                   LexerTypes.$tcInterfaceAttribute1
                   0#
                   GHC.Types.krep$*) -}
4803bb6a78740c415df4b92cf1caa78c
  $tcInterfaceAttribute1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcInterfaceAttribute2) -}
333768007728bb9fd7fa05dbe666360b
  $tcInterfaceAttribute2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InterfaceAttribute"#) -}
069eacafb57f56b72b065eb8aa68950c
  $tcInvokationTree :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13624222514874819420##
                   1240102748208215535##
                   LexerTypes.$trModule
                   LexerTypes.$tcInvokationTree1
                   0#
                   GHC.Types.krep$*) -}
07d665472fe0c78f78d7eb11c9645599
  $tcInvokationTree1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcInvokationTree2) -}
d95fe2b6dc632927181a6bfa968bef66
  $tcInvokationTree2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("InvokationTree"#) -}
427abb8687d1002f18cec5066ddf0a6f
  $tcLit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7847873027271535124##
                   12800890222578541847##
                   LexerTypes.$trModule
                   LexerTypes.$tcLit1
                   0#
                   GHC.Types.krep$*) -}
4f44dffc7004d0222d66c3263698ec38
  $tcLit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcLit2) -}
8a46955d012bf980151f23da6af704e6
  $tcLit2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lit"#) -}
406604efb942279b14223e66599a5c24
  $tcMaybeIDTag :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4555375729369858225##
                   8617446409654713960##
                   LexerTypes.$trModule
                   LexerTypes.$tcMaybeIDTag1
                   0#
                   GHC.Types.krep$*) -}
7cca929e318d4a9f36b2b79f200d280c
  $tcMaybeIDTag1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcMaybeIDTag2) -}
86e3552fd2134ef7438665abbcc3bb43
  $tcMaybeIDTag2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MaybeIDTag"#) -}
46c4bb829e027146341098ab64cee6df
  $tcMaybeTag :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14790168898723295098##
                   17340202207763948724##
                   LexerTypes.$trModule
                   LexerTypes.$tcMaybeTag1
                   0#
                   GHC.Types.krep$*) -}
bbd8c9be1a869ced0aa5e6c84f23c1d4
  $tcMaybeTag1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcMaybeTag2) -}
c3289530d78b67a749222bd490189dd4
  $tcMaybeTag2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MaybeTag"#) -}
959e301808052818897e2b0d9ca53fd5
  $tcMethodBodyAttribute :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6037241270720214503##
                   8473174970562220255##
                   LexerTypes.$trModule
                   LexerTypes.$tcMethodBodyAttribute1
                   0#
                   GHC.Types.krep$*) -}
c5a9d5e64239a437f418c7f22c0d53bc
  $tcMethodBodyAttribute1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tcMethodBodyAttribute2) -}
03126aa684969807943d4023b4e5ee48
  $tcMethodBodyAttribute2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MethodBodyAttribute"#) -}
81893f4c7c74f2a60ff54a8b75b0fb25
  $tcMethodDecAttribute :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7831041396600760388##
                   14222273035528855725##
                   LexerTypes.$trModule
                   LexerTypes.$tcMethodDecAttribute1
                   0#
                   GHC.Types.krep$*) -}
86ddf5b98471256c86a1bf7a528e6336
  $tcMethodDecAttribute1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcMethodDecAttribute2) -}
a55bab87e392f1cd551d88d9ad5458f0
  $tcMethodDecAttribute2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MethodDecAttribute"#) -}
120d5221df9ea272966dd5a4c3017541
  $tcMode :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7370647390067376494##
                   11494853127782215787##
                   LexerTypes.$trModule
                   LexerTypes.$tcMode1
                   0#
                   GHC.Types.krep$*) -}
7bc949f8e2f8a3bd4e8704917b96f756
  $tcMode1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcMode2) -}
111a642220823408b5a323e5d9df76bc
  $tcMode2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Mode"#) -}
b693e0a2b2fb429a5c109af8eac8a68b
  $tcModuleAttribute :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14865872723848790063##
                   4672054401233655625##
                   LexerTypes.$trModule
                   LexerTypes.$tcModuleAttribute1
                   0#
                   GHC.Types.krep$*) -}
961d32e963d5281eb4cb2e657f347502
  $tcModuleAttribute1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcModuleAttribute2) -}
e1d7df3c8d086890e2823d464b819732
  $tcModuleAttribute2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ModuleAttribute"#) -}
17e5f57377ddca1a74d8977d4f851a76
  $tcPVSPackage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15730159056267875574##
                   9308634315370972759##
                   LexerTypes.$trModule
                   LexerTypes.$tcPVSPackage1
                   0#
                   GHC.Types.krep$*) -}
da738ac5df4bf7823c4ecf5ab945522e
  $tcPVSPackage1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcPVSPackage2) -}
7c6b3e14fa21f4d583fe7798a85e52d7
  $tcPVSPackage2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PVSPackage"#) -}
c0ab12451e5eee66b452ac1b05d67887
  $tcPVSType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10618654661545762860##
                   11209388778110576239##
                   LexerTypes.$trModule
                   LexerTypes.$tcPVSType1
                   0#
                   GHC.Types.krep$*) -}
e646db1302f0cb501f86e2ce952497d4
  $tcPVSType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcPVSType2) -}
1ccbdacac6d9f1f605e948f10ad6c734
  $tcPVSType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PVSType"#) -}
7ec65a42f261d7be4aa42ae5cefefca9
  $tcPVSTypeDef :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1698823662151990428##
                   9184526553795202021##
                   LexerTypes.$trModule
                   LexerTypes.$tcPVSTypeDef1
                   0#
                   GHC.Types.krep$*) -}
49523dea406c69a31600828c3ca8c189
  $tcPVSTypeDef1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcPVSTypeDef2) -}
0e4c76e51502d05c22dc7f3e62e5b46e
  $tcPVSTypeDef2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PVSTypeDef"#) -}
cc628fb3536cca76ebb3fcf102a83f52
  $tcPVSstate :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6509461209570237594##
                   357994229279626161##
                   LexerTypes.$trModule
                   LexerTypes.$tcPVSstate1
                   0#
                   GHC.Types.krep$*) -}
7d7cf84117152012f363fa3d5d0d07a2
  $tcPVSstate1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcPVSstate2) -}
5d87c827ccb6c5de1fb2551bb046bfad
  $tcPVSstate2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PVSstate"#) -}
6ef648d2b10645f0892f5870462bab1d
  $tcPermMod :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10323960005036395107##
                   13889321138801236835##
                   LexerTypes.$trModule
                   LexerTypes.$tcPermMod1
                   0#
                   GHC.Types.krep$*) -}
36c02199d226dacadfea5db5bbc4975d
  $tcPermMod1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcPermMod2) -}
cd011f4747c08071349e95c06fe2a323
  $tcPermMod2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PermMod"#) -}
e0a02b213c4d16d821b3c1323c70b658
  $tcRegFileLoader :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5499461558060790268##
                   17349220840311722535##
                   LexerTypes.$trModule
                   LexerTypes.$tcRegFileLoader1
                   0#
                   GHC.Types.krep$*) -}
c154c24302c7570793d654086a14138f
  $tcRegFileLoader1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcRegFileLoader2) -}
ffe33be227044c6de65ce4ee43da9a79
  $tcRegFileLoader2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RegFileLoader"#) -}
a40420900c3a2fb06b45a9de76669b73
  $tcReturnType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9386865191810254110##
                   10198289095450959978##
                   LexerTypes.$trModule
                   LexerTypes.$tcReturnType1
                   0#
                   GHC.Types.krep$*) -}
476eaadf65e6fd0eec79a630894574aa
  $tcReturnType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcReturnType2) -}
647eb352d31fcaf51584b78e13ce4d1a
  $tcReturnType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ReturnType"#) -}
181d4e06fcd1265df1df5fcb73e4234d
  $tcRuleAttribute :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8629819879368721112##
                   404162005918180404##
                   LexerTypes.$trModule
                   LexerTypes.$tcRuleAttribute1
                   0#
                   GHC.Types.krep$*) -}
8b60a6d60e1e1e3ca9119390eb08fdec
  $tcRuleAttribute1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcRuleAttribute2) -}
becd74a74e45de2b6922c8b51255d590
  $tcRuleAttribute2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RuleAttribute"#) -}
3be11e251d5fd14ffb13f7f9fd062e6a
  $tcRuleHeap :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13386609545393205409##
                   2636832776654234695##
                   LexerTypes.$trModule
                   LexerTypes.$tcRuleHeap1
                   0#
                   GHC.Types.krep$*) -}
05f64e1e53199129b0719c192c3fe196
  $tcRuleHeap1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcRuleHeap2) -}
e72f9a55957350612806c6eb71da0b98
  $tcRuleHeap2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RuleHeap"#) -}
24e65c6765d2bbcfb9f4688b925ed48e
  $tcRuleNode :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13986934668481753098##
                   17553867113605049666##
                   LexerTypes.$trModule
                   LexerTypes.$tcRuleNode1
                   0#
                   GHC.Types.krep$*) -}
f338664152c711c41bda8b74afa77635
  $tcRuleNode1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcRuleNode2) -}
021a033e8559849571e9a81bb952144c
  $tcRuleNode2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RuleNode"#) -}
c4a408319061732658b11d2004a13394
  $tcRuleSchedule :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   361912323716911030##
                   12323132078241181484##
                   LexerTypes.$trModule
                   LexerTypes.$tcRuleSchedule1
                   0#
                   GHC.Types.krep$*) -}
567ca57abb805f92f237abf0eed6d8fb
  $tcRuleSchedule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcRuleSchedule2) -}
720610215b3d670b489deaf71afaaecf
  $tcRuleSchedule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RuleSchedule"#) -}
da511b2328b2c90e234f47c31284ad5c
  $tcRuleTree :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5429438750844286377##
                   4633262040816460346##
                   LexerTypes.$trModule
                   LexerTypes.$tcRuleTree1
                   0#
                   GHC.Types.krep$*) -}
059a0ceb3c4cc0535c88a19b2e9c2b67
  $tcRuleTree1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcRuleTree2) -}
ce688913f4dd114baaeef29d5ae4abc9
  $tcRuleTree2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RuleTree"#) -}
7a41683a4e1fe676908a53fbb1131f24
  $tcRuleUrgParams :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4519758912703445060##
                   9797989563133197638##
                   LexerTypes.$trModule
                   LexerTypes.$tcRuleUrgParams1
                   0#
                   GHC.Types.krep$*) -}
31cf318c86f443977d3d3362f1c8d2b4
  $tcRuleUrgParams1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcRuleUrgParams2) -}
62f17282933c070eb6e1949b4164c9fe
  $tcRuleUrgParams2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RuleUrgParams"#) -}
19c70514828b4fed61e6fd7ce8854f96
  $tcSpecificTree :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10644902138402322847##
                   16175414541561088340##
                   LexerTypes.$trModule
                   LexerTypes.$tcSpecificTree1
                   0#
                   GHC.Types.krep$*) -}
8bf8ef27990a31fc6a94127210e573bc
  $tcSpecificTree1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcSpecificTree2) -}
a2f211cbb9285542fc964b1981c6e790
  $tcSpecificTree2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SpecificTree"#) -}
4ce6eef305d5b5ae98edd51caff2c2c7
  $tcStatement :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   22686869569382897##
                   8426480508811963955##
                   LexerTypes.$trModule
                   LexerTypes.$tcStatement1
                   0#
                   GHC.Types.krep$*) -}
20cd274655236191fdb2eb4a1011e2ff
  $tcStatement1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcStatement2) -}
530e83c611421bfa4f36e3ac37421315
  $tcStatement2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Statement"#) -}
a090db4a652bfcf94b070f9ea9174abd
  $tcStatementAttribute :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6087451212741894089##
                   13578020491376729360##
                   LexerTypes.$trModule
                   LexerTypes.$tcStatementAttribute1
                   0#
                   GHC.Types.krep$*) -}
298936a9ad43be564b08338e85d384ea
  $tcStatementAttribute1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcStatementAttribute2) -}
fa236c77f10aca94f1f0d0b3ec811d94
  $tcStatementAttribute2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StatementAttribute"#) -}
50ad98699d1fc022afe97fa1efc3626b
  $tcTSPpackage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4549306141647402558##
                   5995355921120757500##
                   LexerTypes.$trModule
                   LexerTypes.$tcTSPpackage1
                   0#
                   GHC.Types.krep$*) -}
070a7914f74ec63549f3d9c3dcc7b053
  $tcTSPpackage1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcTSPpackage2) -}
d472f2e9b06f1fa5baa3541bff2befa2
  $tcTSPpackage2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TSPpackage"#) -}
632bd9afe78b73cba1ca77059d11b2a4
  $tcTemporal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7844382074740514234##
                   14281978503776077563##
                   LexerTypes.$trModule
                   LexerTypes.$tcTemporal1
                   0#
                   GHC.Types.krep$*) -}
93e6e6d9305c1762a990f1615cb22d9b
  $tcTemporal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcTemporal2) -}
1081b7c60b744108a390ad7301be0286
  $tcTemporal2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Temporal"#) -}
cf6c3ab0dd6483539c7e8d4312816dc3
  $tcTotalTree :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14599994802225651720##
                   1051987842448347254##
                   LexerTypes.$trModule
                   LexerTypes.$tcTotalTree1
                   0#
                   GHC.Types.krep$*) -}
16aba8adb75d1526df0feb79c00b7932
  $tcTotalTree1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcTotalTree2) -}
b4ab5d8d614289a2f20b1a7a53850fc7
  $tcTotalTree2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TotalTree"#) -}
ea57d5f85976c9f6ce351735e78e6df1
  $tcTransitionTable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15229153796140146396##
                   15593276380283937134##
                   LexerTypes.$trModule
                   LexerTypes.$tcTransitionTable1
                   0#
                   GHC.Types.krep$*) -}
2f5c70c3753735bbbde8c0820d57a551
  $tcTransitionTable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcTransitionTable2) -}
a46276b2a4a39dc2639f41558e6a5184
  $tcTransitionTable2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TransitionTable"#) -}
dc441f5ac5912fb3a603db30304ea17a
  $tcTransitionTableMethods :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10735652272888503077##
                   13875474028208813620##
                   LexerTypes.$trModule
                   LexerTypes.$tcTransitionTableMethods1
                   0#
                   GHC.Types.krep$*) -}
05dc4c6062ce7788a3935352fad9e733
  $tcTransitionTableMethods1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   LexerTypes.$tcTransitionTableMethods2) -}
14b4e0103c9a9b62cee7e237579342a2
  $tcTransitionTableMethods2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TransitionTableMethods"#) -}
a9b0e2204689f557ef699b50c14f54d2
  $tcTreeHeap :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11243124865113682814##
                   16534888667096287998##
                   LexerTypes.$trModule
                   LexerTypes.$tcTreeHeap1
                   0#
                   GHC.Types.krep$*) -}
d8be2c821295bce2ad8cd35733ad13c5
  $tcTreeHeap1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcTreeHeap2) -}
6b3d5bbb7e5c8076d76148b526230f53
  $tcTreeHeap2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TreeHeap"#) -}
6cc53bd4642d10c29f258bedadb0afa7
  $tcUStatement :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1311271954699041387##
                   1201484844694068497##
                   LexerTypes.$trModule
                   LexerTypes.$tcUStatement1
                   0#
                   GHC.Types.krep$*) -}
a7ff9495eadae55d8281bdbcdc3effc5
  $tcUStatement1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcUStatement2) -}
e8742024f438ec9f000fbf3e612ea8c4
  $tcUStatement2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UStatement"#) -}
14164a69608a779ace0073c15409e175
  $tcUType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13176893854030269181##
                   10956257266927826585##
                   LexerTypes.$trModule
                   LexerTypes.$tcUType1
                   0#
                   GHC.Types.krep$*) -}
fa83548e282f4b0a17d5bd9b93828bf3
  $tcUType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcUType2) -}
8d09650e2bca16ca770704f19c7fcb14
  $tcUType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("UType"#) -}
ead1370c41f90b893397c8f9b137f5d4
  $tcVectorInit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8024703090920399722##
                   3262707965350039344##
                   LexerTypes.$trModule
                   LexerTypes.$tcVectorInit1
                   0#
                   GHC.Types.krep$*) -}
8f41c1dab0a992db84dd7e48272e70d2
  $tcVectorInit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$tcVectorInit2) -}
f99401bdb1606a6ae1b21abed3e12795
  $tcVectorInit2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("VectorInit"#) -}
85330dcb69a1c2a1f7e25ff1f663c4ee
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   LexerTypes.$trModule3
                   LexerTypes.$trModule1) -}
52fbb2298d20fe754b69c35f4dc5dfab
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$trModule2) -}
6e96489ed2f0104da6f52fb3ae569c88
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LexerTypes"#) -}
6d022de3f3ac6b55f9ee488124513db1
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LexerTypes.$trModule4) -}
e2dd69b52eb3e450fa7e34dd106fead8
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("BAPIP-0.1.0.0-IeoLXJJUcqyHz2cFv4cIMD"#) -}
51d033e76f23c8549d00c8fdf5b765ca
  $w$c== ::
    LexerTypes.FileName
    -> LexerTypes.MinIndex
    -> LexerTypes.MaxIndex
    -> LexerTypes.FileName
    -> LexerTypes.MinIndex
    -> LexerTypes.MaxIndex
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: LexerTypes.FileName)
                   (ww1 :: LexerTypes.MinIndex)
                   (ww2 :: LexerTypes.MaxIndex)
                   (ww3 :: LexerTypes.FileName)
                   (ww4 :: LexerTypes.MinIndex)
                   (ww5 :: LexerTypes.MaxIndex) ->
                 case GHC.Base.eqString ww ww3 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case LexerTypes.$fEqExpression_$c== ww1 ww4 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True -> LexerTypes.$fEqExpression_$c== ww2 ww5 } }) -}
269d6e12c984e7a4de1bdae43d808778
  $w$c==1 ::
    GHC.Base.String
    -> [LexerTypes.RuleSchedule]
    -> [LexerTypes.RuleHeap]
    -> GHC.Base.String
    -> [LexerTypes.RuleSchedule]
    -> [LexerTypes.RuleHeap]
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
7339434c15ed111cd6774f2e41037b6f
  $w$c==2 ::
    GHC.Base.String
    -> [LexerTypes.ActionPath]
    -> GHC.Base.String
    -> [LexerTypes.ActionPath]
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: [LexerTypes.ActionPath])
                   (ww2 :: GHC.Base.String)
                   (ww3 :: [LexerTypes.ActionPath]) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> GHC.Classes.$fEq[]_$c==
                        @ LexerTypes.ActionPath
                        LexerTypes.$fEqActionPath
                        ww1
                        ww3 }) -}
48110a9cdd317f7d31f7d5382813e9a4
  $w$c==3 ::
    GHC.Base.String
    -> LexerTypes.TotalTree
    -> [LexerTypes.TreeHeap]
    -> GHC.Base.String
    -> LexerTypes.TotalTree
    -> [LexerTypes.TreeHeap]
    -> GHC.Types.Bool
  {- Arity: 6,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
61824441ac747baafdd09db93da19699
  $w$cshow :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String) ->
                 GHC.CString.unpackAppendCString#
                   LexerTypes.$fShowActionAttribute2
                   (GHC.Types.:
                      @ GHC.Types.Char
                      GHC.Show.$fShow(,)3
                      (GHC.Show.showLitString ww LexerTypes.$fShowActionAttribute3))) -}
5b88dea28b82e5e86c22f9fff64c928a
  $w$cshow1 :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String) ->
                 GHC.CString.unpackAppendCString#
                   LexerTypes.$fShowMethodBodyAttribute2
                   (GHC.Types.:
                      @ GHC.Types.Char
                      GHC.Show.$fShow(,)3
                      (GHC.Show.showLitString ww LexerTypes.$fShowActionAttribute3))) -}
a68a21c216073510003d2b1f7eed1feb
  $w$cshow2 :: GHC.Types.Int -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Int) ->
                 GHC.CString.unpackAppendCString#
                   LexerTypes.$fShowTemporal2
                   (case ww of ww2 { GHC.Types.I# ww3 ->
                    case GHC.Show.$wshowSignedInt
                           11#
                           ww3
                           (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                    GHC.Types.: @ GHC.Types.Char ww5 ww6 } })) -}
0edd160fc4eefea69f79e4b2ce1ed7d9
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Base.String -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowActionAttribute2
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString
                              ww1
                              (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 w)))
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           LexerTypes.$fShowActionAttribute2
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.$fShow(,)3
                              (GHC.Show.showLitString
                                 ww1
                                 (GHC.Types.:
                                    @ GHC.Types.Char
                                    GHC.Show.$fShow(,)3
                                    (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w))))) }) -}
150b9413fc0ca585963b402f9a2b8cb8
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> LexerTypes.BSVMacro -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0] -}
d198acf8278de6989a97a01d30a48325
  $w$cshowsPrec10 ::
    GHC.Prim.Int#
    -> [LexerTypes.BSVstateDec]
    -> [LexerTypes.ActionDec]
    -> [LexerTypes.RuleDec]
    -> [LexerTypes.MethodBody]
    -> [LexerTypes.MidModInterfaceDec]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 7,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
30331af6e9395f936e723ebd4d920b21
  $w$cshowsPrec11 ::
    GHC.Prim.Int#
    -> LexerTypes.FileName
    -> LexerTypes.MinIndex
    -> LexerTypes.MaxIndex
    -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <S,U><L,U><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: LexerTypes.FileName)
                   (ww2 :: LexerTypes.MinIndex)
                   (ww3 :: LexerTypes.MaxIndex) ->
                 let {
                   f42 :: GHC.Base.String -> GHC.Base.String
                   = LexerTypes.$fShowExpression_$cshowsPrec
                       LexerTypes.$fShowFifoType35
                       ww2
                 } in
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                   = LexerTypes.$fShowExpression_$cshowsPrec
                       LexerTypes.$fShowFifoType35
                       ww3
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String) ->
                     GHC.CString.unpackAppendCString#
                       LexerTypes.$fShowRegFileLoader2
                       (GHC.Types.:
                          @ GHC.Types.Char
                          GHC.Show.$fShow(,)3
                          (GHC.Show.showLitString
                             ww1
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.$fShow(,)3
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.showSpace1
                                   (f42
                                      (GHC.Types.: @ GHC.Types.Char GHC.Show.showSpace1 (g x)))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) }) -}
14ae47ba509558dee7c6d69109fc0ee6
  $w$cshowsPrec12 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> [LexerTypes.ActionPath]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: [LexerTypes.ActionPath])
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       LexerTypes.$fShowRuleNode6
                       (GHC.Types.:
                          @ GHC.Types.Char
                          GHC.Show.$fShow(,)3
                          (GHC.Show.showLitString
                             ww1
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.$fShow(,)3
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   GHC.Show.showCommaSpace1
                                   (GHC.CString.unpackAppendCString#
                                      LexerTypes.$fShowRuleNode5
                                      (let {
                                         s :: GHC.Base.String
                                         = GHC.CString.unpackAppendCString#
                                             LexerTypes.$fShowRuleNode4
                                             x
                                       } in
                                       case ww2 of wild {
                                         []
                                         -> GHC.CString.unpackAppendCString# GHC.Show.showList__4 s
                                         : x1 xs
                                         -> GHC.Types.:
                                              @ GHC.Types.Char
                                              GHC.Show.showList__3
                                              (GHC.Base.++
                                                 @ GHC.Types.Char
                                                 (LexerTypes.$fShowActionPath_$cshow x1)
                                                 (let {
                                                    lvl278 :: [GHC.Types.Char]
                                                    = GHC.Types.:
                                                        @ GHC.Types.Char
                                                        GHC.Show.showList__2
                                                        s
                                                  } in
                                                  letrec {
                                                    showl2 :: [LexerTypes.ActionPath]
                                                              -> GHC.Base.String
                                                      {- Arity: 1, Strictness: <S,1*U> -}
                                                    = \ (ds2 :: [LexerTypes.ActionPath]) ->
                                                      case ds2 of wild1 {
                                                        [] -> lvl278
                                                        : y ys
                                                        -> GHC.Types.:
                                                             @ GHC.Types.Char
                                                             GHC.Show.showList__1
                                                             (GHC.Base.++
                                                                @ GHC.Types.Char
                                                                (LexerTypes.$fShowActionPath_$cshow
                                                                   y)
                                                                (showl2 ys)) }
                                                  } in
                                                  showl2 xs)) }))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++ @ GHC.Types.Char LexerTypes.$fShowRuleNode2 (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.Base.++
                           @ GHC.Types.Char
                           LexerTypes.$fShowRuleNode2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w))) }) -}
63254dcea2a405f7ebd6a514f14e4ef2
  $w$cshowsPrec13 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> LexerTypes.Guard
    -> [LexerTypes.ID_Path]
    -> [LexerTypes.ActionPath]
    -> [LexerTypes.ActionPath]
    -> [LexerTypes.ActionPath]
    -> [LexerTypes.ActionPath]
    -> GHC.Show.ShowS
  {- Arity: 8,
     Strictness: <S,U><L,U><L,1*U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
92bcd961b099892ac4839d3b0822b15c
  $w$cshowsPrec14 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> [LexerTypes.PVSTypeDef]
    -> [LexerTypes.PVSInstDef]
    -> [LexerTypes.TVarDec]
    -> [LexerTypes.TSPTable]
    -> [LexerTypes.PVSFunction]
    -> [LexerTypes.PVSMacro]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 9,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
b2868e76abb1e56636c6be95122b556c
  $w$cshowsPrec15 ::
    GHC.Prim.Int#
    -> GHC.Types.Int -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><L,1*U(U)><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Int)
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowTemporal2
                        (case ww1 of ww2 { GHC.Types.I# ww3 ->
                         case GHC.Show.$wshowSignedInt 11# ww3 w of ww4 { (#,#) ww5 ww6 ->
                         GHC.Types.: @ GHC.Types.Char ww5 ww6 } })
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           LexerTypes.$fShowTemporal2
                           (case ww1 of ww2 { GHC.Types.I# ww3 ->
                            case GHC.Show.$wshowSignedInt
                                   11#
                                   ww3
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.$fShow(,)2
                                      w) of ww4 { (#,#) ww5 ww6 ->
                            GHC.Types.: @ GHC.Types.Char ww5 ww6 } })) }) -}
321d4bb033873a046e1650695f529c57
  $w$cshowsPrec16 ::
    GHC.Prim.Int# -> LexerTypes.TransitionTable -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
78accfd63d694074452b68adb44e153f
  $w$cshowsPrec17 ::
    GHC.Prim.Int#
    -> LexerTypes.Name
    -> [LexerTypes.TransitionTable]
    -> [LexerTypes.MethodApplication]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
48110a9cdd317f7d31f7d5382813e9a4
  $w$cshowsPrec18 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> LexerTypes.TotalTree
    -> [LexerTypes.TreeHeap]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
4d08ca0e73729c67fbd812bf662e0e37
  $w$cshowsPrec19 ::
    GHC.Prim.Int# -> LexerTypes.UStatement -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: LexerTypes.UStatement) ->
                 case w of wild {
                   LexerTypes.DeclAssign b1 b2 b3
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = LexerTypes.$fShowExpression_$cshowsPrec
                            LexerTypes.$fShowFifoType35
                            b3
                      } in
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.CString.unpackAppendCString#
                            LexerTypes.$fShowUStatement7
                            (let {
                               eta :: GHC.Base.String
                               = GHC.Show.showLitString
                                   b2
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.$fShow(,)3
                                      (GHC.Types.: @ GHC.Types.Char GHC.Show.showSpace1 (g x)))
                             } in
                             case b1 of wild1 {
                               LexerTypes.U_Int
                               -> GHC.Base.++
                                    @ GHC.Types.Char
                                    LexerTypes.$fShowUStatement5
                                    (GHC.Types.:
                                       @ GHC.Types.Char
                                       GHC.Show.showSpace1
                                       (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 eta))
                               LexerTypes.U_String
                               -> GHC.Base.++
                                    @ GHC.Types.Char
                                    LexerTypes.$fShowUStatement3
                                    (GHC.Types.:
                                       @ GHC.Types.Char
                                       GHC.Show.showSpace1
                                       (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 eta)) })
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False -> p
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) }
                   LexerTypes.UAssign b1 b2
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = LexerTypes.$fShowExpression_$cshowsPrec
                            LexerTypes.$fShowFifoType35
                            b2
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.CString.unpackAppendCString#
                             LexerTypes.$fShowUStatement2
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.$fShow(,)3
                                (GHC.Show.showLitString
                                   b1
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.$fShow(,)3
                                      (GHC.Types.: @ GHC.Types.Char GHC.Show.showSpace1 (g x)))))
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.CString.unpackAppendCString#
                                LexerTypes.$fShowUStatement2
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.$fShow(,)3
                                   (GHC.Show.showLitString
                                      b1
                                      (GHC.Types.:
                                         @ GHC.Types.Char
                                         GHC.Show.$fShow(,)3
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.showSpace1
                                            (g (GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.$fShow(,)2
                                                  x))))))) } }) -}
8e4fa46f3b3e0dfb841487fd74787a36
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> LexerTypes.BSVTypeDef -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0] -}
c2b979719dd3c7dfe36e1834bf38f676
  $w$cshowsPrec20 ::
    GHC.Prim.Int# -> LexerTypes.VectorInit -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) (w :: LexerTypes.VectorInit) ->
                 case w of wild {
                   LexerTypes.Replicate b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = LexerTypes.$fShowExpression_$cshowsPrec
                            LexerTypes.$fShowFifoType35
                            b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char LexerTypes.$fShowVectorInit3 (g x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (GHC.Base.++
                                @ GHC.Types.Char
                                LexerTypes.$fShowVectorInit3
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x))) }
                   LexerTypes.Explicit b1
                   -> let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Base.String) ->
                          GHC.CString.unpackAppendCString#
                            LexerTypes.$fShowVectorInit2
                            (case b1 of wild1 {
                               [] -> GHC.CString.unpackAppendCString# GHC.Show.showList__4 x
                               : x1 xs
                               -> GHC.Types.:
                                    @ GHC.Types.Char
                                    GHC.Show.showList__3
                                    (LexerTypes.$fShowExpression_$cshowsPrec
                                       LexerTypes.$fShowArgumentAttribute2
                                       x1
                                       (let {
                                          lvl278 :: [GHC.Types.Char]
                                          = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__2 x
                                        } in
                                        letrec {
                                          showl2 :: [LexerTypes.Expression] -> GHC.Base.String
                                            {- Arity: 1, Strictness: <S,1*U> -}
                                          = \ (ds2 :: [LexerTypes.Expression]) ->
                                            case ds2 of wild2 {
                                              [] -> lvl278
                                              : y ys
                                              -> GHC.Types.:
                                                   @ GHC.Types.Char
                                                   GHC.Show.showList__1
                                                   (LexerTypes.$fShowExpression_$cshowsPrec
                                                      LexerTypes.$fShowArgumentAttribute2
                                                      y
                                                      (showl2 ys)) }
                                        } in
                                        showl2 xs)) })
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False -> p
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)4
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x)) } }) -}
8c52b7703dbf130a1d71c377ab4031f7
  $w$cshowsPrec3 ::
    GHC.Prim.Int# -> LexerTypes.BSVstateDec -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
3ae8634cce2ce6c491831d891f6327fe
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> LexerTypes.InvokationTree -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0] -}
4c96484c15fe3bb20e10b751477c2a46
  $w$cshowsPrec5 ::
    GHC.Prim.Int#
    -> GHC.Base.String -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        LexerTypes.$fShowMethodBodyAttribute2
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.$fShow(,)3
                           (GHC.Show.showLitString
                              ww1
                              (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)3 w)))
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           LexerTypes.$fShowMethodBodyAttribute2
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.$fShow(,)3
                              (GHC.Show.showLitString
                                 ww1
                                 (GHC.Types.:
                                    @ GHC.Types.Char
                                    GHC.Show.$fShow(,)3
                                    (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w))))) }) -}
2882a2cad63f6474f30d3fc20714ae61
  $w$cshowsPrec6 ::
    LexerTypes.Mode -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: LexerTypes.Mode) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   LexerTypes.B2P
                   -> GHC.Base.++ @ GHC.Types.Char LexerTypes.$fShowMode11 w1
                   LexerTypes.P2B
                   -> GHC.Base.++ @ GHC.Types.Char LexerTypes.$fShowMode9 w1
                   LexerTypes.B2B
                   -> GHC.Base.++ @ GHC.Types.Char LexerTypes.$fShowMode7 w1
                   LexerTypes.P2P
                   -> GHC.Base.++ @ GHC.Types.Char LexerTypes.$fShowMode5 w1
                   LexerTypes.T2B
                   -> GHC.Base.++ @ GHC.Types.Char LexerTypes.$fShowMode3 w1
                   LexerTypes.T2P
                   -> GHC.Base.++ @ GHC.Types.Char LexerTypes.$fShowMode1 w1 }) -}
f9fafed383789070da7a981ab0ceb410
  $w$cshowsPrec7 ::
    GHC.Prim.Int#
    -> LexerTypes.PackageName
    -> [LexerTypes.PVSConstantDec]
    -> [LexerTypes.PVSTypeDef]
    -> [LexerTypes.PVStransition]
    -> [LexerTypes.PVSstateDec]
    -> [LexerTypes.PVSInstDef]
    -> [LexerTypes.PVSFunction]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 9,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
263d5987ddec79fadf35563de5be9f0c
  $w$cshowsPrec8 ::
    GHC.Prim.Int#
    -> LexerTypes.PVSTypeDef -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><S,1*U><L,U>, Inline: [0] -}
27e7de08b1523caab97202618cf8bce6
  $w$cshowsPrec9 ::
    GHC.Prim.Int# -> LexerTypes.PVSstate -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
59ec519bdc5333681c4a02fe059182b6
  $wmEq ::
    LexerTypes.ReturnType
    -> [LexerTypes.Argument]
    -> LexerTypes.ReturnType
    -> [LexerTypes.Argument]
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: LexerTypes.ReturnType)
                   (ww1 :: [LexerTypes.Argument])
                   (ww2 :: LexerTypes.ReturnType)
                   (ww3 :: [LexerTypes.Argument]) ->
                 case ww of wild {
                   LexerTypes.Action
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Action -> LexerTypes.aEq ww1 ww3 }
                   LexerTypes.ActionValue a1
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.ActionValue b1
                        -> case LexerTypes.$fEqBSVType_$c== a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> LexerTypes.aEq ww1 ww3 } }
                   LexerTypes.Value a1
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        LexerTypes.Value b1
                        -> case LexerTypes.$fEqBSVType_$c== a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> LexerTypes.aEq ww1 ww3 } } }) -}
269d6e12c984e7a4de1bdae43d808778
  $wshowRuleHeap ::
    GHC.Base.String
    -> GHC.Base.String
    -> [LexerTypes.RuleSchedule]
    -> [LexerTypes.RuleHeap]
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U><L,1*U>, Inline: [0] -}
826bf9b3273fb2f15950fa50da194ba0
  data ActionAttribute = Act_Doc GHC.Base.String
36a81895e6f17b2fffb92c53815c425d
  type ActionDec =
    (LexerTypes.ActionName, [LexerTypes.Statement],
     [LexerTypes.ActionAttribute])
6324d633f0fc92fcdd31a5eec2e111b7
  type ActionName = GHC.Base.String
75d03845d9b5153ed1f38098fefa25af
  data ActionPath
    = ActionNameAP GHC.Base.String
    | RuleNameAP GHC.Base.String
    | MethodNameAP GHC.Base.String
    | SubmoduleNameAP GHC.Base.String LexerTypes.ActionPath
b01eed2b9d6e1736f1f823e6d4791c12
  type AddressWidth = LexerTypes.BSVType
93c68e38876debf7336af4b4cf3614b5
  type Argument =
    (LexerTypes.Name, LexerTypes.BSVType,
     [LexerTypes.ArgumentAttribute])
9843a91dd1e7fc3f97d724b817ded62a
  data ArgumentAttribute
    = Arg_Ready GHC.Base.String
    | Arg_Enable GHC.Base.String
    | Arg_Result GHC.Base.String
    | Arg_Prefix GHC.Base.String
    | Arg_Port GHC.Base.String
    | Arg_Always_Ready
    | Arg_Always_Enabled
    | Arg_Doc GHC.Base.String
b88fa7e6b37f6f00493a89357f127044
  type BSVConstantDec =
    (LexerTypes.Name, LexerTypes.BSVType, LexerTypes.Literal)
543f7b92bb23936b640d985e609f9f1f
  type BSVFunction =
    (GHC.Base.String, [LexerTypes.Argument], LexerTypes.BSVType,
     [LexerTypes.Statement])
d4c3f0df3b23e82596dcee695e4732f4
  type BSVInstDef =
    (LexerTypes.Name, [(LexerTypes.Name, LexerTypes.Literal)])
150b9413fc0ca585963b402f9a2b8cb8
  data BSVMacro
    = SimpleMacro GHC.Base.String GHC.Base.String
    | CompoundMacro GHC.Base.String [GHC.Base.String] GHC.Base.String
6a9e148802acadaa54114400a09553a4
  data BSVModuleDec
    = BSVModuleDec {mName :: GHC.Base.String,
                    instanceName :: GHC.Base.String,
                    instances :: [LexerTypes.BSVModuleDec],
                    interfaceName :: GHC.Base.String,
                    interfaceDecs :: [LexerTypes.MidModInterfaceDec],
                    attributes :: [LexerTypes.ModuleAttribute],
                    state :: [LexerTypes.BSVstateDec],
                    actions :: [LexerTypes.ActionDec],
                    rules :: [LexerTypes.RuleDec],
                    methods :: [LexerTypes.MethodBody]}
dca7bfb1a37746d89b662b651361e667
  data BSVPackage
    = BSVPackage {bsv_packageName :: LexerTypes.PackageName,
                  imports :: [LexerTypes.PackageName],
                  including :: [GHC.Base.String],
                  interfaces :: [LexerTypes.InterfaceDec],
                  bsv_constants :: [LexerTypes.BSVConstantDec],
                  bsv_typedefs :: [LexerTypes.BSVTypeDef],
                  bsv_instDefs :: [LexerTypes.BSVInstDef],
                  bsv_modules :: [LexerTypes.BSVModuleDec],
                  bsv_functions :: [LexerTypes.BSVFunction],
                  bsv_macros :: [LexerTypes.BSVMacro],
                  hexFiles :: [LexerTypes.HexFile]}
4a6fa266ef9464fb93f2d34d394bedde
  data BSVType
    = BSV_Bool
    | BSV_Bit LexerTypes.N
    | BSV_Int LexerTypes.N
    | BSV_UInt LexerTypes.N
    | BSV_Real
    | BSV_Custom LexerTypes.Name
    | BSV_Maybe LexerTypes.BSVType
8e4fa46f3b3e0dfb841487fd74787a36
  data BSVTypeDef
    = BSV_Synonym LexerTypes.Name LexerTypes.BSVType
    | BSV_Enumeration LexerTypes.Name [LexerTypes.Enumerat]
    | BSV_Struct LexerTypes.Name [LexerTypes.BSV_Field]
63031b90c7604d4fb2a78460ad181c92
  type BSV_Field = (LexerTypes.Name, LexerTypes.BSVType)
8c52b7703dbf130a1d71c377ab4031f7
  data BSVstateDec
    = BSV_Reg LexerTypes.ID_Path LexerTypes.BSVType LexerTypes.Init
    | BSV_Fifo LexerTypes.FifoType
               LexerTypes.ID_Path
               LexerTypes.BSVType
    | BSV_Vector LexerTypes.ID_Path
                 LexerTypes.BSVType
                 LexerTypes.N
                 LexerTypes.VectorInit
    | BSV_RegFile LexerTypes.ID_Path
                  LexerTypes.AddressWidth
                  LexerTypes.BSVType
                  LexerTypes.RegFileLoader
    | BSV_SubModuleDec LexerTypes.InterfaceName
                       LexerTypes.Name
                       LexerTypes.InstName
    | DWire LexerTypes.ID_Path LexerTypes.BSVType LexerTypes.Init
cadc4dd88ae52d1939dfeb3e511aff3a
  type Case = (LexerTypes.Literal, LexerTypes.Statement)
59f28eeebd430900d551e3385cccc23a
  type ClearTree = LexerTypes.SpecificTree
6c786502deb98f09a62d2de966e659f3
  type Context = GHC.Base.Maybe (GHC.Base.String, GHC.Base.String)
f74abb4a6bb0da4b0ec4dc2ee72d6a63
  type DefaultValue = LexerTypes.Expression
6c594a727a9eb34558c053a23bd924df
  type DeqTree = LexerTypes.SpecificTree
cadc4dd88ae52d1939dfeb3e511aff3a
  type Else = LexerTypes.Statement
5d91be75f800f157369a8d4470ed188f
  type EnqTree = LexerTypes.SpecificTree
3e9a8730820e47e26528ccb3fad703bc
  type Enumerat = GHC.Base.String
6b58178d3226f5dcfa379df74cd7f6b5
  type ExpCase = (LexerTypes.Literal, LexerTypes.Expression)
6b58178d3226f5dcfa379df74cd7f6b5
  data Expression
    = Negative LexerTypes.Op
    | Not LexerTypes.Op
    | Equals LexerTypes.Op1 LexerTypes.Op2
    | NotEquals LexerTypes.Op1 LexerTypes.Op2
    | GreaterEquals LexerTypes.Op1 LexerTypes.Op2
    | LessEquals LexerTypes.Op1 LexerTypes.Op2
    | Greater LexerTypes.Op1 LexerTypes.Op2
    | Less LexerTypes.Op1 LexerTypes.Op2
    | And LexerTypes.Op1 LexerTypes.Op2
    | Or LexerTypes.Op1 LexerTypes.Op2
    | BitwiseAND LexerTypes.Op1 LexerTypes.Op2
    | BitwiseOR LexerTypes.Op1 LexerTypes.Op2
    | BitwiseXOR LexerTypes.Op1 LexerTypes.Op2
    | LShift LexerTypes.Op1 LexerTypes.Op2
    | RShift LexerTypes.Op1 LexerTypes.Op2
    | BitSelect LexerTypes.Op1 LexerTypes.Op2
    | BitSelectRange LexerTypes.Op LexerTypes.Op1 LexerTypes.Op2
    | BitConcat [LexerTypes.Op]
    | Multiply LexerTypes.Op1 LexerTypes.Op2
    | Divide LexerTypes.Op1 LexerTypes.Op2
    | Modulo LexerTypes.Op1 LexerTypes.Op2
    | Add LexerTypes.Op1 LexerTypes.Op2
    | Subtract LexerTypes.Op1 LexerTypes.Op2
    | Literal LexerTypes.Lit
    | Identifier LexerTypes.ID_Path
    | Exp_MethodCall LexerTypes.ID_Path
                     LexerTypes.MethodName
                     [LexerTypes.Expression]
                     (GHC.Base.Maybe LexerTypes.Writes)
    | Exp_FunctionCall GHC.Base.String [LexerTypes.Expression]
    | ValueMethodCall LexerTypes.SuperModuleName
                      LexerTypes.ModuleName
                      LexerTypes.InstanceName
                      LexerTypes.MethodName
    | Exp_If LexerTypes.Guard LexerTypes.Op1 LexerTypes.Op2
    | Skip
    | RPFlag LexerTypes.Op
    | MaybeIf LexerTypes.Matching
              LexerTypes.ID_Path
              LexerTypes.Op1
              LexerTypes.Op2
    | Tagged (GHC.Base.Maybe LexerTypes.PVSType) LexerTypes.MaybeTag
    | FromMaybe LexerTypes.ID_Path LexerTypes.Op
    | MaybeValue LexerTypes.Op
    | Binding [LexerTypes.LocalVar] LexerTypes.Expression
    | CasesOf LexerTypes.Expression [LexerTypes.ExpCase]
    | StructCluster (Data.Either.Either
                       LexerTypes.BSVType LexerTypes.PVSType)
                    [(GHC.Base.String, LexerTypes.Expression)]
    | PMatch LexerTypes.MaybeIDTag
    | IsValid LexerTypes.MaybeTag
    | FieldAccess LexerTypes.Op LexerTypes.ID_Path
c81e851ccdded230ecdaf528a06faa58
  type FalseExpression = LexerTypes.Expression
f37fc1f7f628e396311833bcccc3658f
  type FalseTree = LexerTypes.TotalTree
f043b347c15ee42d7e77e236eb01c885
  type FieldName = GHC.Base.String
62d32f60bf0117d657237a0b1409daa5
  data FifoType
    = FIFO
    | FIFOF
    | SizedFIFO LexerTypes.Literal
    | SizedFIFOF LexerTypes.Literal
    | DepthParamFIFO
    | FIFO1
    | FIFOF1
    | LFIFO
    | LFIFOF
    | PipelineFIFO
    | PipelineFIFOF
    | BypassFIFO
    | BypassFIFOF
    | SizedBypassFIFOF LexerTypes.Literal
c24aa2ddc97c4de99fb79219c2e2ad5c
  type File = (LexerTypes.FileName, LexerTypes.FileContents)
c0870fe9ce2675852b54098269404124
  type FileContents = GHC.Base.String
853100f3ee4e6504f26b58a3a00893a7
  type FileName = GHC.Base.String
6b58178d3226f5dcfa379df74cd7f6b5
  type Guard = LexerTypes.Expression
d5583e90e36cd3f094dbc709feddd25d
  type HexFile = (GHC.Base.String, [LexerTypes.Literal])
6b58178d3226f5dcfa379df74cd7f6b5
  data ID_Path
    = ID_Submod_Struct LexerTypes.ModuleInst LexerTypes.ID_Path
    | ID GHC.Base.String
    | ID_Vect GHC.Base.String LexerTypes.Index
8d69d9d79884825fbfdd10380e7f11aa
  type Increments = LexerTypes.UStatement
6b58178d3226f5dcfa379df74cd7f6b5
  type Index = LexerTypes.Expression
244726e61c13efb046a833b3d97115b5
  type Init = LexerTypes.Expression
3ca3c4aa6c9e4fcb790962e5e056ee13
  type Inits = LexerTypes.UStatement
1e30e1614826c7b26e6f0e630e815fbd
  type InputPath = GHC.Base.String
231d49162faa4affe0856d09c779c389
  type InstName = GHC.Base.String
2f66699423eceee43b3a49bf2232af99
  type InstanceName = GHC.Base.String
a509f8cd27c185b7680a841781f3b25f
  data InterfaceAttribute
    = Int_Always_Ready | Int_Always_Enabled | Int_Doc GHC.Base.String
1499c0615b3c44798666b03c4c00ca8f
  type InterfaceDec =
    (LexerTypes.Name, [LexerTypes.MethodDec],
     [LexerTypes.InterfaceRef], [LexerTypes.InterfaceAttribute])
c308eb5e8c5a063edeaf395814239cb0
  type InterfaceName = GHC.Base.String
e3860765508607c28be1ec3e51cc1625
  type InterfaceRef = (LexerTypes.InterfaceName, GHC.Base.String)
3ae8634cce2ce6c491831d891f6327fe
  data InvokationTree
    = Istem LexerTypes.Name
            LexerTypes.ModuleName
            [LexerTypes.InvokationTree]
    | Ileaf LexerTypes.Name LexerTypes.ModuleName
e03304d97e0d6aca513132b576af286a
  data Lit
    = LitString GHC.Base.String
    | LitEnum GHC.Base.String
    | LitInt GHC.Integer.Type.Integer
    | LitBool GHC.Types.Bool
    | LitReal GHC.Types.Float
    | LitChar GHC.Types.Char
    | LitSizedInt LexerTypes.N GHC.Integer.Type.Integer
    | LitStructConstructor
    | LitVoid
6b58178d3226f5dcfa379df74cd7f6b5
  type Literal = LexerTypes.Expression
2de60c8c48ed8a6e7cc1a90a90be61f0
  type LocalName = LexerTypes.ID_Path
6b58178d3226f5dcfa379df74cd7f6b5
  type LocalVar =
    (LexerTypes.ID_Path,
     Data.Either.Either
       (GHC.Base.Maybe LexerTypes.BSVType)
       (GHC.Base.Maybe LexerTypes.PVSType),
     LexerTypes.Expression)
6b58178d3226f5dcfa379df74cd7f6b5
  type Matching = LexerTypes.ID_Path
7a668a90130b9402d0a0aec08946bf85
  type MaxIndex = LexerTypes.Literal
6b58178d3226f5dcfa379df74cd7f6b5
  data MaybeIDTag = ValidID LexerTypes.ID_Path | InvalidID
6b58178d3226f5dcfa379df74cd7f6b5
  data MaybeTag
    = Valid LexerTypes.Expression
    | Invalid
    | MaybeContainer LexerTypes.Expression
174535fe58edde8d3e767db637ce474f
  type MethodApplication = LexerTypes.MethodBody
3690921074a8037a0b7e5c576e714940
  type MethodArg = GHC.Base.String
b57efcbb684bd3a4b73bc89a60f4ae60
  type MethodBody =
    (LexerTypes.MethodName, LexerTypes.ReturnType, LexerTypes.UTArgs,
     LexerTypes.Guard, [LexerTypes.Statement],
     [LexerTypes.MethodBodyAttribute])
b4aecb172444b05b089bf49557976776
  data MethodBodyAttribute = Met_Doc GHC.Base.String
2994898ed055356a3a97d10353661264
  type MethodCallPass =
    (LexerTypes.SubmoduleName, LexerTypes.Guard, LexerTypes.UrgIndex,
     LexerTypes.MethodName, [LexerTypes.Expression])
d322641a77af09ae68c30d0c7b8ae44a
  type MethodDec =
    (LexerTypes.Name, LexerTypes.ReturnType, [LexerTypes.Argument],
     [LexerTypes.MethodDecAttribute])
43646e54358077c291b127f0bcee7b7b
  data MethodDecAttribute
    = MDc_Ready GHC.Base.String
    | MDc_Enable GHC.Base.String
    | MDc_Result GHC.Base.String
    | MDc_Prefix GHC.Base.String
    | MDc_Port GHC.Base.String
    | MDc_Always_Ready
    | MDc_Always_Enabled
    | MDc_Doc GHC.Base.String
afc969c65aec121c900a4f28adbec892
  type MethodName = GHC.Base.String
7ae7083e06da3778a95f7bf117e81599
  type MidModInterfaceDec =
    (GHC.Base.String, GHC.Base.String, [LexerTypes.MethodBody])
ecfa7a19bb1a4a168e99b14d7cad40fe
  type MinIndex = LexerTypes.Literal
2882a2cad63f6474f30d3fc20714ae61
  data Mode = B2P | P2B | B2B | P2P | T2B | T2P
38c8cfc922a8b6609d6630c27049fe7f
  data ModuleAttribute
    = Synthesize
    | Mod_Always_Ready [GHC.Base.String]
    | Mod_Always_Enabled [GHC.Base.String]
    | Descending_Urgency [GHC.Base.String]
    | Mod_Execution_Order [GHC.Base.String]
    | Mod_Mutually_Exclusive [GHC.Base.String]
    | Mod_Conflict_Free [GHC.Base.String]
    | Mod_Preempts [GHC.Base.String]
    | Clock_Prefix GHC.Base.String
    | Gate_Prefix GHC.Base.String
    | Reset_Prefix GHC.Base.String
    | Gate_Input_Clocks [GHC.Base.String]
    | Gate_All_Clocks
    | Default_Clock_OSC GHC.Base.String
    | Default_Clock_Gate GHC.Base.String
    | Default_Gate_Inhigh
    | Default_Gate_Unused
    | Default_Reset GHC.Base.String
    | No_Default_Reset
    | Clock_Family [GHC.Base.String]
    | Clock_Ancestors [GHC.Base.String]
    | Mod_Doc GHC.Base.String
    | MAvoid
aaa31e01014d8618bb96b77e207cb47e
  type ModuleInst = GHC.Base.String
d4469104d7c13194cae26cdbd9d0649d
  type ModuleName = GHC.Base.String
5087c9e6350db92e0db37c9ef0779aaa
  type N = GHC.Integer.Type.Integer
7c6cc0f4ece946a46df101a52b2e2642
  type Name = GHC.Base.String
6b58178d3226f5dcfa379df74cd7f6b5
  type Op = LexerTypes.Expression
6b58178d3226f5dcfa379df74cd7f6b5
  type Op1 = LexerTypes.Expression
6b58178d3226f5dcfa379df74cd7f6b5
  type Op2 = LexerTypes.Expression
651917eebe50ceb54e18a18ff9d2fb46
  type OutputDir = GHC.Base.String
7d8a7e836795cb9d22f15bbe05b0f092
  type PVSArgument = (GHC.Base.String, LexerTypes.PVSType)
2f2405ef76e2fdf81a05bdc6a4655ac9
  type PVSConstantDec =
    (LexerTypes.Name, LexerTypes.PVSType, LexerTypes.Literal)
bd8391fe6aa4b9aeeace864d9f179cb4
  type PVSFunction =
    (GHC.Base.String, [LexerTypes.PVSArgument], LexerTypes.PVSType,
     LexerTypes.Expression)
4cd52ce8483a87744e359b1843bfd9d3
  type PVSInstDef =
    (LexerTypes.Name, [(LexerTypes.Name, LexerTypes.Literal)])
352e0a39a83babb6fa7b7da1356b7d31
  type PVSMacro =
    (GHC.Base.String, LexerTypes.PVSType, LexerTypes.Literal)
2ebe3fda021fa922603a337269985adf
  data PVSPackage
    = PVSPackage {pvs_packageName :: LexerTypes.PackageName,
                  pvs_constants :: [LexerTypes.PVSConstantDec],
                  pvs_typedefs :: [LexerTypes.PVSTypeDef],
                  transitions :: [LexerTypes.PVStransition],
                  pvs_state :: [LexerTypes.PVSstateDec],
                  pvs_instantiations :: [LexerTypes.PVSInstDef],
                  pvs_functions :: [LexerTypes.PVSFunction]}
5293579e9cbbf6986dcf46fee97434cb
  data PVSType
    = PVS_Bool
    | PVS_Bit LexerTypes.N
    | PVS_Int LexerTypes.N
    | PVS_UInt LexerTypes.N
    | PVS_Real
    | PVS_Custom LexerTypes.Name
    | PVS_Maybe LexerTypes.PVSType
263d5987ddec79fadf35563de5be9f0c
  data PVSTypeDef
    = PVS_Synonym LexerTypes.Name LexerTypes.PVSType
    | PVS_Enumeration LexerTypes.Name [LexerTypes.Enumerat]
    | PVS_Struct LexerTypes.Name [LexerTypes.PVS_Field]
907934b371d6291fd472d601c345122a
  type PVS_Field = (LexerTypes.Name, LexerTypes.PVSType)
27e7de08b1523caab97202618cf8bce6
  data PVSstate
    = PVS_Reg LexerTypes.ID_Path LexerTypes.PVSType LexerTypes.Init
    | PVS_Fifo LexerTypes.FifoType
               LexerTypes.ID_Path
               LexerTypes.PVSType
    | PVS_Vector LexerTypes.ID_Path
                 LexerTypes.PVSType
                 LexerTypes.N
                 LexerTypes.VectorInit
    | PVS_SubModuleDec LexerTypes.InterfaceName
                       LexerTypes.Name
                       LexerTypes.InstName
    | PVS_DWire LexerTypes.ID_Path LexerTypes.PVSType LexerTypes.Init
10d0986ecfd076e695b49c5e94e87c77
  type PVSstateDec = (LexerTypes.Name, [LexerTypes.PVSstate])
cf59d69380103ee0fd409c3360de8f42
  type PVSstateInst = (GHC.Base.String, [LexerTypes.PVSstate])
b0bfdeb92ae768a82a84efb3f5644891
  type PVSstateRecord =
    (GHC.Base.String, [(GHC.Base.String, LexerTypes.PVSType)])
74cf04055f6193fb2cf856c4b138a104
  type PVStransition =
    (GHC.Integer.Type.Integer,
     [(LexerTypes.MethodName,
       [(LexerTypes.MethodArg, LexerTypes.PVSType)])],
     [LexerTypes.ValueMethod], [LexerTypes.TransitionTable])
6454d16386f2f0fea028840e593a69c1
  type PackageName = GHC.Base.String
09e448fec7212c992b9d3111dda73806
  type Path = [GHC.Base.String]
9d775b0245d04dbf7fab29450b78d2d7
  data PermMod
    = PermMod {stateM :: [LexerTypes.BSVstateDec],
               actionsM :: [LexerTypes.ActionDec],
               rulesM :: [LexerTypes.RuleDec],
               methodsM :: [LexerTypes.MethodBody],
               intersM :: [LexerTypes.MidModInterfaceDec]}
d42888490108637203288013dac41172
  type RankedNodes = [[[LexerTypes.RuleNode]]]
24b25751d883836f2c08d627f196fc9d
  data RegFileLoader
    = RegFileLoad LexerTypes.FileName
                  LexerTypes.MinIndex
                  LexerTypes.MaxIndex
e8e0dabb470ed6767d6eeba2a104c650
  type Replacement = (LexerTypes.Expression, LexerTypes.Expression)
edbdd3627cba53012a786daa322eb050
  data ReturnType
    = Action
    | ActionValue LexerTypes.BSVType
    | Value LexerTypes.BSVType
2bdb464ecda2ca4646f2cafd65165658
  data RuleAttribute
    = Fire_When_Enabled
    | No_Implicit_Conditions
    | Rul_Descending_Urgency [GHC.Base.String]
    | Rul_Execution_Order [GHC.Base.String]
    | Rul_Mutually_Exclusive [GHC.Base.String]
    | Rul_Conflict_Free [GHC.Base.String]
    | Rul_Preempts [GHC.Base.String]
    | Rul_Doc GHC.Base.String
bdce4999eb06aa1f9b7a13dd2d78793f
  type RuleDec =
    (LexerTypes.RuleName, LexerTypes.Guard, [LexerTypes.Statement],
     [LexerTypes.RuleAttribute])
7151d3a5e1457b57dddcbf11b968175f
  type RuleGraph = [LexerTypes.RuleNode]
269d6e12c984e7a4de1bdae43d808778
  data RuleHeap
    = RHeap GHC.Base.String
            [LexerTypes.RuleSchedule]
            [LexerTypes.RuleHeap]
672d28b0b8193a3d589175ebc3dc14a6
  type RuleName = GHC.Base.String
08b3b374ca9923e08b3d8f295257edb0
  data RuleNode
    = RuleNode {rnName :: GHC.Base.String,
                rnPreempts :: [LexerTypes.ActionPath]}
7b3adb9e814c886706bb5c400eeb330c
  data RuleSchedule
    = RuleSchedule {rName :: LexerTypes.ActionPath,
                    rGuard :: LexerTypes.Expression,
                    rStatements :: [LexerTypes.Statement],
                    implicitConditions :: [LexerTypes.Expression],
                    writesTo :: [LexerTypes.ID_Path],
                    dWireWrites :: [LexerTypes.ID_Path],
                    dWireReads :: [LexerTypes.ID_Path],
                    fifoEnqs :: [LexerTypes.ID_Path],
                    fifoDeqs :: [LexerTypes.ID_Path],
                    fifoClears :: [LexerTypes.ID_Path],
                    fifoFirsts :: [LexerTypes.ID_Path],
                    actionMethodsCalled :: [LexerTypes.Expression],
                    conflictsWith :: [LexerTypes.ActionPath],
                    noConflictsWith :: [LexerTypes.ActionPath],
                    preempts :: [LexerTypes.ActionPath],
                    isPreemptedBy :: [LexerTypes.ActionPath],
                    executesAfter :: [LexerTypes.ActionPath],
                    executesBefore :: [LexerTypes.ActionPath]}
0a707cbf9c25ca42c10c6035c89eda04
  data RuleTree
    = RuleStem (GHC.Base.Maybe GHC.Base.String)
               LexerTypes.ModuleName
               LexerTypes.RuleTree
    | RuleLeaf
ebcfeb3f65d1ad8ce6721b3836e86fd6
  data RuleUrgParams
    = RuleUrgParams {rpName :: GHC.Base.String,
                     rpGuard :: LexerTypes.Guard,
                     writesToP :: [LexerTypes.ID_Path],
                     preEmpts :: [LexerTypes.ActionPath],
                     doesntPreEmpt :: [LexerTypes.ActionPath],
                     isPreEmptedByP :: [LexerTypes.ActionPath],
                     isntPreEmptedBy :: [LexerTypes.ActionPath]}
f740ec3037dd4ab466b4428a74cfe478
  type Size = GHC.Integer.Type.Integer
3f9e6e7f4ab972c9333f58161739f7c5
  type Spacer = GHC.Base.String
5bc55a56264b01133d205d6e40b8b28c
  type Spacing = GHC.Base.String
6a668caddf4b8e9677117e2028b195e2
  type SpecFalseTree = LexerTypes.SpecificTree
6a668caddf4b8e9677117e2028b195e2
  type SpecTrueTree = LexerTypes.SpecificTree
6a668caddf4b8e9677117e2028b195e2
  data SpecificTree
    = SpecStem LexerTypes.Guard
               (Data.Either.Either LexerTypes.Expression LexerTypes.SpecTrueTree)
               LexerTypes.SpecFalseTree
    | SpecLeaf LexerTypes.Guard
               LexerTypes.TrueExpression
               LexerTypes.FalseExpression
    | SpecEx LexerTypes.Expression
cadc4dd88ae52d1939dfeb3e511aff3a
  data Statement
    = Write LexerTypes.ID_Path
            LexerTypes.Expression
            [LexerTypes.StatementAttribute]
    | MethodCall LexerTypes.ID_Path
                 LexerTypes.MethodName
                 [LexerTypes.Expression]
                 [LexerTypes.StatementAttribute]
    | ActionCall LexerTypes.ActionName [LexerTypes.StatementAttribute]
    | Return LexerTypes.Expression [LexerTypes.StatementAttribute]
    | StructReturn LexerTypes.BSVType
                   [(GHC.Base.String, LexerTypes.Expression)]
                   [LexerTypes.StatementAttribute]
    | If LexerTypes.Guard
         LexerTypes.Then
         LexerTypes.Else
         [LexerTypes.StatementAttribute]
    | PMatchIf LexerTypes.ID_Path
               LexerTypes.ID_Path
               LexerTypes.Statement
               LexerTypes.Statement
               [LexerTypes.StatementAttribute]
    | ForLoop [LexerTypes.Inits]
              LexerTypes.Guard
              [LexerTypes.Increments]
              LexerTypes.Statement
              [LexerTypes.StatementAttribute]
    | Switch LexerTypes.Guard
             [LexerTypes.Case]
             [LexerTypes.StatementAttribute]
    | LocalDec [LexerTypes.LocalVar]
               LexerTypes.Statement
               [LexerTypes.StatementAttribute]
    | StatementBlock [LexerTypes.Statement]
    | Void
5526f020d66208751c85b3afb1bd43de
  data StatementAttribute
    = Split
    | NoSplit
    | Sta_Descending_Urgency [GHC.Base.String]
    | Sta_Execution_Order [GHC.Base.String]
    | Sta_Mutually_Exclusive [GHC.Base.String]
    | Sta_Conflict_Free [GHC.Base.String]
    | Sta_Preempts [GHC.Base.String]
    | Sta_Doc GHC.Base.String
91715c2533b031e3e17b53926696a2a4
  type StructName = GHC.Base.String
ef8c1403579dfb6959943ab5ac261107
  type SubmoduleName = GHC.Base.String
a251cdf0d6f8ac36d2dcd0bc2af1c69d
  type SuperModuleName = GHC.Base.String
1a33403dc4d0fa4bf457b7d2a5245d40
  type TName = GHC.Base.String
b93aef0411d044ff4424aa4a41963594
  type TSPLine = (LexerTypes.Guard, LexerTypes.Expression)
7f14f2539bb3fe623ca474ece2808f47
  type TSPOutVar = (LexerTypes.ID_Path, LexerTypes.Temporal)
8b6d1afccd9c3b1fa2d8d2ad6c723805
  type TSPTable =
    (LexerTypes.TName, LexerTypes.TSPOutVar, LexerTypes.Expression,
     [LexerTypes.Replacement], [GHC.Base.String], [LexerTypes.TSPLine])
c811cfd5a607fccc3baae6462b8eca1f
  data TSPpackage
    = TSPpackage {tName :: GHC.Base.String,
                  typedefs :: [LexerTypes.PVSTypeDef],
                  defInsts :: [LexerTypes.PVSInstDef],
                  varDecs :: [LexerTypes.TVarDec],
                  tsps :: [LexerTypes.TSPTable],
                  tsp_funcs :: [LexerTypes.PVSFunction],
                  macros :: [LexerTypes.PVSMacro]}
e24892224e84f179f5d881ea6ad6b8d1
  type TVarDec = ([GHC.Base.String], LexerTypes.PVSType)
4df2e074d05690b7f852eb8a56267ac6
  data Temporal = N_Time GHC.Types.Int
cadc4dd88ae52d1939dfeb3e511aff3a
  type Then = LexerTypes.Statement
f37fc1f7f628e396311833bcccc3658f
  data TotalTree
    = TotalStem LexerTypes.Guard
                [LexerTypes.Statement]
                LexerTypes.TrueTree
                LexerTypes.FalseTree
    | TotalLeaf LexerTypes.Guard [LexerTypes.Statement]
499eb4930fd8106234e7e1fbef253526
  type Tperm =
    (GHC.Base.Maybe LexerTypes.TVarDec,
     GHC.Base.Maybe LexerTypes.TSPTable,
     GHC.Base.Maybe LexerTypes.PVSTypeDef,
     GHC.Base.Maybe LexerTypes.PVSInstDef,
     GHC.Base.Maybe LexerTypes.PVSFunction,
     GHC.Base.Maybe LexerTypes.PVSMacro)
e001f18988dd656307ef052195e77528
  type TransitionGuard =
    (LexerTypes.RuleName, LexerTypes.ModuleName, LexerTypes.Expression)
321d4bb033873a046e1650695f529c57
  data TransitionTable
    = TransMod LexerTypes.Name [LexerTypes.TransitionTable]
    | TransReg LexerTypes.ID_Path LexerTypes.SpecificTree
    | TransVect LexerTypes.ID_Path
                LexerTypes.Size
                [(LexerTypes.Expression, LexerTypes.SpecificTree)]
    | TransStruct LexerTypes.Name [LexerTypes.TransitionTable]
    | TransDWire LexerTypes.ID_Path
                 LexerTypes.SpecificTree
                 LexerTypes.DefaultValue
    | TransFIFO LexerTypes.ID_Path
                LexerTypes.EnqTree
                LexerTypes.DeqTree
                LexerTypes.ClearTree
c72f515f9be6c428ecd9817f6213f6d2
  data TransitionTableMethods
    = TransModMethods LexerTypes.Name
                      [LexerTypes.TransitionTable]
                      [LexerTypes.MethodApplication]
853751140af520152685e71ddf0e992f
  type TransitionVar = (LexerTypes.PVSType, [GHC.Base.String])
48110a9cdd317f7d31f7d5382813e9a4
  data TreeHeap
    = THeap GHC.Base.String LexerTypes.TotalTree [LexerTypes.TreeHeap]
1c3bedaf622336c682f8b2dcfa318421
  type TrueExpression = LexerTypes.Expression
f37fc1f7f628e396311833bcccc3658f
  type TrueTree = LexerTypes.TotalTree
4d08ca0e73729c67fbd812bf662e0e37
  data UStatement
    = DeclAssign LexerTypes.UType LexerTypes.Name LexerTypes.Expression
    | UAssign LexerTypes.Name LexerTypes.Expression
8a1cde95035b2dfb2cead8c0bc76f244
  type UTArgs =
    [(GHC.Base.String, GHC.Base.Maybe LexerTypes.BSVType)]
e4f1694534b5add5fe23c9bcaf082473
  data UType = U_Int | U_String
316b9113dfa5b6caa88cab7c7ceb0a73
  type UrgIndex = GHC.Types.Int
162bf9d0bb1089190de24d16b16617f0
  type ValueMethod =
    (LexerTypes.MethodName, LexerTypes.ModuleName, GHC.Base.String,
     LexerTypes.Path, LexerTypes.PVSType, LexerTypes.Expression,
     [LexerTypes.ID_Path])
c2b979719dd3c7dfe36e1834bf38f676
  data VectorInit
    = Replicate LexerTypes.Literal | Explicit [LexerTypes.Literal]
6b58178d3226f5dcfa379df74cd7f6b5
  type Writes = [LexerTypes.ID_Path]
0186ec3bfbecf2b1713e4fb3bd0af0b7
  aEq ::
    [LexerTypes.Argument] -> [LexerTypes.Argument] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
7b3adb9e814c886706bb5c400eeb330c
  actionMethodsCalled ::
    LexerTypes.RuleSchedule -> [LexerTypes.Expression]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds12 }) -}
6a9e148802acadaa54114400a09553a4
  actions :: LexerTypes.BSVModuleDec -> [LexerTypes.ActionDec]
  RecSel Left LexerTypes.BSVModuleDec
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLL),1*U(A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVModuleDec) ->
                 case ds of wild { LexerTypes.BSVModuleDec ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds8 }) -}
9d775b0245d04dbf7fab29450b78d2d7
  actionsM :: LexerTypes.PermMod -> [LexerTypes.ActionDec]
  RecSel Left LexerTypes.PermMod
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLLL),1*U(A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.PermMod) ->
                 case ds of wild { LexerTypes.PermMod ds1 ds2 ds3 ds4 ds5 ->
                 ds2 }) -}
6a9e148802acadaa54114400a09553a4
  attributes ::
    LexerTypes.BSVModuleDec -> [LexerTypes.ModuleAttribute]
  RecSel Left LexerTypes.BSVModuleDec
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVModuleDec) ->
                 case ds of wild { LexerTypes.BSVModuleDec ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds6 }) -}
dca7bfb1a37746d89b662b651361e667
  bsv_constants ::
    LexerTypes.BSVPackage -> [LexerTypes.BSVConstantDec]
  RecSel Left LexerTypes.BSVPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVPackage) ->
                 case ds of wild { LexerTypes.BSVPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 ds5 }) -}
dca7bfb1a37746d89b662b651361e667
  bsv_functions :: LexerTypes.BSVPackage -> [LexerTypes.BSVFunction]
  RecSel Left LexerTypes.BSVPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVPackage) ->
                 case ds of wild { LexerTypes.BSVPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 ds9 }) -}
dca7bfb1a37746d89b662b651361e667
  bsv_instDefs :: LexerTypes.BSVPackage -> [LexerTypes.BSVInstDef]
  RecSel Left LexerTypes.BSVPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVPackage) ->
                 case ds of wild { LexerTypes.BSVPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 ds7 }) -}
dca7bfb1a37746d89b662b651361e667
  bsv_macros :: LexerTypes.BSVPackage -> [LexerTypes.BSVMacro]
  RecSel Left LexerTypes.BSVPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVPackage) ->
                 case ds of wild { LexerTypes.BSVPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 ds10 }) -}
dca7bfb1a37746d89b662b651361e667
  bsv_modules :: LexerTypes.BSVPackage -> [LexerTypes.BSVModuleDec]
  RecSel Left LexerTypes.BSVPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVPackage) ->
                 case ds of wild { LexerTypes.BSVPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 ds8 }) -}
dca7bfb1a37746d89b662b651361e667
  bsv_packageName :: LexerTypes.BSVPackage -> LexerTypes.PackageName
  RecSel Left LexerTypes.BSVPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVPackage) ->
                 case ds of wild { LexerTypes.BSVPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 ds1 }) -}
dca7bfb1a37746d89b662b651361e667
  bsv_typedefs :: LexerTypes.BSVPackage -> [LexerTypes.BSVTypeDef]
  RecSel Left LexerTypes.BSVPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVPackage) ->
                 case ds of wild { LexerTypes.BSVPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 ds6 }) -}
7b3adb9e814c886706bb5c400eeb330c
  conflictsWith :: LexerTypes.RuleSchedule -> [LexerTypes.ActionPath]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds13 }) -}
7b3adb9e814c886706bb5c400eeb330c
  dWireReads :: LexerTypes.RuleSchedule -> [LexerTypes.ID_Path]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds7 }) -}
7b3adb9e814c886706bb5c400eeb330c
  dWireWrites :: LexerTypes.RuleSchedule -> [LexerTypes.ID_Path]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds6 }) -}
c811cfd5a607fccc3baae6462b8eca1f
  defInsts :: LexerTypes.TSPpackage -> [LexerTypes.PVSInstDef]
  RecSel Left LexerTypes.TSPpackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.TSPpackage) ->
                 case ds of wild { LexerTypes.TSPpackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds3 }) -}
ebcfeb3f65d1ad8ce6721b3836e86fd6
  doesntPreEmpt ::
    LexerTypes.RuleUrgParams -> [LexerTypes.ActionPath]
  RecSel Left LexerTypes.RuleUrgParams
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLL),1*U(A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleUrgParams) ->
                 case ds of wild { LexerTypes.RuleUrgParams ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds5 }) -}
7b3adb9e814c886706bb5c400eeb330c
  executesAfter :: LexerTypes.RuleSchedule -> [LexerTypes.ActionPath]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds17 }) -}
7b3adb9e814c886706bb5c400eeb330c
  executesBefore ::
    LexerTypes.RuleSchedule -> [LexerTypes.ActionPath]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds18 }) -}
7b3adb9e814c886706bb5c400eeb330c
  fifoClears :: LexerTypes.RuleSchedule -> [LexerTypes.ID_Path]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds10 }) -}
7b3adb9e814c886706bb5c400eeb330c
  fifoDeqs :: LexerTypes.RuleSchedule -> [LexerTypes.ID_Path]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds9 }) -}
7b3adb9e814c886706bb5c400eeb330c
  fifoEnqs :: LexerTypes.RuleSchedule -> [LexerTypes.ID_Path]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds8 }) -}
7b3adb9e814c886706bb5c400eeb330c
  fifoFirsts :: LexerTypes.RuleSchedule -> [LexerTypes.ID_Path]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds11 }) -}
dca7bfb1a37746d89b662b651361e667
  hexFiles :: LexerTypes.BSVPackage -> [LexerTypes.HexFile]
  RecSel Left LexerTypes.BSVPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVPackage) ->
                 case ds of wild { LexerTypes.BSVPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 ds11 }) -}
7b3adb9e814c886706bb5c400eeb330c
  implicitConditions ::
    LexerTypes.RuleSchedule -> [LexerTypes.Expression]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds4 }) -}
dca7bfb1a37746d89b662b651361e667
  imports :: LexerTypes.BSVPackage -> [LexerTypes.PackageName]
  RecSel Left LexerTypes.BSVPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVPackage) ->
                 case ds of wild { LexerTypes.BSVPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 ds2 }) -}
dca7bfb1a37746d89b662b651361e667
  including :: LexerTypes.BSVPackage -> [GHC.Base.String]
  RecSel Left LexerTypes.BSVPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVPackage) ->
                 case ds of wild { LexerTypes.BSVPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 ds3 }) -}
6a9e148802acadaa54114400a09553a4
  instanceName :: LexerTypes.BSVModuleDec -> GHC.Base.String
  RecSel Left LexerTypes.BSVModuleDec
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVModuleDec) ->
                 case ds of wild { LexerTypes.BSVModuleDec ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds2 }) -}
6a9e148802acadaa54114400a09553a4
  instances :: LexerTypes.BSVModuleDec -> [LexerTypes.BSVModuleDec]
  RecSel Left LexerTypes.BSVModuleDec
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVModuleDec) ->
                 case ds of wild { LexerTypes.BSVModuleDec ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds3 }) -}
6a9e148802acadaa54114400a09553a4
  interfaceDecs ::
    LexerTypes.BSVModuleDec -> [LexerTypes.MidModInterfaceDec]
  RecSel Left LexerTypes.BSVModuleDec
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVModuleDec) ->
                 case ds of wild { LexerTypes.BSVModuleDec ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds5 }) -}
6a9e148802acadaa54114400a09553a4
  interfaceName :: LexerTypes.BSVModuleDec -> GHC.Base.String
  RecSel Left LexerTypes.BSVModuleDec
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVModuleDec) ->
                 case ds of wild { LexerTypes.BSVModuleDec ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds4 }) -}
dca7bfb1a37746d89b662b651361e667
  interfaces :: LexerTypes.BSVPackage -> [LexerTypes.InterfaceDec]
  RecSel Left LexerTypes.BSVPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVPackage) ->
                 case ds of wild { LexerTypes.BSVPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 ds4 }) -}
9d775b0245d04dbf7fab29450b78d2d7
  intersM :: LexerTypes.PermMod -> [LexerTypes.MidModInterfaceDec]
  RecSel Left LexerTypes.PermMod
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLLS),1*U(A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.PermMod) ->
                 case ds of wild { LexerTypes.PermMod ds1 ds2 ds3 ds4 ds5 ->
                 ds5 }) -}
ebcfeb3f65d1ad8ce6721b3836e86fd6
  isPreEmptedByP ::
    LexerTypes.RuleUrgParams -> [LexerTypes.ActionPath]
  RecSel Left LexerTypes.RuleUrgParams
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSL),1*U(A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleUrgParams) ->
                 case ds of wild { LexerTypes.RuleUrgParams ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds6 }) -}
7b3adb9e814c886706bb5c400eeb330c
  isPreemptedBy :: LexerTypes.RuleSchedule -> [LexerTypes.ActionPath]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds16 }) -}
ebcfeb3f65d1ad8ce6721b3836e86fd6
  isntPreEmptedBy ::
    LexerTypes.RuleUrgParams -> [LexerTypes.ActionPath]
  RecSel Left LexerTypes.RuleUrgParams
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLS),1*U(A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleUrgParams) ->
                 case ds of wild { LexerTypes.RuleUrgParams ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds7 }) -}
52b42c33714e6e35254811bbee9b25e6
  mEq ::
    LexerTypes.MethodDec -> LexerTypes.MethodDec -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U,1*U,A)><S(LSLL),1*U(A,1*U,1*U,A)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: LexerTypes.MethodDec) (w1 :: LexerTypes.MethodDec) ->
                 case w of ww { (,,,) ww1 ww2 ww3 ww4 ->
                 case w1 of ww5 { (,,,) ww6 ww7 ww8 ww9 ->
                 LexerTypes.$wmEq ww2 ww3 ww7 ww8 } }) -}
6a9e148802acadaa54114400a09553a4
  mName :: LexerTypes.BSVModuleDec -> GHC.Base.String
  RecSel Left LexerTypes.BSVModuleDec
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVModuleDec) ->
                 case ds of wild { LexerTypes.BSVModuleDec ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds1 }) -}
c811cfd5a607fccc3baae6462b8eca1f
  macros :: LexerTypes.TSPpackage -> [LexerTypes.PVSMacro]
  RecSel Left LexerTypes.TSPpackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLS),1*U(A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.TSPpackage) ->
                 case ds of wild { LexerTypes.TSPpackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds7 }) -}
6a9e148802acadaa54114400a09553a4
  methods :: LexerTypes.BSVModuleDec -> [LexerTypes.MethodBody]
  RecSel Left LexerTypes.BSVModuleDec
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVModuleDec) ->
                 case ds of wild { LexerTypes.BSVModuleDec ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds10 }) -}
9d775b0245d04dbf7fab29450b78d2d7
  methodsM :: LexerTypes.PermMod -> [LexerTypes.MethodBody]
  RecSel Left LexerTypes.PermMod
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLSL),1*U(A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.PermMod) ->
                 case ds of wild { LexerTypes.PermMod ds1 ds2 ds3 ds4 ds5 ->
                 ds4 }) -}
58ee1a3540da646a028dad6f00fa6ec3
  mkBSVModule :: LexerTypes.BSVModuleDec
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (LexerTypes.BSVModuleDec
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ LexerTypes.BSVModuleDec)
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ LexerTypes.MidModInterfaceDec)
                   (GHC.Types.[] @ LexerTypes.ModuleAttribute)
                   (GHC.Types.[] @ LexerTypes.BSVstateDec)
                   (GHC.Types.[] @ LexerTypes.ActionDec)
                   (GHC.Types.[] @ LexerTypes.RuleDec)
                   (GHC.Types.[] @ LexerTypes.MethodBody)) -}
7b3adb9e814c886706bb5c400eeb330c
  noConflictsWith ::
    LexerTypes.RuleSchedule -> [LexerTypes.ActionPath]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds14 }) -}
ebcfeb3f65d1ad8ce6721b3836e86fd6
  preEmpts :: LexerTypes.RuleUrgParams -> [LexerTypes.ActionPath]
  RecSel Left LexerTypes.RuleUrgParams
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLL),1*U(A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleUrgParams) ->
                 case ds of wild { LexerTypes.RuleUrgParams ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds4 }) -}
7b3adb9e814c886706bb5c400eeb330c
  preempts :: LexerTypes.RuleSchedule -> [LexerTypes.ActionPath]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds15 }) -}
2ebe3fda021fa922603a337269985adf
  pvs_constants ::
    LexerTypes.PVSPackage -> [LexerTypes.PVSConstantDec]
  RecSel Left LexerTypes.PVSPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLL),1*U(A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.PVSPackage) ->
                 case ds of wild { LexerTypes.PVSPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds2 }) -}
2ebe3fda021fa922603a337269985adf
  pvs_functions :: LexerTypes.PVSPackage -> [LexerTypes.PVSFunction]
  RecSel Left LexerTypes.PVSPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLS),1*U(A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.PVSPackage) ->
                 case ds of wild { LexerTypes.PVSPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds7 }) -}
2ebe3fda021fa922603a337269985adf
  pvs_instantiations ::
    LexerTypes.PVSPackage -> [LexerTypes.PVSInstDef]
  RecSel Left LexerTypes.PVSPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSL),1*U(A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.PVSPackage) ->
                 case ds of wild { LexerTypes.PVSPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds6 }) -}
2ebe3fda021fa922603a337269985adf
  pvs_packageName :: LexerTypes.PVSPackage -> LexerTypes.PackageName
  RecSel Left LexerTypes.PVSPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.PVSPackage) ->
                 case ds of wild { LexerTypes.PVSPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds1 }) -}
2ebe3fda021fa922603a337269985adf
  pvs_state :: LexerTypes.PVSPackage -> [LexerTypes.PVSstateDec]
  RecSel Left LexerTypes.PVSPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLL),1*U(A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.PVSPackage) ->
                 case ds of wild { LexerTypes.PVSPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds5 }) -}
2ebe3fda021fa922603a337269985adf
  pvs_typedefs :: LexerTypes.PVSPackage -> [LexerTypes.PVSTypeDef]
  RecSel Left LexerTypes.PVSPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.PVSPackage) ->
                 case ds of wild { LexerTypes.PVSPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds3 }) -}
7b3adb9e814c886706bb5c400eeb330c
  rGuard :: LexerTypes.RuleSchedule -> LexerTypes.Expression
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds2 }) -}
7b3adb9e814c886706bb5c400eeb330c
  rName :: LexerTypes.RuleSchedule -> LexerTypes.ActionPath
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds1 }) -}
7b3adb9e814c886706bb5c400eeb330c
  rStatements :: LexerTypes.RuleSchedule -> [LexerTypes.Statement]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds3 }) -}
08b3b374ca9923e08b3d8f295257edb0
  rnName :: LexerTypes.RuleNode -> GHC.Base.String
  RecSel Left LexerTypes.RuleNode
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleNode) ->
                 case ds of wild { LexerTypes.RuleNode ds1 ds2 -> ds1 }) -}
08b3b374ca9923e08b3d8f295257edb0
  rnPreempts :: LexerTypes.RuleNode -> [LexerTypes.ActionPath]
  RecSel Left LexerTypes.RuleNode
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleNode) ->
                 case ds of wild { LexerTypes.RuleNode ds1 ds2 -> ds2 }) -}
ebcfeb3f65d1ad8ce6721b3836e86fd6
  rpGuard :: LexerTypes.RuleUrgParams -> LexerTypes.Guard
  RecSel Left LexerTypes.RuleUrgParams
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLL),1*U(A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleUrgParams) ->
                 case ds of wild { LexerTypes.RuleUrgParams ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds2 }) -}
ebcfeb3f65d1ad8ce6721b3836e86fd6
  rpName :: LexerTypes.RuleUrgParams -> GHC.Base.String
  RecSel Left LexerTypes.RuleUrgParams
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleUrgParams) ->
                 case ds of wild { LexerTypes.RuleUrgParams ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds1 }) -}
6a9e148802acadaa54114400a09553a4
  rules :: LexerTypes.BSVModuleDec -> [LexerTypes.RuleDec]
  RecSel Left LexerTypes.BSVModuleDec
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVModuleDec) ->
                 case ds of wild { LexerTypes.BSVModuleDec ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds9 }) -}
9d775b0245d04dbf7fab29450b78d2d7
  rulesM :: LexerTypes.PermMod -> [LexerTypes.RuleDec]
  RecSel Left LexerTypes.PermMod
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSLL),1*U(A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.PermMod) ->
                 case ds of wild { LexerTypes.PermMod ds1 ds2 ds3 ds4 ds5 ->
                 ds3 }) -}
269d6e12c984e7a4de1bdae43d808778
  showRuleHeap ::
    GHC.Base.String -> LexerTypes.RuleHeap -> GHC.Base.String
  {- Arity: 2, Strictness: <S,U><S,1*U(1*U,1*U,1*U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Base.String) (w1 :: LexerTypes.RuleHeap) ->
                 case w1 of ww { LexerTypes.RHeap ww1 ww2 ww3 ->
                 LexerTypes.$wshowRuleHeap w ww1 ww2 ww3 }) -}
6a668caddf4b8e9677117e2028b195e2
  showST ::
    LexerTypes.SpecificTree -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
f25d6572d4b26e945720ce29dde8766e
  showShortened ::
    LexerTypes.SpecificTree -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
f37fc1f7f628e396311833bcccc3658f
  showTT ::
    LexerTypes.TotalTree -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
6a9e148802acadaa54114400a09553a4
  state :: LexerTypes.BSVModuleDec -> [LexerTypes.BSVstateDec]
  RecSel Left LexerTypes.BSVModuleDec
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLL),1*U(A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.BSVModuleDec) ->
                 case ds of wild { LexerTypes.BSVModuleDec ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                 ds7 }) -}
9d775b0245d04dbf7fab29450b78d2d7
  stateM :: LexerTypes.PermMod -> [LexerTypes.BSVstateDec]
  RecSel Left LexerTypes.PermMod
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLLL),1*U(1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.PermMod) ->
                 case ds of wild { LexerTypes.PermMod ds1 ds2 ds3 ds4 ds5 ->
                 ds1 }) -}
c811cfd5a607fccc3baae6462b8eca1f
  tName :: LexerTypes.TSPpackage -> GHC.Base.String
  RecSel Left LexerTypes.TSPpackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLL),1*U(1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.TSPpackage) ->
                 case ds of wild { LexerTypes.TSPpackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds1 }) -}
2ebe3fda021fa922603a337269985adf
  transitions :: LexerTypes.PVSPackage -> [LexerTypes.PVStransition]
  RecSel Left LexerTypes.PVSPackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLL),1*U(A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.PVSPackage) ->
                 case ds of wild { LexerTypes.PVSPackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds4 }) -}
c811cfd5a607fccc3baae6462b8eca1f
  tsp_funcs :: LexerTypes.TSPpackage -> [LexerTypes.PVSFunction]
  RecSel Left LexerTypes.TSPpackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSL),1*U(A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.TSPpackage) ->
                 case ds of wild { LexerTypes.TSPpackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds6 }) -}
c811cfd5a607fccc3baae6462b8eca1f
  tsps :: LexerTypes.TSPpackage -> [LexerTypes.TSPTable]
  RecSel Left LexerTypes.TSPpackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLL),1*U(A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.TSPpackage) ->
                 case ds of wild { LexerTypes.TSPpackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds5 }) -}
c811cfd5a607fccc3baae6462b8eca1f
  typedefs :: LexerTypes.TSPpackage -> [LexerTypes.PVSTypeDef]
  RecSel Left LexerTypes.TSPpackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLL),1*U(A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.TSPpackage) ->
                 case ds of wild { LexerTypes.TSPpackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds2 }) -}
c811cfd5a607fccc3baae6462b8eca1f
  varDecs :: LexerTypes.TSPpackage -> [LexerTypes.TVarDec]
  RecSel Left LexerTypes.TSPpackage
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLL),1*U(A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.TSPpackage) ->
                 case ds of wild { LexerTypes.TSPpackage ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds4 }) -}
7b3adb9e814c886706bb5c400eeb330c
  writesTo :: LexerTypes.RuleSchedule -> [LexerTypes.ID_Path]
  RecSel Left LexerTypes.RuleSchedule
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleSchedule) ->
                 case ds of wild { LexerTypes.RuleSchedule ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds5 }) -}
ebcfeb3f65d1ad8ce6721b3836e86fd6
  writesToP :: LexerTypes.RuleUrgParams -> [LexerTypes.ID_Path]
  RecSel Left LexerTypes.RuleUrgParams
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLL),1*U(A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: LexerTypes.RuleUrgParams) ->
                 case ds of wild { LexerTypes.RuleUrgParams ds1 ds2 ds3 ds4 ds5 ds6 ds7 ->
                 ds3 }) -}
instance GHC.Classes.Eq [LexerTypes.ActionAttribute]
  = LexerTypes.$fEqActionAttribute
instance GHC.Classes.Eq [LexerTypes.ActionPath]
  = LexerTypes.$fEqActionPath
instance GHC.Classes.Eq [LexerTypes.ArgumentAttribute]
  = LexerTypes.$fEqArgumentAttribute
instance GHC.Classes.Eq [LexerTypes.BSVMacro]
  = LexerTypes.$fEqBSVMacro
instance GHC.Classes.Eq [LexerTypes.BSVModuleDec]
  = LexerTypes.$fEqBSVModuleDec
instance GHC.Classes.Eq [LexerTypes.BSVPackage]
  = LexerTypes.$fEqBSVPackage
instance GHC.Classes.Eq [LexerTypes.BSVType]
  = LexerTypes.$fEqBSVType
instance GHC.Classes.Eq [LexerTypes.BSVTypeDef]
  = LexerTypes.$fEqBSVTypeDef
instance GHC.Classes.Eq [LexerTypes.BSVstateDec]
  = LexerTypes.$fEqBSVstateDec
instance GHC.Classes.Eq [LexerTypes.Expression]
  = LexerTypes.$fEqExpression
instance GHC.Classes.Eq [LexerTypes.FifoType]
  = LexerTypes.$fEqFifoType
instance GHC.Classes.Eq [LexerTypes.ID_Path]
  = LexerTypes.$fEqID_Path
instance GHC.Classes.Eq [LexerTypes.InterfaceAttribute]
  = LexerTypes.$fEqInterfaceAttribute
instance GHC.Classes.Eq [LexerTypes.InvokationTree]
  = LexerTypes.$fEqInvokationTree
instance GHC.Classes.Eq [LexerTypes.Lit] = LexerTypes.$fEqLit
instance GHC.Classes.Eq [LexerTypes.MaybeIDTag]
  = LexerTypes.$fEqMaybeIDTag
instance GHC.Classes.Eq [LexerTypes.MaybeTag]
  = LexerTypes.$fEqMaybeTag
instance GHC.Classes.Eq [LexerTypes.MethodBodyAttribute]
  = LexerTypes.$fEqMethodBodyAttribute
instance GHC.Classes.Eq [LexerTypes.MethodDecAttribute]
  = LexerTypes.$fEqMethodDecAttribute
instance GHC.Classes.Eq [LexerTypes.Mode] = LexerTypes.$fEqMode
instance GHC.Classes.Eq [LexerTypes.ModuleAttribute]
  = LexerTypes.$fEqModuleAttribute
instance GHC.Classes.Eq [LexerTypes.PVSType]
  = LexerTypes.$fEqPVSType
instance GHC.Classes.Eq [LexerTypes.PVSTypeDef]
  = LexerTypes.$fEqPVSTypeDef
instance GHC.Classes.Eq [LexerTypes.PVSstate]
  = LexerTypes.$fEqPVSstate
instance GHC.Classes.Eq [LexerTypes.RegFileLoader]
  = LexerTypes.$fEqRegFileLoader
instance GHC.Classes.Eq [LexerTypes.ReturnType]
  = LexerTypes.$fEqReturnType
instance GHC.Classes.Eq [LexerTypes.RuleAttribute]
  = LexerTypes.$fEqRuleAttribute
instance GHC.Classes.Eq [LexerTypes.RuleHeap]
  = LexerTypes.$fEqRuleHeap
instance GHC.Classes.Eq [LexerTypes.RuleNode]
  = LexerTypes.$fEqRuleNode
instance GHC.Classes.Eq [LexerTypes.RuleSchedule]
  = LexerTypes.$fEqRuleSchedule
instance GHC.Classes.Eq [LexerTypes.RuleTree]
  = LexerTypes.$fEqRuleTree
instance GHC.Classes.Eq [LexerTypes.SpecificTree]
  = LexerTypes.$fEqSpecificTree
instance GHC.Classes.Eq [LexerTypes.Statement]
  = LexerTypes.$fEqStatement
instance GHC.Classes.Eq [LexerTypes.StatementAttribute]
  = LexerTypes.$fEqStatementAttribute
instance GHC.Classes.Eq [LexerTypes.TSPpackage]
  = LexerTypes.$fEqTSPpackage
instance GHC.Classes.Eq [LexerTypes.Temporal]
  = LexerTypes.$fEqTemporal
instance GHC.Classes.Eq [LexerTypes.TotalTree]
  = LexerTypes.$fEqTotalTree
instance GHC.Classes.Eq [LexerTypes.TransitionTable]
  = LexerTypes.$fEqTransitionTable
instance GHC.Classes.Eq [LexerTypes.TreeHeap]
  = LexerTypes.$fEqTreeHeap
instance GHC.Classes.Eq [LexerTypes.UStatement]
  = LexerTypes.$fEqUStatement
instance GHC.Classes.Eq [LexerTypes.UType] = LexerTypes.$fEqUType
instance GHC.Classes.Eq [LexerTypes.VectorInit]
  = LexerTypes.$fEqVectorInit
instance GHC.Classes.Ord [LexerTypes.BSVType]
  = LexerTypes.$fOrdBSVType
instance GHC.Classes.Ord [LexerTypes.Expression]
  = LexerTypes.$fOrdExpression
instance GHC.Classes.Ord [LexerTypes.ID_Path]
  = LexerTypes.$fOrdID_Path
instance GHC.Classes.Ord [LexerTypes.Lit] = LexerTypes.$fOrdLit
instance GHC.Classes.Ord [LexerTypes.MaybeIDTag]
  = LexerTypes.$fOrdMaybeIDTag
instance GHC.Classes.Ord [LexerTypes.MaybeTag]
  = LexerTypes.$fOrdMaybeTag
instance GHC.Classes.Ord [LexerTypes.PVSType]
  = LexerTypes.$fOrdPVSType
instance GHC.Show.Show [LexerTypes.ActionAttribute]
  = LexerTypes.$fShowActionAttribute
instance GHC.Show.Show [LexerTypes.ActionPath]
  = LexerTypes.$fShowActionPath
instance GHC.Show.Show [LexerTypes.ArgumentAttribute]
  = LexerTypes.$fShowArgumentAttribute
instance GHC.Show.Show [LexerTypes.BSVMacro]
  = LexerTypes.$fShowBSVMacro
instance GHC.Show.Show [LexerTypes.BSVModuleDec]
  = LexerTypes.$fShowBSVModuleDec
instance GHC.Show.Show [LexerTypes.BSVPackage]
  = LexerTypes.$fShowBSVPackage
instance GHC.Show.Show [LexerTypes.BSVType]
  = LexerTypes.$fShowBSVType
instance GHC.Show.Show [LexerTypes.BSVTypeDef]
  = LexerTypes.$fShowBSVTypeDef
instance GHC.Show.Show [LexerTypes.BSVstateDec]
  = LexerTypes.$fShowBSVstateDec
instance GHC.Show.Show [LexerTypes.Expression]
  = LexerTypes.$fShowExpression
instance GHC.Show.Show [LexerTypes.FifoType]
  = LexerTypes.$fShowFifoType
instance GHC.Show.Show [LexerTypes.ID_Path]
  = LexerTypes.$fShowID_Path
instance GHC.Show.Show [LexerTypes.InterfaceAttribute]
  = LexerTypes.$fShowInterfaceAttribute
instance GHC.Show.Show [LexerTypes.InvokationTree]
  = LexerTypes.$fShowInvokationTree
instance GHC.Show.Show [LexerTypes.Lit] = LexerTypes.$fShowLit
instance GHC.Show.Show [LexerTypes.MaybeIDTag]
  = LexerTypes.$fShowMaybeIDTag
instance GHC.Show.Show [LexerTypes.MaybeTag]
  = LexerTypes.$fShowMaybeTag
instance GHC.Show.Show [LexerTypes.MethodBodyAttribute]
  = LexerTypes.$fShowMethodBodyAttribute
instance GHC.Show.Show [LexerTypes.MethodDecAttribute]
  = LexerTypes.$fShowMethodDecAttribute
instance GHC.Show.Show [LexerTypes.Mode] = LexerTypes.$fShowMode
instance GHC.Show.Show [LexerTypes.ModuleAttribute]
  = LexerTypes.$fShowModuleAttribute
instance GHC.Show.Show [LexerTypes.PVSPackage]
  = LexerTypes.$fShowPVSPackage
instance GHC.Show.Show [LexerTypes.PVSType]
  = LexerTypes.$fShowPVSType
instance GHC.Show.Show [LexerTypes.PVSTypeDef]
  = LexerTypes.$fShowPVSTypeDef
instance GHC.Show.Show [LexerTypes.PVSstate]
  = LexerTypes.$fShowPVSstate
instance GHC.Show.Show [LexerTypes.PermMod]
  = LexerTypes.$fShowPermMod
instance GHC.Show.Show [LexerTypes.RegFileLoader]
  = LexerTypes.$fShowRegFileLoader
instance GHC.Show.Show [LexerTypes.ReturnType]
  = LexerTypes.$fShowReturnType
instance GHC.Show.Show [LexerTypes.RuleAttribute]
  = LexerTypes.$fShowRuleAttribute
instance GHC.Show.Show [LexerTypes.RuleHeap]
  = LexerTypes.$fShowRuleHeap
instance GHC.Show.Show [LexerTypes.RuleNode]
  = LexerTypes.$fShowRuleNode
instance GHC.Show.Show [LexerTypes.RuleSchedule]
  = LexerTypes.$fShowRuleSchedule
instance GHC.Show.Show [LexerTypes.RuleTree]
  = LexerTypes.$fShowRuleTree
instance GHC.Show.Show [LexerTypes.RuleUrgParams]
  = LexerTypes.$fShowRuleUrgParams
instance GHC.Show.Show [LexerTypes.SpecificTree]
  = LexerTypes.$fShowSpecificTree
instance GHC.Show.Show [LexerTypes.Statement]
  = LexerTypes.$fShowStatement
instance GHC.Show.Show [LexerTypes.StatementAttribute]
  = LexerTypes.$fShowStatementAttribute
instance GHC.Show.Show [LexerTypes.TSPpackage]
  = LexerTypes.$fShowTSPpackage
instance GHC.Show.Show [LexerTypes.Temporal]
  = LexerTypes.$fShowTemporal
instance GHC.Show.Show [LexerTypes.TotalTree]
  = LexerTypes.$fShowTotalTree
instance GHC.Show.Show [LexerTypes.TransitionTable]
  = LexerTypes.$fShowTransitionTable
instance GHC.Show.Show [LexerTypes.TransitionTableMethods]
  = LexerTypes.$fShowTransitionTableMethods
instance GHC.Show.Show [LexerTypes.TreeHeap]
  = LexerTypes.$fShowTreeHeap
instance GHC.Show.Show [LexerTypes.UStatement]
  = LexerTypes.$fShowUStatement
instance GHC.Show.Show [LexerTypes.UType] = LexerTypes.$fShowUType
instance GHC.Show.Show [LexerTypes.VectorInit]
  = LexerTypes.$fShowVectorInit
"SPEC/LexerTypes $fEq(,) @ [Char] @ [Char]" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                     [GHC.Types.Char])
                                                            (v :: GHC.Classes.Eq [GHC.Types.Char])
  GHC.Classes.$fEq(,) @ [GHC.Types.Char] @ [GHC.Types.Char] v v1
  = LexerTypes.$fEqBSVPackage_$s$fEq(,)
"SPEC/LexerTypes $fEq[] @ (InterfaceName, String)" [orphan] forall (v :: GHC.Classes.Eq
                                                                           (LexerTypes.InterfaceName,
                                                                            GHC.Base.String))
  GHC.Classes.$fEq[] @ (LexerTypes.InterfaceName, GHC.Base.String) v
  = LexerTypes.$fEqBSVPackage_$s$fEq[]2
"SPEC/LexerTypes $fEq[] @ ActionAttribute" forall (v :: GHC.Classes.Eq
                                                          LexerTypes.ActionAttribute)
  GHC.Classes.$fEq[] @ LexerTypes.ActionAttribute v
  = LexerTypes.$s$fEq[]
"SPEC/LexerTypes $fEq[] @ ArgumentAttribute" forall (v :: GHC.Classes.Eq
                                                            LexerTypes.ArgumentAttribute)
  GHC.Classes.$fEq[] @ LexerTypes.ArgumentAttribute v
  = LexerTypes.$fEqBSVPackage_$s$fEq[]
"SPEC/LexerTypes $fEq[] @ InterfaceAttribute" forall (v :: GHC.Classes.Eq
                                                             LexerTypes.InterfaceAttribute)
  GHC.Classes.$fEq[] @ LexerTypes.InterfaceAttribute v
  = LexerTypes.$fEqBSVPackage_$s$fEq[]1
"SPEC/LexerTypes $fEq[] @ MethodBodyAttribute" forall (v :: GHC.Classes.Eq
                                                              LexerTypes.MethodBodyAttribute)
  GHC.Classes.$fEq[] @ LexerTypes.MethodBodyAttribute v
  = LexerTypes.$s$fEq[]2
"SPEC/LexerTypes $fEq[] @ MethodDecAttribute" forall (v :: GHC.Classes.Eq
                                                             LexerTypes.MethodDecAttribute)
  GHC.Classes.$fEq[] @ LexerTypes.MethodDecAttribute v
  = LexerTypes.$fEqBSVPackage_$s$fEq[]3
"SPEC/LexerTypes $fEq[] @ RuleAttribute" forall (v :: GHC.Classes.Eq
                                                        LexerTypes.RuleAttribute)
  GHC.Classes.$fEq[] @ LexerTypes.RuleAttribute v
  = LexerTypes.$s$fEq[]1
"SPEC/LexerTypes $fEq[]_$c/= @ (InterfaceName, String)" [orphan] forall ($dEq13 :: GHC.Classes.Eq
                                                                                     (LexerTypes.InterfaceName,
                                                                                      GHC.Base.String))
  GHC.Classes.$fEq[]_$c/= @ (LexerTypes.InterfaceName,
                             GHC.Base.String)
                          $dEq13
  = LexerTypes.$fEqBSVPackage_$s$fEq[]_$c/=2
"SPEC/LexerTypes $fEq[]_$c/= @ ActionAttribute" forall ($dEq13 :: GHC.Classes.Eq
                                                                    LexerTypes.ActionAttribute)
  GHC.Classes.$fEq[]_$c/= @ LexerTypes.ActionAttribute $dEq13
  = LexerTypes.$s$fEq[]_$s$fEq[]_$c/=
"SPEC/LexerTypes $fEq[]_$c/= @ ArgumentAttribute" forall ($dEq13 :: GHC.Classes.Eq
                                                                      LexerTypes.ArgumentAttribute)
  GHC.Classes.$fEq[]_$c/= @ LexerTypes.ArgumentAttribute $dEq13
  = LexerTypes.$fEqBSVPackage_$s$fEq[]_$c/=
"SPEC/LexerTypes $fEq[]_$c/= @ InterfaceAttribute" forall ($dEq13 :: GHC.Classes.Eq
                                                                       LexerTypes.InterfaceAttribute)
  GHC.Classes.$fEq[]_$c/= @ LexerTypes.InterfaceAttribute $dEq13
  = LexerTypes.$fEqBSVPackage_$s$fEq[]_$c/=1
"SPEC/LexerTypes $fEq[]_$c/= @ MethodBodyAttribute" forall ($dEq13 :: GHC.Classes.Eq
                                                                        LexerTypes.MethodBodyAttribute)
  GHC.Classes.$fEq[]_$c/= @ LexerTypes.MethodBodyAttribute $dEq13
  = LexerTypes.$s$fEq[]_$s$fEq[]_$c/=2
"SPEC/LexerTypes $fEq[]_$c/= @ MethodDecAttribute" forall ($dEq13 :: GHC.Classes.Eq
                                                                       LexerTypes.MethodDecAttribute)
  GHC.Classes.$fEq[]_$c/= @ LexerTypes.MethodDecAttribute $dEq13
  = LexerTypes.$fEqBSVPackage_$s$fEq[]_$c/=3
"SPEC/LexerTypes $fEq[]_$c/= @ RuleAttribute" forall ($dEq13 :: GHC.Classes.Eq
                                                                  LexerTypes.RuleAttribute)
  GHC.Classes.$fEq[]_$c/= @ LexerTypes.RuleAttribute $dEq13
  = LexerTypes.$s$fEq[]_$s$fEq[]_$c/=1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

